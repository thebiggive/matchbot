Escaped mutants:
================

1) /home/barney/projects/matchbot/src/Application/Actions/Action.php:72    [M] FalseValue

--- Original
+++ New
@@ @@
      *                                      avoid noise from known issues.
      * @return Response with 400 HTTP response code.
      */
-    protected function validationError(Response $response, string $logMessage, ?string $publicMessage = null, bool $reduceSeverity = false) : Response
+    protected function validationError(Response $response, string $logMessage, ?string $publicMessage = null, bool $reduceSeverity = true) : Response
     {
         if ($reduceSeverity) {
             $this->logger->info($logMessage);


2) /home/barney/projects/matchbot/src/Application/Actions/Action.php:74    [M] IfNegation

--- Original
+++ New
@@ @@
      */
     protected function validationError(Response $response, string $logMessage, ?string $publicMessage = null, bool $reduceSeverity = false) : Response
     {
-        if ($reduceSeverity) {
+        if (!$reduceSeverity) {
             $this->logger->info($logMessage);
         } else {
             $this->logger->warning($logMessage);


3) /home/barney/projects/matchbot/src/Application/Actions/Action.php:75    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function validationError(Response $response, string $logMessage, ?string $publicMessage = null, bool $reduceSeverity = false) : Response
     {
         if ($reduceSeverity) {
-            $this->logger->info($logMessage);
+            
         } else {
             $this->logger->warning($logMessage);
         }


4) /home/barney/projects/matchbot/src/Application/Actions/Action.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if ($reduceSeverity) {
             $this->logger->info($logMessage);
         } else {
-            $this->logger->warning($logMessage);
+            
         }
         $error = new ActionError(ActionError::BAD_REQUEST, $publicMessage ?? $logMessage);
         return $this->respond($response, new ActionPayload(400, null, $error));


5) /home/barney/projects/matchbot/src/Application/Actions/ActionPayload.php:14    [M] DecrementInteger

--- Original
+++ New
@@ @@
 class ActionPayload implements JsonSerializable
 {
     #[Pure]
-    public function __construct(private int $statusCode = 200, private array|object|null $data = null, private ?ActionError $error = null)
+    public function __construct(private int $statusCode = 199, private array|object|null $data = null, private ?ActionError $error = null)
     {
     }
     /**


6) /home/barney/projects/matchbot/src/Application/Actions/ActionPayload.php:14    [M] IncrementInteger

--- Original
+++ New
@@ @@
 class ActionPayload implements JsonSerializable
 {
     #[Pure]
-    public function __construct(private int $statusCode = 200, private array|object|null $data = null, private ?ActionError $error = null)
+    public function __construct(private int $statusCode = 201, private array|object|null $data = null, private ?ActionError $error = null)
     {
     }
     /**


7) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:51    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $allPaymentMethodsOfCustomer = $this->stripeClient->customers->allPaymentMethods($customerId)->toArray()['data'];
         $allCustomersPaymentMethodIds = array_map(static fn(array $pm): string => $pm['id'], $allPaymentMethodsOfCustomer);
         if (!in_array($paymentMethodId, $allCustomersPaymentMethodIds, true)) {
-            $this->logger->warning("Refusing to delete stripe payment method as not found for customer", compact('customerId', 'paymentMethodId'));
+            
             return $this->respondWithData($response, ['error' => 'Payment method not found'], StatusCodeInterface::STATUS_BAD_REQUEST);
         }
         try {


8) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:58    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $allCustomersPaymentMethodIds = array_map(static fn(array $pm): string => $pm['id'], $allPaymentMethodsOfCustomer);
         if (!in_array($paymentMethodId, $allCustomersPaymentMethodIds, true)) {
             $this->logger->warning("Refusing to delete stripe payment method as not found for customer", compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => 'Payment method not found'], StatusCodeInterface::STATUS_BAD_REQUEST);
+            return $this->respondWithData($response, [], StatusCodeInterface::STATUS_BAD_REQUEST);
         }
         try {
             $this->stripeClient->paymentMethods->detach($paymentMethodId);


9) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:67    [M] DecrementInteger

--- Original
+++ New
@@ @@
     protected function action(Request $request, Response $response, array $args) : Response
     {
         try {
-            $requestBody = json_decode($request->getBody()->getContents(), true, 512, JSON_THROW_ON_ERROR);
+            $requestBody = json_decode($request->getBody()->getContents(), true, 511, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
             throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }


10) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:67    [M] IncrementInteger

--- Original
+++ New
@@ @@
     protected function action(Request $request, Response $response, array $args) : Response
     {
         try {
-            $requestBody = json_decode($request->getBody()->getContents(), true, 512, JSON_THROW_ON_ERROR);
+            $requestBody = json_decode($request->getBody()->getContents(), true, 513, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
             throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }


11) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         \assert(is_array($requestBody));
         $pamentMethodId = $requestBody['stripePaymentMethodId'];
         \assert(is_string($pamentMethodId));
-        $this->entityManager->beginTransaction();
+        
         $donation = $this->donationRepository->findAndLockOneBy(['uuid' => $args['donationId']]);
         if (!$donation) {
             throw new NotFoundException();


12) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:129    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->stripeClient->paymentIntents->confirm($paymentIntentId, ['payment_method' => $pamentMethodId]);
         } catch (CardException $exception) {
             $exceptionClass = get_class($exception);
-            $this->logger->info(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
+            
             $this->entityManager->rollback();
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode(), 'decline_code' => $exception->getDeclineCode()]], 402);
         } catch (InvalidRequestException $exception) {


13) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:137    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         } catch (CardException $exception) {
             $exceptionClass = get_class($exception);
             $this->logger->info(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
-            $this->entityManager->rollback();
+            
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode(), 'decline_code' => $exception->getDeclineCode()]], 402);
         } catch (InvalidRequestException $exception) {
             // We've seen card test bots, and no humans, try to reuse payment methods like this as of Oct '23. For now


14) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:157    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // not be used again. To use a PaymentMethod multiple times, you must attach it to a Customer first."
             $paymentMethodReuseAttempted = str_contains($exception->getMessage(), 'The provided PaymentMethod was previously used');
             if ($paymentMethodReuseAttempted) {
-                $this->logger->warning(sprintf('Stripe InvalidRequestException on Confirm for donation %s (%s): %s', $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
+                
                 $this->entityManager->rollback();
                 return new JsonResponse(['error' => ['message' => 'Payment method cannot be used again', 'code' => $exception->getStripeCode()]], 402);
             }


15) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:164    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $paymentMethodReuseAttempted = str_contains($exception->getMessage(), 'The provided PaymentMethod was previously used');
             if ($paymentMethodReuseAttempted) {
                 $this->logger->warning(sprintf('Stripe InvalidRequestException on Confirm for donation %s (%s): %s', $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
-                $this->entityManager->rollback();
+                
                 return new JsonResponse(['error' => ['message' => 'Payment method cannot be used again', 'code' => $exception->getStripeCode()]], 402);
             }
             if (!$this->errorMessageFromStripeIsExpected($exception)) {


16) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:196    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->entityManager->rollback();
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
-            $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
+            
             $this->entityManager->rollback();
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 500);
         }


17) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:204    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
-            $this->entityManager->rollback();
+            
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 500);
         }
         $updatedIntent = $this->stripeClient->paymentIntents->retrieve($paymentIntentId);


18) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:216    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 500);
         }
         $updatedIntent = $this->stripeClient->paymentIntents->retrieve($paymentIntentId);
-        $this->entityManager->flush();
+        
         return new JsonResponse(['paymentIntent' => ['status' => $updatedIntent->status, 'client_secret' => $updatedIntent->status === 'requires_action' ? $updatedIntent->client_secret : null]]);
     }
 }


19) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     #[Pure]
     public function __construct(private StripeClient $stripeClient, LoggerInterface $logger)
     {
-        parent::__construct($logger);
+        
     }
     protected function action(Request $request, Response $response, array $args) : Response
     {


20) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:62    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $body = (string) $request->getBody();
         // We don't need to know the details inside the billing details - we are just a thin layer between the front end
         // and Stripe here.
-        $newBillingDetails = json_decode($body, true, 512, \JSON_THROW_ON_ERROR);
+        $newBillingDetails = json_decode($body, true, 511, \JSON_THROW_ON_ERROR);
         assert(is_array($newBillingDetails));
         try {
             // see https://stripe.com/docs/api/payment_methods/update


21) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:62    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $body = (string) $request->getBody();
         // We don't need to know the details inside the billing details - we are just a thin layer between the front end
         // and Stripe here.
-        $newBillingDetails = json_decode($body, true, 512, \JSON_THROW_ON_ERROR);
+        $newBillingDetails = json_decode($body, true, 513, \JSON_THROW_ON_ERROR);
         assert(is_array($newBillingDetails));
         try {
             // see https://stripe.com/docs/api/payment_methods/update


22) /home/barney/projects/matchbot/src/Application/Auth/ErrorTrait.php:18    [M] IfNegation

--- Original
+++ New
@@ @@
 {
     protected function unauthorised(LoggerInterface $logger, bool $likelyBot, ServerRequestInterface $request) : void
     {
-        if ($likelyBot) {
+        if (!$likelyBot) {
             // We've seen traffic with no JWTs from crawlers etc. before so don't
             // want to log this as a warning.
             $logger->info('Unauthorised – following bot-like patterns');


23) /home/barney/projects/matchbot/src/Application/Auth/ErrorTrait.php:21    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function unauthorised(LoggerInterface $logger, bool $likelyBot, ServerRequestInterface $request) : void
     {
         if ($likelyBot) {
-            // We've seen traffic with no JWTs from crawlers etc. before so don't
-            // want to log this as a warning.
-            $logger->info('Unauthorised – following bot-like patterns');
+            
         } else {
             $logger->warning('Unauthorised');
         }


24) /home/barney/projects/matchbot/src/Application/Auth/ErrorTrait.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // want to log this as a warning.
             $logger->info('Unauthorised – following bot-like patterns');
         } else {
-            $logger->warning('Unauthorised');
+            
         }
         throw new HttpUnauthorizedException($request, 'Unauthorised');
     }
 }


25) /home/barney/projects/matchbot/src/Application/Auth/PersonWithPasswordAuthMiddleware.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function checkCompleteness(ServerRequestInterface $request) : void
     {
         if (!$this->token->isComplete($this->jws)) {
-            $this->logger->error('JWT error: not complete');
+            
             $this->unauthorised($this->logger, false, $request);
         }
     }
 }


26) /home/barney/projects/matchbot/src/Application/Auth/PersonWithPasswordAuthMiddleware.php:23    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         if (!$this->token->isComplete($this->jws)) {
             $this->logger->error('JWT error: not complete');
-            $this->unauthorised($this->logger, false, $request);
+            $this->unauthorised($this->logger, true, $request);
         }
     }
 }


27) /home/barney/projects/matchbot/src/Application/Commands/ClaimGiftAid.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDescription('Sends applicable donations to ClaimBot for HMRC Gift Aid claims');
+        
         $this->addOption('with-resends', null, InputOption::VALUE_NONE, 'Tells the command to send donations again, even if they were queued before. Non-Production only');
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int


28) /home/barney/projects/matchbot/src/Application/Commands/ClaimGiftAid.php:57    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             foreach ($toClaim as $donation) {
                 $stamps = [new BusNameStamp('claimbot.donation.claim'), new TransportMessageIdStamp("claimbot.donation.claim.{$donation->getUuid()}")];
                 $this->bus->dispatch(new Envelope($donation->toClaimBotModel(), $stamps));
-                $donation->setTbgGiftAidRequestQueuedAt(new \DateTime());
+                
                 $this->entityManager->persist($donation);
             }
             $this->entityManager->flush();


29) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDescription('Deletes unused and likely-non-customer-deletable payment methods from Stripe');
+        
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {


30) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:57    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
         // so this `query` covers conditions (1) and (2) from the class doc block.
         $customers = $this->stripeClient->customers->search(['query' => "created<{$oneDayAgo} and metadata['hasPasswordSince']:null and metadata['paymentMethodsCleared']:null", 'limit' => static::STRIPE_PAGE_SIZE]);
         foreach ($customers->autoPagingIterator() as $customer) {
-            if ($customerCount >= self::MAX_CUSTOMER_COUNT_TO_DETATCH_PER_RUN) {
+            if ($customerCount > self::MAX_CUSTOMER_COUNT_TO_DETATCH_PER_RUN) {
                 break;
             }
             $customerCount++;


31) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:72    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // Get all *card* type payment methods for this customer – condition (3).
             $paymentMethods = $this->stripeClient->paymentMethods->all(['customer' => $customer->id, 'type' => 'card', 'limit' => static::STRIPE_PAGE_SIZE]);
             foreach ($paymentMethods->autoPagingIterator() as $paymentMethod) {
-                // Soft-delete / prevent reuse of the payment method.
-                $this->logger->info(sprintf('Detaching payment method %s, previously of customer %s', $paymentMethod->id, $customer->id));
+                
                 $this->stripeClient->paymentMethods->detach($paymentMethod->id);
                 $methodsDeleted++;
             }


32) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:88    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $this->stripeClient->customers->update($customer->id, ['metadata' => ['paymentMethodsCleared' => $this->initDate->format('Y-m-d H:i:s')]]);
         }
         $timeTaken = microtime(true) - $startTime;
-        $timeTaken = round($timeTaken, 2);
+        $timeTaken = round($timeTaken, 1);
         $output->writeln("Deleted {$methodsDeleted} payment methods from Stripe, having checked {$customerCount} customers. Time Taken: {$timeTaken}s");
         return 0;
     }
 }


33) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:88    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $this->stripeClient->customers->update($customer->id, ['metadata' => ['paymentMethodsCleared' => $this->initDate->format('Y-m-d H:i:s')]]);
         }
         $timeTaken = microtime(true) - $startTime;
-        $timeTaken = round($timeTaken, 2);
+        $timeTaken = round($timeTaken, 3);
         $output->writeln("Deleted {$methodsDeleted} payment methods from Stripe, having checked {$customerCount} customers. Time Taken: {$timeTaken}s");
         return 0;
     }
 }


34) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:88    [M] RoundingFamily

--- Original
+++ New
@@ @@
             $this->stripeClient->customers->update($customer->id, ['metadata' => ['paymentMethodsCleared' => $this->initDate->format('Y-m-d H:i:s')]]);
         }
         $timeTaken = microtime(true) - $startTime;
-        $timeTaken = round($timeTaken, 2);
+        $timeTaken = floor($timeTaken);
         $output->writeln("Deleted {$methodsDeleted} payment methods from Stripe, having checked {$customerCount} customers. Time Taken: {$timeTaken}s");
         return 0;
     }
 }


35) /home/barney/projects/matchbot/src/Application/Commands/ExpireMatchFunds.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDescription('Frees up match funding from stale Pending donations');
+        
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {


36) /home/barney/projects/matchbot/src/Application/Commands/PushDonations.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDescription('Pushes details of any new or updated donations not yet synced to Salesforce');
+        
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {


37) /home/barney/projects/matchbot/src/Application/Commands/ResetMatching.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDescription('Delete fund balance data from the matching adapter');
+        
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {


38) /home/barney/projects/matchbot/src/Application/Messenger/Handler/GiftAidResultHandler.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function __invoke(Messages\Donation $donationMessage) : void
     {
-        $this->logger->info(sprintf('Donation ID %s Gift Aid claim result returned by ClaimBot', $donationMessage->id));
+        
         /** @var Donation $donation */
         $donation = $this->donationRepository->findOneBy(['uuid' => $donationMessage->id]);
         if ($donationMessage->response_success === false) {


39) /home/barney/projects/matchbot/src/Domain/Charity.php:103    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->updatedAt = $time;
         $this->createdAt = $time;
-        $this->setSalesforceId($salesforceId);
+        
         // every charity originates as pulled from SF.
         $this->updateFromSfPull(charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $regulator, regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
     }


40) /home/barney/projects/matchbot/src/Domain/Charity.php:201    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         $this->regulatorNumber = $regulatorNumber;
     }
-    public function setTbgApprovedToClaimGiftAid(bool $tbgApprovedToClaimGiftAid) : void
+    protected function setTbgApprovedToClaimGiftAid(bool $tbgApprovedToClaimGiftAid) : void
     {
         $this->tbgApprovedToClaimGiftAid = $tbgApprovedToClaimGiftAid;
     }


41) /home/barney/projects/matchbot/src/Domain/Charity.php:209    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @throws \UnexpectedValueException if $giftAidOnboardingStatus is not listed in self::POSSIBLE_GIFT_AID_STATUSES
      */
-    public function updateFromSfPull(string $charityName, ?string $stripeAccountId, ?string $hmrcReferenceNumber, ?string $giftAidOnboardingStatus, ?string $regulator, ?string $regulatorNumber, DateTime $time) : void
+    protected function updateFromSfPull(string $charityName, ?string $stripeAccountId, ?string $hmrcReferenceNumber, ?string $giftAidOnboardingStatus, ?string $regulator, ?string $regulatorNumber, DateTime $time) : void
     {
         if (!is_null($giftAidOnboardingStatus) && !in_array($giftAidOnboardingStatus, self::POSSIBLE_GIFT_AID_STATUSES, true)) {
             throw new \UnexpectedValueException();


42) /home/barney/projects/matchbot/src/Domain/Charity.php:223    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             throw new \UnexpectedValueException();
         }
         $this->setName($charityName);
-        $this->setStripeAccountId($stripeAccountId);
+        
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);


43) /home/barney/projects/matchbot/src/Domain/Charity.php:226    [M] LogicalNot

--- Original
+++ New
@@ @@
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
-        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
+        $tbgCanClaimGiftAid = empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);


44) /home/barney/projects/matchbot/src/Domain/Charity.php:226    [M] LogicalAnd

--- Original
+++ New
@@ @@
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
-        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
+        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) || in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);


45) /home/barney/projects/matchbot/src/Domain/Charity.php:226    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
-        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
+        $tbgCanClaimGiftAid = empty($hmrcReferenceNumber) && !in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);


46) /home/barney/projects/matchbot/src/Domain/Charity.php:226    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
-        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
+        $tbgCanClaimGiftAid = !(!empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true));
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);


47) /home/barney/projects/matchbot/src/Domain/Charity.php:226    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
-        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
+        $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && !in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);


48) /home/barney/projects/matchbot/src/Domain/Charity.php:230    [M] LogicalNot

--- Original
+++ New
@@ @@
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
-        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
+        $tbgApprovedToClaimGiftAid = empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new


49) /home/barney/projects/matchbot/src/Domain/Charity.php:230    [M] LogicalAnd

--- Original
+++ New
@@ @@
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
-        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
+        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) || $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new


50) /home/barney/projects/matchbot/src/Domain/Charity.php:230    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
-        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
+        $tbgApprovedToClaimGiftAid = empty($hmrcReferenceNumber) && !($giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS);
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new


51) /home/barney/projects/matchbot/src/Domain/Charity.php:230    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
-        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
+        $tbgApprovedToClaimGiftAid = !(!empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS);
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new


52) /home/barney/projects/matchbot/src/Domain/Charity.php:231    [M] Identical

--- Original
+++ New
@@ @@
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
-        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
+        $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus !== self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new


53) /home/barney/projects/matchbot/src/Domain/Charity.php:234    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->setStripeAccountId($stripeAccountId);
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
-        $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
+        
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new
         // claims, because there could still be historic donations that should be claimed by TBG.


54) /home/barney/projects/matchbot/src/Domain/Charity.php:235    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $tbgCanClaimGiftAid = !empty($hmrcReferenceNumber) && in_array($giftAidOnboardingStatus, self::GIFT_AID_ONBOARDED_STATUSES, true);
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
-        $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
+        
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new
         // claims, because there could still be historic donations that should be claimed by TBG.
         $this->setHmrcReferenceNumber($hmrcReferenceNumber);


55) /home/barney/projects/matchbot/src/Domain/Charity.php:239    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $tbgApprovedToClaimGiftAid = !empty($hmrcReferenceNumber) && $giftAidOnboardingStatus === self::GIFT_AID_APPROVED_STATUS;
         $this->setTbgClaimingGiftAid($tbgCanClaimGiftAid);
         $this->setTbgApprovedToClaimGiftAid($tbgApprovedToClaimGiftAid);
-        // May be null. Should be set to its string value if provided even if the charity is now opted out for new
-        // claims, because there could still be historic donations that should be claimed by TBG.
-        $this->setHmrcReferenceNumber($hmrcReferenceNumber);
+        
         $this->setRegulator($regulator);
         $this->setRegulatorNumber($regulatorNumber);
         $this->setSalesforceLastPull($time);
     }
 }


56) /home/barney/projects/matchbot/src/Domain/Charity.php:241    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // May be null. Should be set to its string value if provided even if the charity is now opted out for new
         // claims, because there could still be historic donations that should be claimed by TBG.
         $this->setHmrcReferenceNumber($hmrcReferenceNumber);
-        $this->setRegulator($regulator);
+        
         $this->setRegulatorNumber($regulatorNumber);
         $this->setSalesforceLastPull($time);
     }
 }


57) /home/barney/projects/matchbot/src/Domain/Charity.php:242    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // claims, because there could still be historic donations that should be claimed by TBG.
         $this->setHmrcReferenceNumber($hmrcReferenceNumber);
         $this->setRegulator($regulator);
-        $this->setRegulatorNumber($regulatorNumber);
+        
         $this->setSalesforceLastPull($time);
     }
 }


58) /home/barney/projects/matchbot/src/Domain/Charity.php:244    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->setHmrcReferenceNumber($hmrcReferenceNumber);
         $this->setRegulator($regulator);
         $this->setRegulatorNumber($regulatorNumber);
-        $this->setSalesforceLastPull($time);
+        
     }
 }


59) /home/barney/projects/matchbot/src/Domain/DonationStatus.php:26    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
     public function isReversed() : bool
     {
         return match ($this) {
-            self::Refunded, self::Failed, self::Chargedback => true,
+            self::Refunded, self::Chargedback => true,
             default => false,
         };
     }


60) /home/barney/projects/matchbot/src/Domain/DonationStatus.php:26    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
     public function isReversed() : bool
     {
         return match ($this) {
-            self::Refunded, self::Failed, self::Chargedback => true,
+            self::Refunded, self::Failed => true,
             default => false,
         };
     }


61) /home/barney/projects/matchbot/src/Domain/DonationStatus.php:28    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         return match ($this) {
             self::Refunded, self::Failed, self::Chargedback => true,
-            default => false,
+            default => true,
         };
     }
     /**


62) /home/barney/projects/matchbot/src/Domain/DonorName.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        
         $this->first = $first;
         $this->last = $last;
     }


63) /home/barney/projects/matchbot/src/Domain/DonorName.php:29    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(0, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


64) /home/barney/projects/matchbot/src/Domain/DonorName.php:29    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(2, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


65) /home/barney/projects/matchbot/src/Domain/DonorName.php:29    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 254)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


66) /home/barney/projects/matchbot/src/Domain/DonorName.php:29    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 256)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


67) /home/barney/projects/matchbot/src/Domain/DonorName.php:30    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(0, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


68) /home/barney/projects/matchbot/src/Domain/DonorName.php:30    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(2, 255)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


69) /home/barney/projects/matchbot/src/Domain/DonorName.php:30    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 254)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


70) /home/barney/projects/matchbot/src/Domain/DonorName.php:30    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(string $first, string $last)
     {
-        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 255)->verifyNow();
+        Assert::lazy()->that($first, 'first')->betweenLength(1, 255)->that($last, 'last')->betweenLength(1, 256)->verifyNow();
         $this->first = $first;
         $this->last = $last;
     }


71) /home/barney/projects/matchbot/src/Domain/EmailAddress.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function __construct(string $value)
     {
         $this->email = $value;
-        Assertion::email($this->email);
+        
     }
     /**
      * @param string $emailAddress - must be a valid email address.


72) /home/barney/projects/matchbot/src/Domain/Money.php:21    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     private function __construct(private readonly int $amountInPence, private readonly Currency $currency)
     {
-        Assertion::between($this->amountInPence, 0, 2000000000);
+        
     }
     public static function fromPence(int $amountInPence, Currency $currency) : self
     {


73) /home/barney/projects/matchbot/src/Domain/Money.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(private readonly int $amountInPence, private readonly Currency $currency)
     {
-        Assertion::between($this->amountInPence, 0, 2000000000);
+        Assertion::between($this->amountInPence, -1, 2000000000);
     }
     public static function fromPence(int $amountInPence, Currency $currency) : self
     {


74) /home/barney/projects/matchbot/src/Domain/Money.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(private readonly int $amountInPence, private readonly Currency $currency)
     {
-        Assertion::between($this->amountInPence, 0, 2000000000);
+        Assertion::between($this->amountInPence, 1, 2000000000);
     }
     public static function fromPence(int $amountInPence, Currency $currency) : self
     {


75) /home/barney/projects/matchbot/src/Domain/Money.php:24    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(private readonly int $amountInPence, private readonly Currency $currency)
     {
-        Assertion::between($this->amountInPence, 0, 2000000000);
+        Assertion::between($this->amountInPence, 0, 1999999999);
     }
     public static function fromPence(int $amountInPence, Currency $currency) : self
     {


76) /home/barney/projects/matchbot/src/Domain/Money.php:24    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function __construct(private readonly int $amountInPence, private readonly Currency $currency)
     {
-        Assertion::between($this->amountInPence, 0, 2000000000);
+        Assertion::between($this->amountInPence, 0, 2000000001);
     }
     public static function fromPence(int $amountInPence, Currency $currency) : self
     {


77) /home/barney/projects/matchbot/src/Domain/StripeCustomerId.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function __construct(string $stripeCustomerId)
     {
         $this->stripeCustomerId = $stripeCustomerId;
-        Assertion::notEmpty($this->stripeCustomerId);
+        
         Assertion::maxLength($this->stripeCustomerId, 255);
         Assertion::regex($this->stripeCustomerId, '/^cus_[a-zA-Z0-9]+$/');
         // e.g. cus_df64s36cf


78) /home/barney/projects/matchbot/src/Domain/StripeCustomerId.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     {
         $this->stripeCustomerId = $stripeCustomerId;
         Assertion::notEmpty($this->stripeCustomerId);
-        Assertion::maxLength($this->stripeCustomerId, 255);
+        Assertion::maxLength($this->stripeCustomerId, 254);
         Assertion::regex($this->stripeCustomerId, '/^cus_[a-zA-Z0-9]+$/');
         // e.g. cus_df64s36cf
     }


79) /home/barney/projects/matchbot/src/Domain/StripeCustomerId.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     {
         $this->stripeCustomerId = $stripeCustomerId;
         Assertion::notEmpty($this->stripeCustomerId);
-        Assertion::maxLength($this->stripeCustomerId, 255);
+        Assertion::maxLength($this->stripeCustomerId, 256);
         Assertion::regex($this->stripeCustomerId, '/^cus_[a-zA-Z0-9]+$/');
         // e.g. cus_df64s36cf
     }


80) /home/barney/projects/matchbot/src/Domain/StripeCustomerId.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->stripeCustomerId = $stripeCustomerId;
         Assertion::notEmpty($this->stripeCustomerId);
-        Assertion::maxLength($this->stripeCustomerId, 255);
+        
         Assertion::regex($this->stripeCustomerId, '/^cus_[a-zA-Z0-9]+$/');
         // e.g. cus_df64s36cf
     }


81) /home/barney/projects/matchbot/src/Domain/StripeCustomerId.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->stripeCustomerId = $stripeCustomerId;
         Assertion::notEmpty($this->stripeCustomerId);
         Assertion::maxLength($this->stripeCustomerId, 255);
-        Assertion::regex($this->stripeCustomerId, '/^cus_[a-zA-Z0-9]+$/');
+        
         // e.g. cus_df64s36cf
     }
     /**


82) /home/barney/projects/matchbot/src/Domain/TimestampsTrait.php:49    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return DateTime
      */
-    public function getCreatedDate() : DateTime
+    protected function getCreatedDate() : DateTime
     {
         return $this->createdAt;
     }


83) /home/barney/projects/matchbot/src/Domain/TimestampsTrait.php:57    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return DateTime
      */
-    public function getUpdatedDate() : DateTime
+    protected function getUpdatedDate() : DateTime
     {
         return $this->updatedAt;
     }
 }


Timed Out mutants:
==================

Skipped mutants:
================

Not Covered mutants:
====================

1) /home/barney/projects/matchbot/src/Application/Actions/Action.php:52    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
      * @return mixed
      * @throws HttpBadRequestException
      */
-    protected function resolveArg(Request $request, string $name, array $args)
+    private function resolveArg(Request $request, string $name, array $args)
     {
         if (!isset($args[$name])) {
             throw new HttpBadRequestException($request, "Could not resolve argument `{$name}`.");


2) /home/barney/projects/matchbot/src/Application/Actions/Action.php:54    [M] LogicalNot

--- Original
+++ New
@@ @@
      */
     protected function resolveArg(Request $request, string $name, array $args)
     {
-        if (!isset($args[$name])) {
+        if (isset($args[$name])) {
             throw new HttpBadRequestException($request, "Could not resolve argument `{$name}`.");
         }
         return $args[$name];


3) /home/barney/projects/matchbot/src/Application/Actions/Action.php:55    [M] Throw_

--- Original
+++ New
@@ @@
     protected function resolveArg(Request $request, string $name, array $args)
     {
         if (!isset($args[$name])) {
-            throw new HttpBadRequestException($request, "Could not resolve argument `{$name}`.");
+            new HttpBadRequestException($request, "Could not resolve argument `{$name}`.");
         }
         return $args[$name];
     }


4) /home/barney/projects/matchbot/src/Application/Actions/ActionError.php:33    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return string
      */
-    #[Pure]
-    public function getType() : string
+    protected function getType() : string
     {
         return $this->type;
     }


5) /home/barney/projects/matchbot/src/Application/Actions/ActionError.php:43    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param string $type
      * @return self
      */
-    public function setType(string $type) : self
+    protected function setType(string $type) : self
     {
         $this->type = $type;
         return $this;


6) /home/barney/projects/matchbot/src/Application/Actions/ActionError.php:52    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return null|string
      */
-    #[Pure]
-    public function getDescription() : string|null
+    protected function getDescription() : string|null
     {
         return $this->description;
     }


7) /home/barney/projects/matchbot/src/Application/Actions/ActionError.php:62    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param string|null $description
      * @return self
      */
-    public function setDescription(?string $description = null) : self
+    protected function setDescription(?string $description = null) : self
     {
         $this->description = $description;
         return $this;


8) /home/barney/projects/matchbot/src/Application/Actions/ActionPayload.php:32    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return array|null|object
      */
-    #[Pure]
-    public function getData() : object|array|null
+    protected function getData() : object|array|null
     {
         return $this->data;
     }


9) /home/barney/projects/matchbot/src/Application/Actions/ActionPayload.php:41    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return ActionError|null
      */
-    #[Pure]
-    public function getError() : ?ActionError
+    protected function getError() : ?ActionError
     {
         return $this->error;
     }


10) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         try {
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
-            $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
+            
             return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


11) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:67    [M] Concat

--- Original
+++ New
@@ @@
         try {
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
-            $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
+            $this->logger->error($e->getMessage() . "Failed to delete payment method, error: ", compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


12) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:67    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         try {
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
-            $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
+            $this->logger->error($e->getMessage(), compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


13) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:67    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         try {
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
-            $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
+            $this->logger->error("Failed to delete payment method, error: ", compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


14) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:70    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
             $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
+            return $this->respondWithData($response, [], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


15) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:70    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
             $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
+            return $this->respondWithData($response, ['error' => "Could not delete payment method"], 399);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


16) /home/barney/projects/matchbot/src/Application/Actions/DeletePaymentMethod.php:70    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $this->stripeClient->paymentMethods->detach($paymentMethodId);
         } catch (InvalidRequestException $e) {
             $this->logger->error("Failed to delete payment method, error: " . $e->getMessage(), compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => "Could not delete payment method"], 400);
+            return $this->respondWithData($response, ['error' => "Could not delete payment method"], 401);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


17) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:49    [M] Foreach_

--- Original
+++ New
@@ @@
     private function errorMessageFromStripeIsExpected(InvalidRequestException $exception) : bool
     {
         $exceptionMessage = $exception->getMessage();
-        foreach (self::EXPECTED_STRIPE_INVALID_REQUEST_MESSAGES as $expectedMessage) {
+        foreach (array() as $expectedMessage) {
             if (str_contains($exceptionMessage, $expectedMessage)) {
                 return true;
             }


18) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:50    [M] IfNegation

--- Original
+++ New
@@ @@
     {
         $exceptionMessage = $exception->getMessage();
         foreach (self::EXPECTED_STRIPE_INVALID_REQUEST_MESSAGES as $expectedMessage) {
-            if (str_contains($exceptionMessage, $expectedMessage)) {
+            if (!str_contains($exceptionMessage, $expectedMessage)) {
                 return true;
             }
         }


19) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:51    [M] TrueValue

--- Original
+++ New
@@ @@
         $exceptionMessage = $exception->getMessage();
         foreach (self::EXPECTED_STRIPE_INVALID_REQUEST_MESSAGES as $expectedMessage) {
             if (str_contains($exceptionMessage, $expectedMessage)) {
-                return true;
+                return false;
             }
         }
         return false;


20) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:55    [M] FalseValue

--- Original
+++ New
@@ @@
                 return true;
             }
         }
-        return false;
+        return true;
     }
     /**
      * Called to confirm that the donor wishes to make a donation immediately. We will tell Stripe to take their money


21) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:70    [M] Throw_

--- Original
+++ New
@@ @@
         try {
             $requestBody = json_decode($request->getBody()->getContents(), true, 512, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
-            throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
+            new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }
         \assert(is_array($requestBody));
         $pamentMethodId = $requestBody['stripePaymentMethodId'];


22) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:81    [M] Throw_

--- Original
+++ New
@@ @@
         $this->entityManager->beginTransaction();
         $donation = $this->donationRepository->findAndLockOneBy(['uuid' => $args['donationId']]);
         if (!$donation) {
-            throw new NotFoundException();
+            new NotFoundException();
         }
         $paymentIntentId = $donation->getTransactionId();
         $paymentMethod = $this->stripeClient->paymentMethods->retrieve($pamentMethodId);


23) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:88    [M] Throw_

--- Original
+++ New
@@ @@
         $paymentIntentId = $donation->getTransactionId();
         $paymentMethod = $this->stripeClient->paymentMethods->retrieve($pamentMethodId);
         if ($paymentMethod->type !== 'card') {
-            throw new HttpBadRequestException($request, 'Confirm endpoint only supports card payments for now');
+            new HttpBadRequestException($request, 'Confirm endpoint only supports card payments for now');
         }
         // documented at https://stripe.com/docs/api/payment_methods/object?lang=php
         // Contrary to what Stripes docblock says, in my testing 'brand' is strings like 'visa' or 'amex'. Not 'Visa' or


24) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:101    [M] Throw_

--- Original
+++ New
@@ @@
         $cardCountry = $paymentMethod->card->country;
         \assert(is_string($cardCountry));
         if (!in_array($cardBrand, Calculator::STRIPE_CARD_BRANDS, true)) {
-            throw new HttpBadRequestException($request, "Unrecognised card brand");
+            new HttpBadRequestException($request, "Unrecognised card brand");
         }
         // at present if the following line was left out we would charge a wrong fee in some cases. I'm not happy with
         // that, would like to find a way to make it so if its left out we get an error instead - either by having


25) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:174    [M] LogicalNot

--- Original
+++ New
@@ @@
                 $this->entityManager->rollback();
                 return new JsonResponse(['error' => ['message' => 'Payment method cannot be used again', 'code' => $exception->getStripeCode()]], 402);
             }
-            if (!$this->errorMessageFromStripeIsExpected($exception)) {
+            if ($this->errorMessageFromStripeIsExpected($exception)) {
                 throw $exception;
             }
             $exceptionClass = get_class($exception);


26) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:175    [M] Throw_

--- Original
+++ New
@@ @@
                 return new JsonResponse(['error' => ['message' => 'Payment method cannot be used again', 'code' => $exception->getStripeCode()]], 402);
             }
             if (!$this->errorMessageFromStripeIsExpected($exception)) {
-                throw $exception;
+                $exception;
             }
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));


27) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:179    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 throw $exception;
             }
             $exceptionClass = get_class($exception);
-            $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
+            
             $this->entityManager->rollback();
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {


28) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:187    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
-            $this->entityManager->rollback();
+            
             return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));


29) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:189    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse([], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


30) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:190    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse(['error' => ['code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


31) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:191    [M] ArrayItem

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse(['error' => ['message' > $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


32) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:192    [M] ArrayItem

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' > $exception->getStripeCode()]], 402);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


33) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:194    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 401);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


34) /home/barney/projects/matchbot/src/Application/Actions/Donations/Confirm.php:194    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($exception);
             $this->logger->warning(sprintf('Stripe %s on Confirm for donation %s (%s): %s', $exceptionClass, $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();
-            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 402);
+            return new JsonResponse(['error' => ['message' => $exception->getMessage(), 'code' => $exception->getStripeCode()]], 403);
         } catch (ApiErrorException $exception) {
             $this->logger->error(sprintf('Stripe %s on Confirm for donation %s (%s): %s', get_class($exception), $donation->getUuid(), $paymentIntentId, $exception->getMessage()));
             $this->entityManager->rollback();


35) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:141    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Fund resource locked');
                 return $this->respond($response, new ActionPayload(503, null, $error));
             } catch (\Throwable $t) {
-                $this->matchingAdapter->releaseNewlyAllocatedFunds();
+                
                 // we have to also remove the FundingWithdrawls from MySQL - otherwise the redis amount would be reduced again when the donation expires.
                 $this->donationRepository->removeAllFundingWithdrawalsForDonation($donation);
                 throw $t;


36) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:143    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 return $this->respond($response, new ActionPayload(503, null, $error));
             } catch (\Throwable $t) {
                 $this->matchingAdapter->releaseNewlyAllocatedFunds();
-                // we have to also remove the FundingWithdrawls from MySQL - otherwise the redis amount would be reduced again when the donation expires.
-                $this->donationRepository->removeAllFundingWithdrawalsForDonation($donation);
+                
                 throw $t;
             }
         }


37) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:145    [M] Throw_

--- Original
+++ New
@@ @@
                 $this->matchingAdapter->releaseNewlyAllocatedFunds();
                 // we have to also remove the FundingWithdrawls from MySQL - otherwise the redis amount would be reduced again when the donation expires.
                 $this->donationRepository->removeAllFundingWithdrawalsForDonation($donation);
-                throw $t;
+                $t;
             }
         }
         if ($donation->getPsp() === 'stripe') {


38) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:219    [M] Ternary

--- Original
+++ New
@@ @@
                     $message,
                     // this message is an issue the charity needs to fix, we can't fix it for them.
                     'Your destination account needs to have at least one of the following capabilities enabled'
-                ) ? Logger::WARNING : Logger::ERROR;
+                ) ? Logger::ERROR : Logger::WARNING;
                 $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
                 return $this->respond($response, new ActionPayload(500, null, $error));


39) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:226    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     // this message is an issue the charity needs to fix, we can't fix it for them.
                     'Your destination account needs to have at least one of the following capabilities enabled'
                 ) ? Logger::WARNING : Logger::ERROR;
-                $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
+                
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
                 return $this->respond($response, new ActionPayload(500, null, $error));
             }


40) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:229    [M] Coalesce

--- Original
+++ New
@@ @@
                     // this message is an issue the charity needs to fix, we can't fix it for them.
                     'Your destination account needs to have at least one of the following capabilities enabled'
                 ) ? Logger::WARNING : Logger::ERROR;
-                $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
+                $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), 'unknown' ?? $exception->getStripeCode(), get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
                 return $this->respond($response, new ActionPayload(500, null, $error));
             }


41) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:233    [M] Coalesce

--- Original
+++ New
@@ @@
                     // this message is an issue the charity needs to fix, we can't fix it for them.
                     'Your destination account needs to have at least one of the following capabilities enabled'
                 ) ? Logger::WARNING : Logger::ERROR;
-                $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
+                $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), 'unknown' ?? $donation->getCampaign()->getCharity()->getStripeAccountId()));
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
                 return $this->respond($response, new ActionPayload(500, null, $error));
             }


42) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:236    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 ) ? Logger::WARNING : Logger::ERROR;
                 $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
-                return $this->respond($response, new ActionPayload(500, null, $error));
+                return $this->respond($response, new ActionPayload(499, null, $error));
             }
             $donation->setTransactionId($intent->id);
             $this->entityManager->persist($donation);


43) /home/barney/projects/matchbot/src/Application/Actions/Donations/Create.php:236    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 ) ? Logger::WARNING : Logger::ERROR;
                 $this->logger->log($level, sprintf('Stripe Payment Intent create error on %s, %s [%s]: %s. Charity: %s [%s].', $donation->getUuid(), $exception->getStripeCode() ?? 'unknown', get_class($exception), $message, $donation->getCampaign()->getCharity()->getName(), $donation->getCampaign()->getCharity()->getStripeAccountId() ?? 'unknown'));
                 $error = new ActionError(ActionError::SERVER_ERROR, 'Could not make Stripe Payment Intent (B)');
-                return $this->respond($response, new ActionPayload(500, null, $error));
+                return $this->respond($response, new ActionPayload(501, null, $error));
             }
             $donation->setTransactionId($intent->id);
             $this->entityManager->persist($donation);


44) /home/barney/projects/matchbot/src/Application/Actions/Donations/Get.php:33    [M] Throw_

--- Original
+++ New
@@ @@
     protected function action(Request $request, Response $response, array $args) : Response
     {
         if (empty($args['donationId'])) {
-            // When MatchBot made a donation, this is now a UUID
-            throw new DomainRecordNotFoundException('Missing donation ID');
+            new DomainRecordNotFoundException('Missing donation ID');
         }
         /** @var Donation $donation */
         $donation = $this->donationRepository->findOneBy(['uuid' => $args['donationId']]);


45) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:63    [M] Throw_

--- Original
+++ New
@@ @@
     protected function action(Request $request, Response $response, array $args) : Response
     {
         if (empty($args['donationId']) || !is_string($args['donationId'])) {
-            // When MatchBot made a donation, this is now a UUID
-            throw new DomainRecordNotFoundException('Missing donation ID');
+            new DomainRecordNotFoundException('Missing donation ID');
         }
         $body = (string) $request->getBody();
         try {


46) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:91    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return $this->validationError($response, "{$message}: {$exceptionType} - {$exception->getMessage()}", $message, empty($body));
         }
         if (getenv('APP_ENV') !== 'production' && str_starts_with($donationData->firstName ?? '', 'Please throw')) {
-            $this->logger->critical("Testing a critical log message for BG2-2297");
+            
             throw new \Exception("{$donationData->firstName} requested an exception for test purposes");
         }
         if (!isset($donationData->status)) {


47) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:92    [M] Throw_

--- Original
+++ New
@@ @@
         }
         if (getenv('APP_ENV') !== 'production' && str_starts_with($donationData->firstName ?? '', 'Please throw')) {
             $this->logger->critical("Testing a critical log message for BG2-2297");
-            throw new \Exception("{$donationData->firstName} requested an exception for test purposes");
+            new \Exception("{$donationData->firstName} requested an exception for test purposes");
         }
         if (!isset($donationData->status)) {
             return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated with missing status", 'New status is required');


48) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:157    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
                 $this->logger->warning(sprintf('Caught LockWaitTimeoutException in Update for donation %s, retry count %d', $args['donationId'], $retryCount));
                 $microseconds = (int) (100000 * 2 ** $retryCount);
                 // pause for 0.1, 0.2, 0.4 and then 0.8s before giving up.
-                \assert($microseconds >= 0);
+                \assert($microseconds > 0);
                 \usleep($microseconds);
                 $retryCount++;
                 $this->entityManager->rollback();


49) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:157    [M] GreaterThanOrEqualToNegotiation

--- Original
+++ New
@@ @@
                 $this->logger->warning(sprintf('Caught LockWaitTimeoutException in Update for donation %s, retry count %d', $args['donationId'], $retryCount));
                 $microseconds = (int) (100000 * 2 ** $retryCount);
                 // pause for 0.1, 0.2, 0.4 and then 0.8s before giving up.
-                \assert($microseconds >= 0);
+                \assert($microseconds < 0);
                 \usleep($microseconds);
                 $retryCount++;
                 $this->entityManager->rollback();


50) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:174    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } catch (InvalidRequestException $invalidRequestException) {
                 if (str_starts_with(haystack: $invalidRequestException->getMessage(), needle: "This PaymentIntent's amount could not be updated because it has a status of canceled")) {
                     \assert(isset($donation), "If we've got as far as Stripe throwing an exception we must have a Donation");
-                    $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe' . ' itself very recently. Donation UUID %s', $donation->getUuid()));
+                    
                     $this->entityManager->rollback();
                     return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated", 'This donation payment intent has been cancelled. You may wish to start a fresh donation.');
                 }


51) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:175    [M] Concat

--- Original
+++ New
@@ @@
             } catch (InvalidRequestException $invalidRequestException) {
                 if (str_starts_with(haystack: $invalidRequestException->getMessage(), needle: "This PaymentIntent's amount could not be updated because it has a status of canceled")) {
                     \assert(isset($donation), "If we've got as far as Stripe throwing an exception we must have a Donation");
-                    $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe' . ' itself very recently. Donation UUID %s', $donation->getUuid()));
+                    $this->logger->warning(sprintf(' itself very recently. Donation UUID %s' . 'Stripe rejected payment intent update as PI was cancelled, presumably by stripe', $donation->getUuid()));
                     $this->entityManager->rollback();
                     return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated", 'This donation payment intent has been cancelled. You may wish to start a fresh donation.');
                 }


52) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:175    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (InvalidRequestException $invalidRequestException) {
                 if (str_starts_with(haystack: $invalidRequestException->getMessage(), needle: "This PaymentIntent's amount could not be updated because it has a status of canceled")) {
                     \assert(isset($donation), "If we've got as far as Stripe throwing an exception we must have a Donation");
-                    $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe' . ' itself very recently. Donation UUID %s', $donation->getUuid()));
+                    $this->logger->warning(sprintf(' itself very recently. Donation UUID %s', $donation->getUuid()));
                     $this->entityManager->rollback();
                     return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated", 'This donation payment intent has been cancelled. You may wish to start a fresh donation.');
                 }


53) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:175    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (InvalidRequestException $invalidRequestException) {
                 if (str_starts_with(haystack: $invalidRequestException->getMessage(), needle: "This PaymentIntent's amount could not be updated because it has a status of canceled")) {
                     \assert(isset($donation), "If we've got as far as Stripe throwing an exception we must have a Donation");
-                    $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe' . ' itself very recently. Donation UUID %s', $donation->getUuid()));
+                    $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe', $donation->getUuid()));
                     $this->entityManager->rollback();
                     return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated", 'This donation payment intent has been cancelled. You may wish to start a fresh donation.');
                 }


54) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:179    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 if (str_starts_with(haystack: $invalidRequestException->getMessage(), needle: "This PaymentIntent's amount could not be updated because it has a status of canceled")) {
                     \assert(isset($donation), "If we've got as far as Stripe throwing an exception we must have a Donation");
                     $this->logger->warning(sprintf('Stripe rejected payment intent update as PI was cancelled, presumably by stripe' . ' itself very recently. Donation UUID %s', $donation->getUuid()));
-                    $this->entityManager->rollback();
+                    
                     return $this->validationError($response, "Donation ID {$args['donationId']} could not be updated", 'This donation payment intent has been cancelled. You may wish to start a fresh donation.');
                 }
                 throw $invalidRequestException;


55) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:192    [M] Throw_

--- Original
+++ New
@@ @@
                 throw $invalidRequestException;
             }
         }
-        throw new \Exception("Retry count exceeded trying to update donation {$args['donationId']} , retried {$retryCount} times");
+        new \Exception("Retry count exceeded trying to update donation {$args['donationId']} , retried {$retryCount} times");
     }
     /**
      * Assumes it will be called only after starting a transaction pre-donation-select.


56) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:244    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return $this->validationError($response, "Required boolean field 'giftAid' not set", null, true);
         }
         if ($donation->getDonationStatus() === DonationStatus::Cancelled) {
-            // this guard clause is technically not needed, and impossible to unit test, as this is covered by two
-            // previous clauses:
-            //
-            // - if donation from the DB is cancelled and the request sends a non-cancelled status we bail out all other
-            //      status changes are not supported
-            // - if donation from the DB is cancelled and the request is sending a cancelled status as well then we do
-            //      nothing.
-            //
-            // But worth keeping here IMHO just in case the other parts change.
-            $this->entityManager->rollback();
+            
             return $this->validationError($response, "Can not update cancelled donation", null, true);
         }
         // These 3 fields are currently set up early in the journey, but are harmless and more flexible


57) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:246    [M] TrueValue

--- Original
+++ New
@@ @@
             //
             // But worth keeping here IMHO just in case the other parts change.
             $this->entityManager->rollback();
-            return $this->validationError($response, "Can not update cancelled donation", null, true);
+            return $this->validationError($response, "Can not update cancelled donation", null, false);
         }
         // These 3 fields are currently set up early in the journey, but are harmless and more flexible
         // to support setting later. The frontend will probably leave these set and do a no-op update


58) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:297    [M] Throw_

--- Original
+++ New
@@ @@
                 $this->updatePaymentIntent($donation);
             } catch (RateLimitException $exception) {
                 if ($exception->getStripeCode() !== 'lock_timeout') {
-                    throw $exception;
+                    $exception;
                     // Only re-try when object level lock failed.
                 }
                 $this->logger->info(sprintf('Stripe lock "rate limit" hit while updating payment intent for donation %s – retrying in 1s...', $donation->getUuid()));


59) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:358    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     // seen before with a distinct message, but both options give the client an HTTP 500,
                     // as we expect neither with our updated guard conditions.
                     if (str_starts_with($exception->getMessage(), "You cannot confirm this PaymentIntent because it's missing a payment method")) {
-                        $this->logger->error(sprintf('Stripe Payment Intent for donation ID %s was missing a payment method, so we could not confirm it', $donation->getUuid()));
+                        
                         $error = new ActionError(ActionError::SERVER_ERROR, 'Could not confirm Stripe Payment Intent');
                         return $this->respond($response, new ActionPayload(500, null, $error));
                     }


60) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:364    [M] DecrementInteger

--- Original
+++ New
@@ @@
                     if (str_starts_with($exception->getMessage(), "You cannot confirm this PaymentIntent because it's missing a payment method")) {
                         $this->logger->error(sprintf('Stripe Payment Intent for donation ID %s was missing a payment method, so we could not confirm it', $donation->getUuid()));
                         $error = new ActionError(ActionError::SERVER_ERROR, 'Could not confirm Stripe Payment Intent');
-                        return $this->respond($response, new ActionPayload(500, null, $error));
+                        return $this->respond($response, new ActionPayload(499, null, $error));
                     }
                     throw $exception;
                 }


61) /home/barney/projects/matchbot/src/Application/Actions/Donations/Update.php:364    [M] IncrementInteger

--- Original
+++ New
@@ @@
                     if (str_starts_with($exception->getMessage(), "You cannot confirm this PaymentIntent because it's missing a payment method")) {
                         $this->logger->error(sprintf('Stripe Payment Intent for donation ID %s was missing a payment method, so we could not confirm it', $donation->getUuid()));
                         $error = new ActionError(ActionError::SERVER_ERROR, 'Could not confirm Stripe Payment Intent');
-                        return $this->respond($response, new ActionPayload(500, null, $error));
+                        return $this->respond($response, new ActionPayload(501, null, $error));
                     }
                     throw $exception;
                 }


62) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(LoggerInterface $logger, private DonorAccountRepository $donorAccountRepository)
     {
-        parent::__construct($logger);
+        
     }
     protected function action(Request $request, Response $response, array $args) : Response
     {


63) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:43    [M] DecrementInteger

--- Original
+++ New
@@ @@
     {
         try {
             $json = $request->getBody()->getContents();
-            $requestBody = json_decode($json, true, 512, JSON_THROW_ON_ERROR);
+            $requestBody = json_decode($json, true, 511, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
             throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }


64) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:43    [M] IncrementInteger

--- Original
+++ New
@@ @@
     {
         try {
             $json = $request->getBody()->getContents();
-            $requestBody = json_decode($json, true, 512, JSON_THROW_ON_ERROR);
+            $requestBody = json_decode($json, true, 513, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
             throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }


65) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:47    [M] Throw_

--- Original
+++ New
@@ @@
             $json = $request->getBody()->getContents();
             $requestBody = json_decode($json, true, 512, JSON_THROW_ON_ERROR);
         } catch (\JsonException) {
-            throw new HttpBadRequestException($request, 'Cannot parse request body as JSON');
+            new HttpBadRequestException($request, 'Cannot parse request body as JSON');
         }
         \assert(is_array($requestBody));
         $stripeCustomerIdString = $request->getAttribute(PersonManagementAuthMiddleware::PSP_ATTRIBUTE_NAME);


66) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:54    [M] Coalesce

--- Original
+++ New
@@ @@
         \assert(is_array($requestBody));
         $stripeCustomerIdString = $request->getAttribute(PersonManagementAuthMiddleware::PSP_ATTRIBUTE_NAME);
         \assert(is_string($stripeCustomerIdString));
-        $emailAddressString = $requestBody['emailAddress'] ?? throw new HttpBadRequestException($request, 'Expected emailAddress');
+        $emailAddressString = throw new HttpBadRequestException($request, 'Expected emailAddress') ?? $requestBody['emailAddress'];
         \assert(is_string($emailAddressString));
         /** @var array{firstName: string, lastName: string} $donorNameArray */
         $donorNameArray = $requestBody['donorName'] ?? throw new HttpBadRequestException($request, 'Expected donorName');


67) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:58    [M] Coalesce

--- Original
+++ New
@@ @@
         $emailAddressString = $requestBody['emailAddress'] ?? throw new HttpBadRequestException($request, 'Expected emailAddress');
         \assert(is_string($emailAddressString));
         /** @var array{firstName: string, lastName: string} $donorNameArray */
-        $donorNameArray = $requestBody['donorName'] ?? throw new HttpBadRequestException($request, 'Expected donorName');
+        $donorNameArray = throw new HttpBadRequestException($request, 'Expected donorName') ?? $requestBody['donorName'];
         try {
             $emailAddress = EmailAddress::of($emailAddressString);
             $donorName = DonorName::of($donorNameArray['firstName'], $donorNameArray['lastName']);


68) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:64    [M] Catch_

--- Original
+++ New
@@ @@
             $emailAddress = EmailAddress::of($emailAddressString);
             $donorName = DonorName::of($donorNameArray['firstName'], $donorNameArray['lastName']);
             $stripeCustomerId = StripeCustomerId::of($stripeCustomerIdString);
-        } catch (AssertionFailedException|LazyAssertionException $e) {
+        } catch (LazyAssertionException $e) {
             return $this->validationError($response, $e->getMessage());
         }
         $donorAccount = new DonorAccount($emailAddress, $donorName, $stripeCustomerId);


69) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:64    [M] Catch_

--- Original
+++ New
@@ @@
             $emailAddress = EmailAddress::of($emailAddressString);
             $donorName = DonorName::of($donorNameArray['firstName'], $donorNameArray['lastName']);
             $stripeCustomerId = StripeCustomerId::of($stripeCustomerIdString);
-        } catch (AssertionFailedException|LazyAssertionException $e) {
+        } catch (AssertionFailedException $e) {
             return $this->validationError($response, $e->getMessage());
         }
         $donorAccount = new DonorAccount($emailAddress, $donorName, $stripeCustomerId);


70) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:78    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $donorAccount = new DonorAccount($emailAddress, $donorName, $stripeCustomerId);
         try {
-            $this->donorAccountRepository->save($donorAccount);
+            
         } catch (UniqueConstraintViolationException $e) {
             return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
         }


71) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:82    [M] Concat

--- Original
+++ New
@@ @@
         try {
             $this->donorAccountRepository->save($donorAccount);
         } catch (UniqueConstraintViolationException $e) {
-            return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
+            return $this->validationError($response, $donorAccount->stripeCustomerId->stripeCustomerId . "Donor Account already exists for stripe account ");
         }
         return new \Slim\Psr7\Response(201);
     }
 }


72) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:82    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         try {
             $this->donorAccountRepository->save($donorAccount);
         } catch (UniqueConstraintViolationException $e) {
-            return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
+            return $this->validationError($response, $donorAccount->stripeCustomerId->stripeCustomerId);
         }
         return new \Slim\Psr7\Response(201);
     }
 }


73) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:82    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         try {
             $this->donorAccountRepository->save($donorAccount);
         } catch (UniqueConstraintViolationException $e) {
-            return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
+            return $this->validationError($response, "Donor Account already exists for stripe account ");
         }
         return new \Slim\Psr7\Response(201);
     }
 }


74) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:86    [M] DecrementInteger

--- Original
+++ New
@@ @@
         } catch (UniqueConstraintViolationException $e) {
             return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
         }
-        return new \Slim\Psr7\Response(201);
+        return new \Slim\Psr7\Response(200);
     }
 }


75) /home/barney/projects/matchbot/src/Application/Actions/DonorAccount/Create.php:86    [M] IncrementInteger

--- Original
+++ New
@@ @@
         } catch (UniqueConstraintViolationException $e) {
             return $this->validationError($response, "Donor Account already exists for stripe account " . $donorAccount->stripeCustomerId->stripeCustomerId);
         }
-        return new \Slim\Psr7\Response(201);
+        return new \Slim\Psr7\Response(202);
     }
 }


76) /home/barney/projects/matchbot/src/Application/Actions/Hooks/Stripe.php:66    [M] Ternary

--- Original
+++ New
@@ @@
              * "...both live and test webhooks will be sent to your production webhook URLs."
              * @link https://stripe.com/docs/connect/webhooks
              */
-            $method = $connect ? 'info' : 'warning';
+            $method = $connect ? 'warning' : 'info';
             $this->logger->{$method}(sprintf('Skipping non-live %s webhook in Production', $this->event->type));
             return $this->respond($response, new ActionPayload(204));
         }


77) /home/barney/projects/matchbot/src/Application/Actions/Hooks/Stripe.php:67    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
              * @link https://stripe.com/docs/connect/webhooks
              */
             $method = $connect ? 'info' : 'warning';
-            $this->logger->{$method}(sprintf('Skipping non-live %s webhook in Production', $this->event->type));
+            
             return $this->respond($response, new ActionPayload(204));
         }
         return null;
     }
 }


78) /home/barney/projects/matchbot/src/Application/Actions/Hooks/Stripe.php:69    [M] DecrementInteger

--- Original
+++ New
@@ @@
              */
             $method = $connect ? 'info' : 'warning';
             $this->logger->{$method}(sprintf('Skipping non-live %s webhook in Production', $this->event->type));
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(203));
         }
         return null;
     }
 }


79) /home/barney/projects/matchbot/src/Application/Actions/Hooks/Stripe.php:69    [M] IncrementInteger

--- Original
+++ New
@@ @@
              */
             $method = $connect ? 'info' : 'warning';
             $this->logger->{$method}(sprintf('Skipping non-live %s webhook in Production', $this->event->type));
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(205));
         }
         return null;
     }
 }


80) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:149    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             $this->logger->info(sprintf('Set donation %s Collected based on hook for charge ID %s', $donation->getUuid(), $charge->id));
         } else {
-            $this->logger->error(sprintf('Ignoring unsupported status %s for donation %s on charge ID %s', $charge->status, $donation->getUuid(), $charge->id));
+            
             $this->entityManager->rollback();
             return $this->validationError($response, sprintf('Unsupported Status "%s"', $charge->status));
         }


81) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:155    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->logger->info(sprintf('Set donation %s Collected based on hook for charge ID %s', $donation->getUuid(), $charge->id));
         } else {
             $this->logger->error(sprintf('Ignoring unsupported status %s for donation %s on charge ID %s', $charge->status, $donation->getUuid(), $charge->id));
-            $this->entityManager->rollback();
+            
             return $this->validationError($response, sprintf('Unsupported Status "%s"', $charge->status));
         }
         $this->entityManager->persist($donation);


82) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:268    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         /** @var Donation $donation */
         $donation = $this->donationRepository->findOneBy(['chargeId' => $charge->id]);
         if (!$donation) {
-            $this->logger->notice(sprintf('Donation not found with Charge ID %s', $charge->id));
+            
             $this->entityManager->rollback();
             return $this->respond($response, new ActionPayload(204));
         }


83) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:269    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $donation = $this->donationRepository->findOneBy(['chargeId' => $charge->id]);
         if (!$donation) {
             $this->logger->notice(sprintf('Donation not found with Charge ID %s', $charge->id));
-            $this->entityManager->rollback();
+            
             return $this->respond($response, new ActionPayload(204));
         }
         $isTipRefund = $donation->getTipAmountFractional() === $amountRefunded;


84) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:270    [M] DecrementInteger

--- Original
+++ New
@@ @@
         if (!$donation) {
             $this->logger->notice(sprintf('Donation not found with Charge ID %s', $charge->id));
             $this->entityManager->rollback();
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(203));
         }
         $isTipRefund = $donation->getTipAmountFractional() === $amountRefunded;
         $isFullRefund = $donation->getAmountFractionalIncTip() === $amountRefunded;


85) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:270    [M] IncrementInteger

--- Original
+++ New
@@ @@
         if (!$donation) {
             $this->logger->notice(sprintf('Donation not found with Charge ID %s', $charge->id));
             $this->entityManager->rollback();
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(205));
         }
         $isTipRefund = $donation->getTipAmountFractional() === $amountRefunded;
         $isFullRefund = $donation->getAmountFractionalIncTip() === $amountRefunded;


86) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:340    [M] ArrayItem

--- Original
+++ New
@@ @@
     {
         $paymentIntent = $event->data->object;
         \assert($paymentIntent instanceof PaymentIntent);
-        $donation = $this->donationRepository->findOneBy(['transactionId' => $paymentIntent->id]);
+        $donation = $this->donationRepository->findOneBy(['transactionId' > $paymentIntent->id]);
         if ($donation === null) {
             if (getenv('APP_ENV') !== 'production') {
                 // outside of production we expect Stripe to combine things from multiple test environments


87) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:340    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     {
         $paymentIntent = $event->data->object;
         \assert($paymentIntent instanceof PaymentIntent);
-        $donation = $this->donationRepository->findOneBy(['transactionId' => $paymentIntent->id]);
+        $donation = $this->donationRepository->findOneBy([]);
         if ($donation === null) {
             if (getenv('APP_ENV') !== 'production') {
                 // outside of production we expect Stripe to combine things from multiple test environments


88) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:342    [M] Identical

--- Original
+++ New
@@ @@
         $paymentIntent = $event->data->object;
         \assert($paymentIntent instanceof PaymentIntent);
         $donation = $this->donationRepository->findOneBy(['transactionId' => $paymentIntent->id]);
-        if ($donation === null) {
+        if ($donation !== null) {
             if (getenv('APP_ENV') !== 'production') {
                 // outside of production we expect Stripe to combine things from multiple test environments
                 // (staging & regtest) into one, so we may get irrelevant cancellation requests. We don't want


89) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:343    [M] NotIdentical

--- Original
+++ New
@@ @@
         \assert($paymentIntent instanceof PaymentIntent);
         $donation = $this->donationRepository->findOneBy(['transactionId' => $paymentIntent->id]);
         if ($donation === null) {
-            if (getenv('APP_ENV') !== 'production') {
+            if (getenv('APP_ENV') === 'production') {
                 // outside of production we expect Stripe to combine things from multiple test environments
                 // (staging & regtest) into one, so we may get irrelevant cancellation requests. We don't want
                 // them logged as errors.


90) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:347    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 // outside of production we expect Stripe to combine things from multiple test environments
                 // (staging & regtest) into one, so we may get irrelevant cancellation requests. We don't want
                 // them logged as errors.
-                return $this->respond($response, new ActionPayload(204));
+                return $this->respond($response, new ActionPayload(203));
             }
             return $this->respond($response, new ActionPayload(404));
         }


91) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:347    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 // outside of production we expect Stripe to combine things from multiple test environments
                 // (staging & regtest) into one, so we may get irrelevant cancellation requests. We don't want
                 // them logged as errors.
-                return $this->respond($response, new ActionPayload(204));
+                return $this->respond($response, new ActionPayload(205));
             }
             return $this->respond($response, new ActionPayload(404));
         }


92) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:349    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 // them logged as errors.
                 return $this->respond($response, new ActionPayload(204));
             }
-            return $this->respond($response, new ActionPayload(404));
+            return $this->respond($response, new ActionPayload(403));
         }
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
             return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));


93) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:349    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 // them logged as errors.
                 return $this->respond($response, new ActionPayload(204));
             }
-            return $this->respond($response, new ActionPayload(404));
+            return $this->respond($response, new ActionPayload(405));
         }
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
             return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));


94) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:352    [M] Identical

--- Original
+++ New
@@ @@
             }
             return $this->respond($response, new ActionPayload(404));
         }
-        if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
+        if (DonationStatus::Cancelled !== $donation->getDonationStatus()) {
             return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));
         }
         $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));


95) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:353    [M] DecrementInteger

--- Original
+++ New
@@ @@
             return $this->respond($response, new ActionPayload(404));
         }
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
-            return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));
+            return $this->respond($response, new ActionPayload(203, ['reason' => 'Donation is already cancelled']));
         }
         $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));
         try {


96) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:353    [M] IncrementInteger

--- Original
+++ New
@@ @@
             return $this->respond($response, new ActionPayload(404));
         }
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
-            return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));
+            return $this->respond($response, new ActionPayload(205, ['reason' => 'Donation is already cancelled']));
         }
         $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));
         try {


97) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:353    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             return $this->respond($response, new ActionPayload(404));
         }
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
-            return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));
+            return $this->respond($response, new ActionPayload(204, []));
         }
         $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));
         try {


98) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:356    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if (DonationStatus::Cancelled === $donation->getDonationStatus()) {
             return $this->respond($response, new ActionPayload(204, ['reason' => 'Donation is already cancelled']));
         }
-        $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));
+        
         try {
             $donation->cancel();
         } catch (\UnexpectedValueException) {


99) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:363    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $this->logger->info(sprintf('Received Stripe cancellation request, Donation UUID %s, payment intent ID %s', $donation->getUuid(), $paymentIntent->id));
         try {
-            $donation->cancel();
+            
         } catch (\UnexpectedValueException) {
             return $this->respond($response, new ActionPayload(400));
         }


100) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:365    [M] DecrementInteger

--- Original
+++ New
@@ @@
         try {
             $donation->cancel();
         } catch (\UnexpectedValueException) {
-            return $this->respond($response, new ActionPayload(400));
+            return $this->respond($response, new ActionPayload(399));
         }
         $this->entityManager->flush();
         $this->donationRepository->push($donation, false);


101) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:365    [M] IncrementInteger

--- Original
+++ New
@@ @@
         try {
             $donation->cancel();
         } catch (\UnexpectedValueException) {
-            return $this->respond($response, new ActionPayload(400));
+            return $this->respond($response, new ActionPayload(401));
         }
         $this->entityManager->flush();
         $this->donationRepository->push($donation, false);


102) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:368    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         } catch (\UnexpectedValueException) {
             return $this->respond($response, new ActionPayload(400));
         }
-        $this->entityManager->flush();
+        
         $this->donationRepository->push($donation, false);
         // Attempt immediate sync to Salesforce
         return $this->respond($response, new ActionPayload(200));


103) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:369    [M] FalseValue

--- Original
+++ New
@@ @@
             return $this->respond($response, new ActionPayload(400));
         }
         $this->entityManager->flush();
-        $this->donationRepository->push($donation, false);
+        $this->donationRepository->push($donation, true);
         // Attempt immediate sync to Salesforce
         return $this->respond($response, new ActionPayload(200));
     }


104) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:369    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return $this->respond($response, new ActionPayload(400));
         }
         $this->entityManager->flush();
-        $this->donationRepository->push($donation, false);
+        
         // Attempt immediate sync to Salesforce
         return $this->respond($response, new ActionPayload(200));
     }


105) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:371    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $this->entityManager->flush();
         $this->donationRepository->push($donation, false);
         // Attempt immediate sync to Salesforce
-        return $this->respond($response, new ActionPayload(200));
+        return $this->respond($response, new ActionPayload(199));
     }
     /**
      * @param int $refundedOrDisputedAmount In small currency unit, e.g. pence or cents.


106) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:371    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $this->entityManager->flush();
         $this->donationRepository->push($donation, false);
         // Attempt immediate sync to Salesforce
-        return $this->respond($response, new ActionPayload(200));
+        return $this->respond($response, new ActionPayload(201));
     }
     /**
      * @param int $refundedOrDisputedAmount In small currency unit, e.g. pence or cents.


107) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:413    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $txn = $this->stripeClient->balanceTransactions->retrieve($balanceTransactionId);
         if (count($txn->fee_details) !== 1) {
-            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected composite fee with %d parts: %s', count($txn->fee_details), json_encode($txn->fee_details)));
+            
         }
         if ($txn->fee_details[0]->currency !== strtolower($expectedCurrencyCode)) {
             // `fee` should presumably still be in parent account's currency, so don't bail out.


108) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:422    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected composite fee with %d parts: %s', count($txn->fee_details), json_encode($txn->fee_details)));
         }
         if ($txn->fee_details[0]->currency !== strtolower($expectedCurrencyCode)) {
-            // `fee` should presumably still be in parent account's currency, so don't bail out.
-            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected fee currency %s', $txn->fee_details[0]->currency));
+            
         }
         if ($txn->fee_details[0]->type !== 'stripe_fee') {
             $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected type %s', $txn->fee_details[0]->type));


109) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:424    [M] IncrementInteger

--- Original
+++ New
@@ @@
         }
         if ($txn->fee_details[0]->currency !== strtolower($expectedCurrencyCode)) {
             // `fee` should presumably still be in parent account's currency, so don't bail out.
-            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected fee currency %s', $txn->fee_details[0]->currency));
+            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected fee currency %s', $txn->fee_details[1]->currency));
         }
         if ($txn->fee_details[0]->type !== 'stripe_fee') {
             $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected type %s', $txn->fee_details[0]->type));


110) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:429    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected fee currency %s', $txn->fee_details[0]->currency));
         }
         if ($txn->fee_details[0]->type !== 'stripe_fee') {
-            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected type %s', $txn->fee_details[0]->type));
+            
         }
         return $txn->fee;
     }


111) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:431    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected fee currency %s', $txn->fee_details[0]->currency));
         }
         if ($txn->fee_details[0]->type !== 'stripe_fee') {
-            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected type %s', $txn->fee_details[0]->type));
+            $this->logger->warning(sprintf('StripeChargeUpdate::getFee: Unexpected type %s', $txn->fee_details[1]->type));
         }
         return $txn->fee;
     }


112) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:468    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     private function handleCashBalanceUpdate(Event $event, Response $response) : Response
     {
-        Assertion::eq('customer_cash_balance_transaction.created', $event->type);
+        
         /** @var array{customer: string, currency: string, net_amount: int, ending_balance: int, type: string} $webhookObject */
         $webhookObject = $event->data->toArray()['object'];
         $stripeAccountId = StripeCustomerId::of($webhookObject['customer']);


113) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:475    [M] NotIdentical

--- Original
+++ New
@@ @@
         /** @var array{customer: string, currency: string, net_amount: int, ending_balance: int, type: string} $webhookObject */
         $webhookObject = $event->data->toArray()['object'];
         $stripeAccountId = StripeCustomerId::of($webhookObject['customer']);
-        if ($webhookObject['type'] !== 'funded') {
+        if ($webhookObject['type'] === 'funded') {
             return $this->respond($response, new ActionPayload(200));
         }
         $donorAccount = $this->donorAccountRepository->findByStripeIdOrNull($stripeAccountId);


114) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:476    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $webhookObject = $event->data->toArray()['object'];
         $stripeAccountId = StripeCustomerId::of($webhookObject['customer']);
         if ($webhookObject['type'] !== 'funded') {
-            return $this->respond($response, new ActionPayload(200));
+            return $this->respond($response, new ActionPayload(199));
         }
         $donorAccount = $this->donorAccountRepository->findByStripeIdOrNull($stripeAccountId);
         $currency = Currency::fromIsoCode($webhookObject['currency']);


115) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:476    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $webhookObject = $event->data->toArray()['object'];
         $stripeAccountId = StripeCustomerId::of($webhookObject['customer']);
         if ($webhookObject['type'] !== 'funded') {
-            return $this->respond($response, new ActionPayload(200));
+            return $this->respond($response, new ActionPayload(201));
         }
         $donorAccount = $this->donorAccountRepository->findByStripeIdOrNull($stripeAccountId);
         $currency = Currency::fromIsoCode($webhookObject['currency']);


116) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:485    [M] Identical

--- Original
+++ New
@@ @@
         $transferAmount = Money::fromPence($webhookObject['net_amount'], $currency);
         $endingBalance = Money::fromPence($webhookObject['ending_balance'], $currency);
         $app_env = getenv('APP_ENV');
-        if ($donorAccount === null) {
+        if ($donorAccount !== null) {
             \assert(is_string($app_env));
             if ($app_env !== "regression" && $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,


117) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:487    [M] NotIdentical

--- Original
+++ New
@@ @@
         $app_env = getenv('APP_ENV');
         if ($donorAccount === null) {
             \assert(is_string($app_env));
-            if ($app_env !== "regression" && $app_env !== "staging") {
+            if ($app_env === "regression" && $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));


118) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:487    [M] NotIdentical

--- Original
+++ New
@@ @@
         $app_env = getenv('APP_ENV');
         if ($donorAccount === null) {
             \assert(is_string($app_env));
-            if ($app_env !== "regression" && $app_env !== "staging") {
+            if ($app_env !== "regression" && $app_env === "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));


119) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:487    [M] LogicalAnd

--- Original
+++ New
@@ @@
         $app_env = getenv('APP_ENV');
         if ($donorAccount === null) {
             \assert(is_string($app_env));
-            if ($app_env !== "regression" && $app_env !== "staging") {
+            if ($app_env !== "regression" || $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));


120) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:487    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         $app_env = getenv('APP_ENV');
         if ($donorAccount === null) {
             \assert(is_string($app_env));
-            if ($app_env !== "regression" && $app_env !== "staging") {
+            if (!($app_env !== "regression") && !($app_env !== "staging")) {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));


121) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:487    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         $app_env = getenv('APP_ENV');
         if ($donorAccount === null) {
             \assert(is_string($app_env));
-            if ($app_env !== "regression" && $app_env !== "staging") {
+            if (!($app_env !== "regression" && $app_env !== "staging")) {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));


122) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:490    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if ($donorAccount === null) {
             \assert(is_string($app_env));
             if ($app_env !== "regression" && $app_env !== "staging") {
-                // We expect the regression and staging environments to generate irrelevent webhooks to each other,
-                // so we don't need to notify Slack about the unexpected webhooks there.
-                $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
+                
             }
             return $this->respond($response, new ActionPayload(200));
         }


123) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:491    [M] Concat

--- Original
+++ New
@@ @@
             if ($app_env !== "regression" && $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
-                $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
+                $this->chatter->send(new ChatMessage($stripeAccountId->stripeCustomerId . "{$app_env}: Cash Balance update received for unknown account: "));
             }
             return $this->respond($response, new ActionPayload(200));
         }


124) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:491    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             if ($app_env !== "regression" && $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
-                $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
+                $this->chatter->send(new ChatMessage($stripeAccountId->stripeCustomerId));
             }
             return $this->respond($response, new ActionPayload(200));
         }


125) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:491    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             if ($app_env !== "regression" && $app_env !== "staging") {
                 // We expect the regression and staging environments to generate irrelevent webhooks to each other,
                 // so we don't need to notify Slack about the unexpected webhooks there.
-                $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
+                $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: "));
             }
             return $this->respond($response, new ActionPayload(200));
         }


126) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:495    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
             }
-            return $this->respond($response, new ActionPayload(200));
+            return $this->respond($response, new ActionPayload(199));
         }
         $this->donationFundsNotifier->notifyRecieptOfAccountFunds($donorAccount, $transferAmount, $endingBalance);
         $donorAccountId = $donorAccount->getId();


127) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:495    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 // so we don't need to notify Slack about the unexpected webhooks there.
                 $this->chatter->send(new ChatMessage("{$app_env}: Cash Balance update received for unknown account: " . $stripeAccountId->stripeCustomerId));
             }
-            return $this->respond($response, new ActionPayload(200));
+            return $this->respond($response, new ActionPayload(201));
         }
         $this->donationFundsNotifier->notifyRecieptOfAccountFunds($donorAccount, $transferAmount, $endingBalance);
         $donorAccountId = $donorAccount->getId();


128) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:498    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             return $this->respond($response, new ActionPayload(200));
         }
-        $this->donationFundsNotifier->notifyRecieptOfAccountFunds($donorAccount, $transferAmount, $endingBalance);
+        
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.


129) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:502    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->donationFundsNotifier->notifyRecieptOfAccountFunds($donorAccount, $transferAmount, $endingBalance);
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
-        // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        
         return $this->respond($response, new ActionPayload(200));
     }
 }


130) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info($stripeAccountId->stripeCustomerId . 'Sent notification of receipt of account funds for Stripe Account: ' . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


131) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info($stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


132) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


133) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . ", transfer Amount" . $stripeAccountId->stripeCustomerId . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


134) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


135) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . $transferAmount->format() . ", transfer Amount" . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


136) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


137) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . ", new balance" . $transferAmount->format() . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


138) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


139) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . $endingBalance->format() . ", new balance" . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


140) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . ", DonorAccount #" . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


141) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . ", DonorAccount #" . $endingBalance->format() . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


142) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . $donorAccountId);
         return $this->respond($response, new ActionPayload(200));
     }
 }


143) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] Concat

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . $donorAccountId . ", DonorAccount #");
         return $this->respond($response, new ActionPayload(200));
     }
 }


144) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:503    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $donorAccountId = $donorAccount->getId();
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
-        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
+        $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #");
         return $this->respond($response, new ActionPayload(200));
     }
 }


145) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:509    [M] DecrementInteger

--- Original
+++ New
@@ @@
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
         $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
-        return $this->respond($response, new ActionPayload(200));
+        return $this->respond($response, new ActionPayload(199));
     }
 }


146) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePaymentsUpdate.php:509    [M] IncrementInteger

--- Original
+++ New
@@ @@
         \assert(is_int($donorAccountId));
         // must be an int since it was persisted before.
         $this->logger->info('Sent notification of receipt of account funds for Stripe Account: ' . $stripeAccountId->stripeCustomerId . ", transfer Amount" . $transferAmount->format() . ", new balance" . $endingBalance->format() . ", DonorAccount #" . $donorAccountId);
-        return $this->respond($response, new ActionPayload(200));
+        return $this->respond($response, new ActionPayload(201));
     }
 }


147) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePayoutUpdate.php:112    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $object = $event->data->object;
         $payoutId = $object->id;
         if (!$object->automatic) {
-            // If we try to use the `payout` filter attribute in the `balanceTransactions` call
-            // in the manual payout case, Stripe errors out with "Balance transaction history
-            // can only be filtered on automatic transfers, not manual".
-            $this->logger->warning(sprintf('Skipping processing of manual Payout ID %s', $payoutId));
+            
             return $this->respond($response, new ActionPayload(204));
         }
         $message = (new StripePayout())->setConnectAccountId($event->account)->setPayoutId($payoutId);


148) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePayoutUpdate.php:113    [M] DecrementInteger

--- Original
+++ New
@@ @@
             // in the manual payout case, Stripe errors out with "Balance transaction history
             // can only be filtered on automatic transfers, not manual".
             $this->logger->warning(sprintf('Skipping processing of manual Payout ID %s', $payoutId));
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(203));
         }
         $message = (new StripePayout())->setConnectAccountId($event->account)->setPayoutId($payoutId);
         $stamps = [new BusNameStamp(Event::PAYOUT_PAID), new TransportMessageIdStamp("payout.paid.{$payoutId}")];


149) /home/barney/projects/matchbot/src/Application/Actions/Hooks/StripePayoutUpdate.php:113    [M] IncrementInteger

--- Original
+++ New
@@ @@
             // in the manual payout case, Stripe errors out with "Balance transaction history
             // can only be filtered on automatic transfers, not manual".
             $this->logger->warning(sprintf('Skipping processing of manual Payout ID %s', $payoutId));
-            return $this->respond($response, new ActionPayload(204));
+            return $this->respond($response, new ActionPayload(205));
         }
         $message = (new StripePayout())->setConnectAccountId($event->account)->setPayoutId($payoutId);
         $stamps = [new BusNameStamp(Event::PAYOUT_PAID), new TransportMessageIdStamp("payout.paid.{$payoutId}")];


150) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $allPaymentMethodsOfCustomer = $this->stripeClient->customers->allPaymentMethods($customerId)->toArray()['data'];
         $allCustomersPaymentMethodIds = array_map(static fn(array $pm): string => $pm['id'], $allPaymentMethodsOfCustomer);
         if (!in_array($paymentMethodId, $allCustomersPaymentMethodIds, true)) {
-            $this->logger->warning("Refusing to update stripe payment method as not found for customer", compact('customerId', 'paymentMethodId'));
+            
             return $this->respondWithData($response, ['error' => 'Payment method not found'], StatusCodeInterface::STATUS_BAD_REQUEST);
         }
         $body = (string) $request->getBody();


151) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:52    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $allCustomersPaymentMethodIds = array_map(static fn(array $pm): string => $pm['id'], $allPaymentMethodsOfCustomer);
         if (!in_array($paymentMethodId, $allCustomersPaymentMethodIds, true)) {
             $this->logger->warning("Refusing to update stripe payment method as not found for customer", compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => 'Payment method not found'], StatusCodeInterface::STATUS_BAD_REQUEST);
+            return $this->respondWithData($response, [], StatusCodeInterface::STATUS_BAD_REQUEST);
         }
         $body = (string) $request->getBody();
         // We don't need to know the details inside the billing details - we are just a thin layer between the front end


152) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:76    [M] Identical

--- Original
+++ New
@@ @@
             // will not be able to update their card and can choose to delete it and add a new card for their
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
-            $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
+            $isExpectedExceptionMessage = $e->getMessage() !== "Your card's security code is incorrect.";
             $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }


153) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:78    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
-            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
+            
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


154) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:79    [M] Ternary

--- Original
+++ New
@@ @@
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
-            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
+            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::ERROR : LogLevel::INFO, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


155) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:80    [M] Concat

--- Original
+++ New
@@ @@
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
-            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
+            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: $e->getMessage() . "Failed to update payment method, {$exceptionClass}: ", context: compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


156) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:80    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
-            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
+            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


157) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:80    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             // next donation. Donor will see the message in frontend.
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
-            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
+            $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: ", context: compact('customerId', 'paymentMethodId'));
             return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


158) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:83    [M] ArrayItem

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
             $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
+            return $this->respondWithData($response, ['error' > $e->getMessage()], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


159) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:83    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
             $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
+            return $this->respondWithData($response, [], 400);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


160) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:83    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
             $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
+            return $this->respondWithData($response, ['error' => $e->getMessage()], 399);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


161) /home/barney/projects/matchbot/src/Application/Actions/UpdatePaymentMethod.php:83    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $exceptionClass = get_class($e);
             $isExpectedExceptionMessage = $e->getMessage() === "Your card's security code is incorrect.";
             $this->logger->log(level: $isExpectedExceptionMessage ? LogLevel::INFO : LogLevel::ERROR, message: "Failed to update payment method, {$exceptionClass}: " . $e->getMessage(), context: compact('customerId', 'paymentMethodId'));
-            return $this->respondWithData($response, ['error' => $e->getMessage()], 400);
+            return $this->respondWithData($response, ['error' => $e->getMessage()], 401);
         }
         return $this->respondWithData($response, data: [], statusCode: StatusCodeInterface::STATUS_NO_CONTENT);
     }
 }


162) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:81    [M] DecrementInteger

--- Original
+++ New
@@ @@
             if (!$isConnectionError) {
                 $this->unauthorised($this->logger, true, $request);
             }
-            if ($counter >= $timesToAttemptCaptchaVerification - 1) {
+            if ($counter >= $timesToAttemptCaptchaVerification - 0) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }


163) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:81    [M] IncrementInteger

--- Original
+++ New
@@ @@
             if (!$isConnectionError) {
                 $this->unauthorised($this->logger, true, $request);
             }
-            if ($counter >= $timesToAttemptCaptchaVerification - 1) {
+            if ($counter >= $timesToAttemptCaptchaVerification - 2) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }


164) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:81    [M] Minus

--- Original
+++ New
@@ @@
             if (!$isConnectionError) {
                 $this->unauthorised($this->logger, true, $request);
             }
-            if ($counter >= $timesToAttemptCaptchaVerification - 1) {
+            if ($counter >= $timesToAttemptCaptchaVerification + 1) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }


165) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:81    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
             if (!$isConnectionError) {
                 $this->unauthorised($this->logger, true, $request);
             }
-            if ($counter >= $timesToAttemptCaptchaVerification - 1) {
+            if ($counter > $timesToAttemptCaptchaVerification - 1) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }


166) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:81    [M] GreaterThanOrEqualToNegotiation

--- Original
+++ New
@@ @@
             if (!$isConnectionError) {
                 $this->unauthorised($this->logger, true, $request);
             }
-            if ($counter >= $timesToAttemptCaptchaVerification - 1) {
+            if ($counter < $timesToAttemptCaptchaVerification - 1) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }


167) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] Concat

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                $this->logger->warning($timesToAttemptCaptchaVerification . 'Warning: captcha verification has now failed after ' . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }
         }


168) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                $this->logger->warning($timesToAttemptCaptchaVerification . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }
         }


169) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                $this->logger->warning('Warning: captcha verification has now failed after ' . ' attempts!');
                 $this->unauthorised($this->logger, true, $request);
             }
         }


170) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] Concat

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                $this->logger->warning('Warning: captcha verification has now failed after ' . ' attempts!' . $timesToAttemptCaptchaVerification);
                 $this->unauthorised($this->logger, true, $request);
             }
         }


171) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification);
                 $this->unauthorised($this->logger, true, $request);
             }
         }


172) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:82    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->unauthorised($this->logger, true, $request);
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
-                $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
+                
                 $this->unauthorised($this->logger, true, $request);
             }
         }


173) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:84    [M] TrueValue

--- Original
+++ New
@@ @@
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
-                $this->unauthorised($this->logger, true, $request);
+                $this->unauthorised($this->logger, false, $request);
             }
         }
         return $handler->handle($request);
     }
 }


174) /home/barney/projects/matchbot/src/Application/Auth/DonationRecaptchaMiddleware.php:84    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             if ($counter >= $timesToAttemptCaptchaVerification - 1) {
                 $this->logger->warning('Warning: captcha verification has now failed after ' . $timesToAttemptCaptchaVerification . ' attempts!');
-                $this->unauthorised($this->logger, true, $request);
+                
             }
         }
         return $handler->handle($request);
     }
 }


175) /home/barney/projects/matchbot/src/Application/Auth/DonationToken.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return false;
         }
         if ($decodedJwtBody->iss !== getenv('BASE_URI')) {
-            $logger->error("JWT error: issued by wrong site {$decodedJwtBody->iss}");
+            
             return false;
         }
         if ($donationId !== $decodedJwtBody->sub->donationId) {


176) /home/barney/projects/matchbot/src/Application/Auth/DonationToken.php:68    [M] FalseValue

--- Original
+++ New
@@ @@
         }
         if ($decodedJwtBody->iss !== getenv('BASE_URI')) {
             $logger->error("JWT error: issued by wrong site {$decodedJwtBody->iss}");
-            return false;
+            return true;
         }
         if ($donationId !== $decodedJwtBody->sub->donationId) {
             // We've seen this rarely from things like sharing thank you URLs across browsers / devices.


177) /home/barney/projects/matchbot/src/Application/Auth/IdentityToken.php:93    [M] FalseValue

--- Original
+++ New
@@ @@
             $decodedJwtBody = JWT::decode($jws, static::getKey());
         } catch (\Exception $exception) {
             // Should never happen in practice because we `check()` first.
-            return false;
+            return true;
         }
         return $decodedJwtBody->sub->complete ?? false;
     }
 }


178) /home/barney/projects/matchbot/src/Application/Commands/Command.php:17    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected abstract function doExecute(InputInterface $input, OutputInterface $output) : int;
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $this->start($output);
+        
         $return = $this->doExecute($input, $output);
         $this->finish($output);
         return $return;


179) /home/barney/projects/matchbot/src/Application/Commands/Command.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->start($output);
         $return = $this->doExecute($input, $output);
-        $this->finish($output);
+        
         return $return;
     }
     protected function start(OutputInterface $output) : void


180) /home/barney/projects/matchbot/src/Application/Commands/DeleteStalePaymentDetails.php:58    [M] Break_

--- Original
+++ New
@@ @@
         $customers = $this->stripeClient->customers->search(['query' => "created<{$oneDayAgo} and metadata['hasPasswordSince']:null and metadata['paymentMethodsCleared']:null", 'limit' => static::STRIPE_PAGE_SIZE]);
         foreach ($customers->autoPagingIterator() as $customer) {
             if ($customerCount >= self::MAX_CUSTOMER_COUNT_TO_DETATCH_PER_RUN) {
-                break;
+                continue;
             }
             $customerCount++;
             // Get all *card* type payment methods for this customer – condition (3).


181) /home/barney/projects/matchbot/src/Application/Commands/HandleOutOfSyncFunds.php:71    [M] DecrementInteger

--- Original
+++ New
@@ @@
         }
         $excludedFundingIds = [];
         if ($excludeJson = getenv('KNOWN_OVERMATCHED_FUNDING_IDS')) {
-            $excludedFundingIds = json_decode($excludeJson, true, 512, JSON_THROW_ON_ERROR);
+            $excludedFundingIds = json_decode($excludeJson, true, 511, JSON_THROW_ON_ERROR);
         }
         $numFundingsCorrect = 0;
         $numFundingsOvermatched = 0;


182) /home/barney/projects/matchbot/src/Application/Commands/HandleOutOfSyncFunds.php:71    [M] IncrementInteger

--- Original
+++ New
@@ @@
         }
         $excludedFundingIds = [];
         if ($excludeJson = getenv('KNOWN_OVERMATCHED_FUNDING_IDS')) {
-            $excludedFundingIds = json_decode($excludeJson, true, 512, JSON_THROW_ON_ERROR);
+            $excludedFundingIds = json_decode($excludeJson, true, 513, JSON_THROW_ON_ERROR);
         }
         $numFundingsCorrect = 0;
         $numFundingsOvermatched = 0;


183) /home/barney/projects/matchbot/src/Application/Commands/HandleOutOfSyncFunds.php:83    [M] Continue_

--- Original
+++ New
@@ @@
         $numFundings = count($fundings);
         foreach ($fundings as $funding) {
             if (in_array($funding->getId(), $excludedFundingIds, true)) {
-                continue;
+                break;
             }
             // Amount allocated from the CampaignFunding
             $fundingAvailable = $this->matchingAdapter->getAmountAvailable($funding);


184) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:40    [M] Concat

--- Original
+++ New
@@ @@
             $return = $this->doExecute($input, $output);
             $this->releaseLock();
         } else {
-            $message = $this->getName() . ' did nothing as another instance had the lock.';
+            $message = ' did nothing as another instance had the lock.' . $this->getName();
             $output->writeln($message);
             $this->logger->warning($message);
             return 0;


185) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:40    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $return = $this->doExecute($input, $output);
             $this->releaseLock();
         } else {
-            $message = $this->getName() . ' did nothing as another instance had the lock.';
+            $message = ' did nothing as another instance had the lock.';
             $output->writeln($message);
             $this->logger->warning($message);
             return 0;


186) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:40    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $return = $this->doExecute($input, $output);
             $this->releaseLock();
         } else {
-            $message = $this->getName() . ' did nothing as another instance had the lock.';
+            $message = $this->getName();
             $output->writeln($message);
             $this->logger->warning($message);
             return 0;


187) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:41    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->releaseLock();
         } else {
             $message = $this->getName() . ' did nothing as another instance had the lock.';
-            $output->writeln($message);
+            
             $this->logger->warning($message);
             return 0;
             // Log at warning level to help monitoring volume but don't fire error alarms.


188) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:42    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         } else {
             $message = $this->getName() . ' did nothing as another instance had the lock.';
             $output->writeln($message);
-            $this->logger->warning($message);
+            
             return 0;
             // Log at warning level to help monitoring volume but don't fire error alarms.
         }


189) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:43    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $message = $this->getName() . ' did nothing as another instance had the lock.';
             $output->writeln($message);
             $this->logger->warning($message);
-            return 0;
+            return -1;
             // Log at warning level to help monitoring volume but don't fire error alarms.
         }
         $this->finish($output);


190) /home/barney/projects/matchbot/src/Application/Commands/LockingCommand.php:43    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $message = $this->getName() . ' did nothing as another instance had the lock.';
             $output->writeln($message);
             $this->logger->warning($message);
-            return 0;
+            return 1;
             // Log at warning level to help monitoring volume but don't fire error alarms.
         }
         $this->finish($output);


191) /home/barney/projects/matchbot/src/Application/Commands/ResetMatching.php:39    [M] Throw_

--- Original
+++ New
@@ @@
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {
         if (getenv('APP_ENV') === 'production') {
-            // Erroring in one command stops the Composer script running the next one too, so this
-            // should also eliminate the possibility of Composer `matchbot:reset` clearing the
-            // Production database if run there in error.
-            throw new \RuntimeException('Reset not supported on Production');
+            new \RuntimeException('Reset not supported on Production');
         }
         try {
             $fundings = $this->campaignFundingRepository->findAll();


192) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function __construct(CampaignFundingRepository $campaignFundingRepository, FundingWithdrawalRepository $fundingWithdrawalRepository, Matching\Adapter $matchingAdapter, private ChatterInterface $chatter)
     {
-        parent::__construct($campaignFundingRepository, $fundingWithdrawalRepository, $matchingAdapter);
+        
     }
     protected static $defaultName = 'matchbot:scheduled-out-of-sync-funds-check';
     protected function configure() : void


193) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected static $defaultName = 'matchbot:scheduled-out-of-sync-funds-check';
     protected function configure() : void
     {
-        $this->setDescription("For running via a cron job. Checks for out of sync funds but doesn't attempt to fix them. Sends output to Slack");
+        
     }
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {


194) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:44    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {
         $bufferedOutput = new BufferedOutput();
-        $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
+        $arrayInput = new ArrayInput([], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
         $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");


195) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:44    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     protected function doExecute(InputInterface $input, OutputInterface $output) : int
     {
         $bufferedOutput = new BufferedOutput();
-        $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
+        $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
         $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");


196) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:46    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $bufferedOutput = new BufferedOutput();
         $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
-        parent::doExecute($arrayInput, $bufferedOutput);
+        
         $chatMessage = new ChatMessage('Out of sync funds check');
         $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
         $output->writeln($message);


197) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:49    [M] Ternary

--- Original
+++ New
@@ @@
         $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
-        $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
+        $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " no out of sync funds detected" : " OUT OF SYNC FUNDS DETECTED");
         $output->writeln($message);
         if ($this->outOfSyncFundFound) {
             $env = getenv('APP_ENV');


198) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:49    [M] Concat

--- Original
+++ New
@@ @@
         $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
-        $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
+        $message = ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected") . 'Out of sync funds check completed';
         $output->writeln($message);
         if ($this->outOfSyncFundFound) {
             $env = getenv('APP_ENV');


199) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:49    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
-        $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
+        $message = $this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected";
         $output->writeln($message);
         if ($this->outOfSyncFundFound) {
             $env = getenv('APP_ENV');


200) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:49    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $arrayInput = new ArrayInput(['mode' => 'check'], new InputDefinition([new InputArgument('mode', InputArgument::REQUIRED)]));
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
-        $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
+        $message = 'Out of sync funds check completed';
         $output->writeln($message);
         if ($this->outOfSyncFundFound) {
             $env = getenv('APP_ENV');


201) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:50    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         parent::doExecute($arrayInput, $bufferedOutput);
         $chatMessage = new ChatMessage('Out of sync funds check');
         $message = 'Out of sync funds check completed' . ($this->outOfSyncFundFound ? " OUT OF SYNC FUNDS DETECTED" : " no out of sync funds detected");
-        $output->writeln($message);
+        
         if ($this->outOfSyncFundFound) {
             $env = getenv('APP_ENV');
             \assert(is_string($env));


202) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:61    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $env = getenv('APP_ENV');
             \assert(is_string($env));
             $options = (new SlackOptions())->block(new SlackHeaderBlock(sprintf('[%s] %s', $env, $message)))->block((new SlackSectionBlock())->text($bufferedOutput->fetch()));
-            $chatMessage->options($options);
+            
             $this->chatter->send($chatMessage);
         }
         return 0;
     }
 }


203) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             \assert(is_string($env));
             $options = (new SlackOptions())->block(new SlackHeaderBlock(sprintf('[%s] %s', $env, $message)))->block((new SlackSectionBlock())->text($bufferedOutput->fetch()));
             $chatMessage->options($options);
-            $this->chatter->send($chatMessage);
+            
         }
         return 0;
     }
 }


204) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:66    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $chatMessage->options($options);
             $this->chatter->send($chatMessage);
         }
-        return 0;
+        return -1;
     }
 }


205) /home/barney/projects/matchbot/src/Application/Commands/ScheduledOutOfSyncFundsCheck.php:66    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $chatMessage->options($options);
             $this->chatter->send($chatMessage);
         }
-        return 0;
+        return 1;
     }
 }


206) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:63    [M] LessThan

--- Original
+++ New
@@ @@
                     // This is currently possible if a charity had a campaign already launchable
                     // before, but no longer meets the requirements to run it. Our Saleforce APIs
                     // will then 404 and no longer return current data for the campaign.
-                    if ($campaign->getEndDate() < new \DateTime()) {
+                    if ($campaign->getEndDate() <= new \DateTime()) {
                         $this->logger->info(sprintf('Skipping unknown PRODUCTION campaign %s whose end date had passed – charity inactive?', $campaign->getSalesforceId()));
                     } else {
                         $this->logger->error(sprintf('Skipping unknown PRODUCTION campaign %s – charity inactive?', $campaign->getSalesforceId()));


207) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:63    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
                     // This is currently possible if a charity had a campaign already launchable
                     // before, but no longer meets the requirements to run it. Our Saleforce APIs
                     // will then 404 and no longer return current data for the campaign.
-                    if ($campaign->getEndDate() < new \DateTime()) {
+                    if ($campaign->getEndDate() >= new \DateTime()) {
                         $this->logger->info(sprintf('Skipping unknown PRODUCTION campaign %s whose end date had passed – charity inactive?', $campaign->getSalesforceId()));
                     } else {
                         $this->logger->error(sprintf('Skipping unknown PRODUCTION campaign %s – charity inactive?', $campaign->getSalesforceId()));


208) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     // before, but no longer meets the requirements to run it. Our Saleforce APIs
                     // will then 404 and no longer return current data for the campaign.
                     if ($campaign->getEndDate() < new \DateTime()) {
-                        $this->logger->info(sprintf('Skipping unknown PRODUCTION campaign %s whose end date had passed – charity inactive?', $campaign->getSalesforceId()));
+                        
                     } else {
                         $this->logger->error(sprintf('Skipping unknown PRODUCTION campaign %s – charity inactive?', $campaign->getSalesforceId()));
                     }


209) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:69    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     if ($campaign->getEndDate() < new \DateTime()) {
                         $this->logger->info(sprintf('Skipping unknown PRODUCTION campaign %s whose end date had passed – charity inactive?', $campaign->getSalesforceId()));
                     } else {
-                        $this->logger->error(sprintf('Skipping unknown PRODUCTION campaign %s – charity inactive?', $campaign->getSalesforceId()));
+                        
                     }
                 } else {
                     // Chances are a sandbox refresh has led to this campaign being deleted in the Salesforce sandbox.


210) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:79    [M] Concat

--- Original
+++ New
@@ @@
                     $output->writeln('Skipping unknown sandbox campaign ' . $campaign->getSalesforceId());
                 }
             } catch (DomainCurrencyMustNotChangeException $exception) {
-                $output->writeln('Skipping invalid currency change campaign ' . $campaign->getSalesforceId());
+                $output->writeln($campaign->getSalesforceId() . 'Skipping invalid currency change campaign ');
             } catch (TransferException $exception) {
                 $this->logger->info(sprintf('Retrying campaign %s due to transfer error "%s"', $campaign->getSalesforceId(), $exception->getMessage()));
                 try {


211) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:79    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                     $output->writeln('Skipping unknown sandbox campaign ' . $campaign->getSalesforceId());
                 }
             } catch (DomainCurrencyMustNotChangeException $exception) {
-                $output->writeln('Skipping invalid currency change campaign ' . $campaign->getSalesforceId());
+                $output->writeln($campaign->getSalesforceId());
             } catch (TransferException $exception) {
                 $this->logger->info(sprintf('Retrying campaign %s due to transfer error "%s"', $campaign->getSalesforceId(), $exception->getMessage()));
                 try {


212) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:79    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                     $output->writeln('Skipping unknown sandbox campaign ' . $campaign->getSalesforceId());
                 }
             } catch (DomainCurrencyMustNotChangeException $exception) {
-                $output->writeln('Skipping invalid currency change campaign ' . $campaign->getSalesforceId());
+                $output->writeln('Skipping invalid currency change campaign ');
             } catch (TransferException $exception) {
                 $this->logger->info(sprintf('Retrying campaign %s due to transfer error "%s"', $campaign->getSalesforceId(), $exception->getMessage()));
                 try {


213) /home/barney/projects/matchbot/src/Application/Commands/UpdateCampaigns.php:79    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     $output->writeln('Skipping unknown sandbox campaign ' . $campaign->getSalesforceId());
                 }
             } catch (DomainCurrencyMustNotChangeException $exception) {
-                $output->writeln('Skipping invalid currency change campaign ' . $campaign->getSalesforceId());
+                
             } catch (TransferException $exception) {
                 $this->logger->info(sprintf('Retrying campaign %s due to transfer error "%s"', $campaign->getSalesforceId(), $exception->getMessage()));
                 try {


214) /home/barney/projects/matchbot/src/Application/Fees/Calculator.php:44    [M] Concat

--- Original
+++ New
@@ @@
     {
         $this->pspFeeSettings = $settings[$psp]['fee'];
         if (!in_array($this->cardBrand, [...self::STRIPE_CARD_BRANDS, null], true)) {
-            throw new \UnexpectedValueException('Unexpected card brand, expected brands are ' . implode(', ', self::STRIPE_CARD_BRANDS));
+            throw new \UnexpectedValueException(implode(', ', self::STRIPE_CARD_BRANDS) . 'Unexpected card brand, expected brands are ');
         }
     }
     public function getCoreFee() : string


215) /home/barney/projects/matchbot/src/Application/Fees/Calculator.php:44    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     {
         $this->pspFeeSettings = $settings[$psp]['fee'];
         if (!in_array($this->cardBrand, [...self::STRIPE_CARD_BRANDS, null], true)) {
-            throw new \UnexpectedValueException('Unexpected card brand, expected brands are ' . implode(', ', self::STRIPE_CARD_BRANDS));
+            throw new \UnexpectedValueException(implode(', ', self::STRIPE_CARD_BRANDS));
         }
     }
     public function getCoreFee() : string


216) /home/barney/projects/matchbot/src/Application/Fees/Calculator.php:44    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     {
         $this->pspFeeSettings = $settings[$psp]['fee'];
         if (!in_array($this->cardBrand, [...self::STRIPE_CARD_BRANDS, null], true)) {
-            throw new \UnexpectedValueException('Unexpected card brand, expected brands are ' . implode(', ', self::STRIPE_CARD_BRANDS));
+            throw new \UnexpectedValueException('Unexpected card brand, expected brands are ');
         }
     }
     public function getCoreFee() : string


217) /home/barney/projects/matchbot/src/Application/Fees/Calculator.php:44    [M] Throw_

--- Original
+++ New
@@ @@
     {
         $this->pspFeeSettings = $settings[$psp]['fee'];
         if (!in_array($this->cardBrand, [...self::STRIPE_CARD_BRANDS, null], true)) {
-            throw new \UnexpectedValueException('Unexpected card brand, expected brands are ' . implode(', ', self::STRIPE_CARD_BRANDS));
+            new \UnexpectedValueException('Unexpected card brand, expected brands are ' . implode(', ', self::STRIPE_CARD_BRANDS));
         }
     }
     public function getCoreFee() : string


218) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:29    [M] DecrementInteger

--- Original
+++ New
@@ @@
     protected function respond() : Response
     {
         $exception = $this->exception;
-        $statusCode = 500;
+        $statusCode = 499;
         $error = new ActionError(ActionError::SERVER_ERROR, 'An internal error has occurred while processing your request.');
         if ($exception instanceof HttpException) {
             $statusCode = $exception->getCode();


219) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:29    [M] IncrementInteger

--- Original
+++ New
@@ @@
     protected function respond() : Response
     {
         $exception = $this->exception;
-        $statusCode = 500;
+        $statusCode = 501;
         $error = new ActionError(ActionError::SERVER_ERROR, 'An internal error has occurred while processing your request.');
         if ($exception instanceof HttpException) {
             $statusCode = $exception->getCode();


220) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:35    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $exception = $this->exception;
         $statusCode = 500;
         $error = new ActionError(ActionError::SERVER_ERROR, 'An internal error has occurred while processing your request.');
-        if ($exception instanceof HttpException) {
+        if (true) {
             $statusCode = $exception->getCode();
             $error->setDescription($exception->getMessage());
             if ($exception instanceof HttpNotFoundException) {


221) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:35    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $exception = $this->exception;
         $statusCode = 500;
         $error = new ActionError(ActionError::SERVER_ERROR, 'An internal error has occurred while processing your request.');
-        if ($exception instanceof HttpException) {
+        if (false) {
             $statusCode = $exception->getCode();
             $error->setDescription($exception->getMessage());
             if ($exception instanceof HttpNotFoundException) {


222) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $error = new ActionError(ActionError::SERVER_ERROR, 'An internal error has occurred while processing your request.');
         if ($exception instanceof HttpException) {
             $statusCode = $exception->getCode();
-            $error->setDescription($exception->getMessage());
+            
             if ($exception instanceof HttpNotFoundException) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {


223) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:39    [M] InstanceOf_

--- Original
+++ New
@@ @@
         if ($exception instanceof HttpException) {
             $statusCode = $exception->getCode();
             $error->setDescription($exception->getMessage());
-            if ($exception instanceof HttpNotFoundException) {
+            if (true) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);


224) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:39    [M] InstanceOf_

--- Original
+++ New
@@ @@
         if ($exception instanceof HttpException) {
             $statusCode = $exception->getCode();
             $error->setDescription($exception->getMessage());
-            if ($exception instanceof HttpNotFoundException) {
+            if (false) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);


225) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $statusCode = $exception->getCode();
             $error->setDescription($exception->getMessage());
             if ($exception instanceof HttpNotFoundException) {
-                $error->setType(ActionError::RESOURCE_NOT_FOUND);
+                
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {


226) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:41    [M] InstanceOf_

--- Original
+++ New
@@ @@
             $error->setDescription($exception->getMessage());
             if ($exception instanceof HttpNotFoundException) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
-            } elseif ($exception instanceof HttpMethodNotAllowedException) {
+            } elseif (true) {
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);


227) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:41    [M] InstanceOf_

--- Original
+++ New
@@ @@
             $error->setDescription($exception->getMessage());
             if ($exception instanceof HttpNotFoundException) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
-            } elseif ($exception instanceof HttpMethodNotAllowedException) {
+            } elseif (false) {
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);


228) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:42    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             if ($exception instanceof HttpNotFoundException) {
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
-                $error->setType(ActionError::NOT_ALLOWED);
+                
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {


229) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:43    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);
-            } elseif ($exception instanceof HttpUnauthorizedException) {
+            } elseif (true) {
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);


230) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:43    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::RESOURCE_NOT_FOUND);
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);
-            } elseif ($exception instanceof HttpUnauthorizedException) {
+            } elseif (false) {
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);


231) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:44    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } elseif ($exception instanceof HttpMethodNotAllowedException) {
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {
-                $error->setType(ActionError::UNAUTHENTICATED);
+                
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {


232) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:45    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);
-            } elseif ($exception instanceof HttpForbiddenException) {
+            } elseif (true) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);


233) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:45    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_ALLOWED);
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);
-            } elseif ($exception instanceof HttpForbiddenException) {
+            } elseif (false) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);


234) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:46    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } elseif ($exception instanceof HttpUnauthorizedException) {
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {
-                $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
+                
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);
             } elseif ($exception instanceof HttpNotImplementedException) {


235) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:47    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
-            } elseif ($exception instanceof HttpBadRequestException) {
+            } elseif (true) {
                 $error->setType(ActionError::BAD_REQUEST);
             } elseif ($exception instanceof HttpNotImplementedException) {
                 $error->setType(ActionError::NOT_IMPLEMENTED);


236) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:47    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::UNAUTHENTICATED);
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
-            } elseif ($exception instanceof HttpBadRequestException) {
+            } elseif (false) {
                 $error->setType(ActionError::BAD_REQUEST);
             } elseif ($exception instanceof HttpNotImplementedException) {
                 $error->setType(ActionError::NOT_IMPLEMENTED);


237) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:48    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } elseif ($exception instanceof HttpForbiddenException) {
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {
-                $error->setType(ActionError::BAD_REQUEST);
+                
             } elseif ($exception instanceof HttpNotImplementedException) {
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }


238) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:49    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);
-            } elseif ($exception instanceof HttpNotImplementedException) {
+            } elseif (true) {
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }


239) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:49    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::INSUFFICIENT_PRIVILEGES);
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);
-            } elseif ($exception instanceof HttpNotImplementedException) {
+            } elseif (false) {
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }


240) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:50    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } elseif ($exception instanceof HttpBadRequestException) {
                 $error->setType(ActionError::BAD_REQUEST);
             } elseif ($exception instanceof HttpNotImplementedException) {
-                $error->setType(ActionError::NOT_IMPLEMENTED);
+                
             }
         }
         if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {


241) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!true && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


242) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!false && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


243) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] LogicalNot

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if ($exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


244) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] LogicalAnd

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if ((!$exception instanceof HttpException || ($exception instanceof Exception || $exception instanceof Throwable)) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


245) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] LogicalAnd

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) || $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


246) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if ($exception instanceof HttpException && !($exception instanceof Exception || $exception instanceof Throwable) && !$this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


247) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:55    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!(!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails)) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


248) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && (true || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


249) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && (false || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


250) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && ($exception instanceof Exception || true) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


251) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] InstanceOf_

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && ($exception instanceof Exception || false) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


252) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] LogicalOr

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && ($exception instanceof Exception && $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


253) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] LogicalOrAllSubExprNegation

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && (!$exception instanceof Exception || !$exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


254) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:56    [M] LogicalOrNegation

--- Original
+++ New
@@ @@
                 $error->setType(ActionError::NOT_IMPLEMENTED);
             }
         }
-        if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
+        if (!$exception instanceof HttpException && !($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
             $error->setDescription($exception->getMessage());
         }
         $payload = new ActionPayload($statusCode, null, $error);


255) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:59    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
         }
         if (!$exception instanceof HttpException && ($exception instanceof Exception || $exception instanceof Throwable) && $this->displayErrorDetails) {
-            $error->setDescription($exception->getMessage());
+            
         }
         $payload = new ActionPayload($statusCode, null, $error);
         $encodedPayload = json_encode($payload, JSON_PRETTY_PRINT);


256) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $payload = new ActionPayload($statusCode, null, $error);
         $encodedPayload = json_encode($payload, JSON_PRETTY_PRINT);
         $response = $this->responseFactory->createResponse($statusCode);
-        $response->getBody()->write($encodedPayload);
+        
         if (!$this->exception instanceof HttpException) {
             $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }


257) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:68    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $encodedPayload = json_encode($payload, JSON_PRETTY_PRINT);
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
-        if (!$this->exception instanceof HttpException) {
+        if (!true) {
             $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


258) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:68    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $encodedPayload = json_encode($payload, JSON_PRETTY_PRINT);
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
-        if (!$this->exception instanceof HttpException) {
+        if (!false) {
             $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


259) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:68    [M] LogicalNot

--- Original
+++ New
@@ @@
         $encodedPayload = json_encode($payload, JSON_PRETTY_PRINT);
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
-        if (!$this->exception instanceof HttpException) {
+        if ($this->exception instanceof HttpException) {
             $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


260) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:69    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


261) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:73    [M] Concat

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), ":" . $this->exception->getFile() . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


262) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:73    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


263) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:73    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . $this->exception->getLine(), $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


264) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:73    [M] Concat

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . $this->exception->getLine() . ":", $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


265) /home/barney/projects/matchbot/src/Application/Handlers/HttpErrorHandler.php:73    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $response = $this->responseFactory->createResponse($statusCode);
         $response->getBody()->write($encodedPayload);
         if (!$this->exception instanceof HttpException) {
-            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":" . $this->exception->getLine(), $this->exception->getTraceAsString()));
+            $this->logError(sprintf("%s: %s \n#\n %s \n %s", get_class($this->exception), $this->exception->getMessage(), $this->exception->getFile() . ":", $this->exception->getTraceAsString()));
         }
         return $response->withHeader('Content-Type', 'application/json');
     }
 }


266) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:25    [M] IfNegation

--- Original
+++ New
@@ @@
     public function __invoke()
     {
         $error = error_get_last();
-        if ($error) {
+        if (!$error) {
             $errorFile = $error['file'];
             $errorLine = $error['line'];
             $errorMessage = $error['message'];


267) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:36    [M] Assignment

--- Original
+++ New
@@ @@
                 switch ($errorType) {
                     case E_USER_ERROR:
                         $message = "FATAL ERROR: {$errorMessage}. ";
-                        $message .= " on line {$errorLine} in file {$errorFile}.";
+                        $message = " on line {$errorLine} in file {$errorFile}.";
                         break;
                     case E_USER_WARNING:
                         $message = "WARNING: {$errorMessage}";


268) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:49    [M] Assignment

--- Original
+++ New
@@ @@
                         break;
                     default:
                         $message = "ERROR: {$errorMessage}";
-                        $message .= " on line {$errorLine} in file {$errorFile}.";
+                        $message = " on line {$errorLine} in file {$errorFile}.";
                         break;
                 }
             }


269) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:58    [M] Identical

--- Original
+++ New
@@ @@
             // Skip emitting a shutdown response from native warnings on non-dev envs, since events like Redis
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
-            $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
+            $isServiceResolutionWarning = $errorType !== E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
             if ($isServiceResolutionWarning) {
                 return;
             }


270) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:58    [M] LogicalAnd

--- Original
+++ New
@@ @@
             // Skip emitting a shutdown response from native warnings on non-dev envs, since events like Redis
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
-            $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
+            $isServiceResolutionWarning = $errorType === E_WARNING || str_contains($message, 'getaddrinfo failed: Name or service not known');
             if ($isServiceResolutionWarning) {
                 return;
             }


271) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:58    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
             // Skip emitting a shutdown response from native warnings on non-dev envs, since events like Redis
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
-            $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
+            $isServiceResolutionWarning = !($errorType === E_WARNING) && !str_contains($message, 'getaddrinfo failed: Name or service not known');
             if ($isServiceResolutionWarning) {
                 return;
             }


272) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:58    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
             // Skip emitting a shutdown response from native warnings on non-dev envs, since events like Redis
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
-            $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
+            $isServiceResolutionWarning = !($errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known'));
             if ($isServiceResolutionWarning) {
                 return;
             }


273) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:58    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
             // Skip emitting a shutdown response from native warnings on non-dev envs, since events like Redis
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
-            $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
+            $isServiceResolutionWarning = $errorType === E_WARNING && !str_contains($message, 'getaddrinfo failed: Name or service not known');
             if ($isServiceResolutionWarning) {
                 return;
             }


274) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:61    [M] IfNegation

--- Original
+++ New
@@ @@
             // connection failures cause these. These are already logged and if error-like output is emitted
             // alongside `/ping`'s more helpful output, its response body is left malformatted.
             $isServiceResolutionWarning = $errorType === E_WARNING && str_contains($message, 'getaddrinfo failed: Name or service not known');
-            if ($isServiceResolutionWarning) {
+            if (!$isServiceResolutionWarning) {
                 return;
             }
             if ($errorType === E_DEPRECATED) {


275) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:65    [M] Identical

--- Original
+++ New
@@ @@
             if ($isServiceResolutionWarning) {
                 return;
             }
-            if ($errorType === E_DEPRECATED) {
+            if ($errorType !== E_DEPRECATED) {
                 // Don't let deprecations trigger `HttpInternalServerErrorException`, at least for as
                 // long as we know our rate limit middleware has one in PHP 8.1.
                 // See https://github.com/Lansoweb/LosRateLimit/issues/11


276) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:77    [M] FalseValue

--- Original
+++ New
@@ @@
                 $this->request,
                 $exception,
                 $this->displayErrorDetails,
-                false,
+                true,
                 // Don't log via the less flexible built-in Slim fn; HttpErrorHandler does it via LoggerInterface
                 false
             );


277) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:78    [M] FalseValue

--- Original
+++ New
@@ @@
                 $this->displayErrorDetails,
                 false,
                 // Don't log via the less flexible built-in Slim fn; HttpErrorHandler does it via LoggerInterface
-                false
+                true
             );
             $responseEmitter = new ResponseEmitter();
             $responseEmitter->emit($response);


278) /home/barney/projects/matchbot/src/Application/Handlers/ShutdownHandler.php:82    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 false
             );
             $responseEmitter = new ResponseEmitter();
-            $responseEmitter->emit($response);
+            
         }
     }
 }


279) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:56    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param callable $function
      * @return mixed The given `$function`'s return value
      */
-    public function runTransactionally(callable $function)
+    protected function runTransactionally(callable $function)
     {
         $this->inTransaction = true;
         $result = $this->doRunTransactionally($function);


280) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:58    [M] TrueValue

--- Original
+++ New
@@ @@
      */
     public function runTransactionally(callable $function)
     {
-        $this->inTransaction = true;
+        $this->inTransaction = false;
         $result = $this->doRunTransactionally($function);
         $this->inTransaction = false;
         return $result;


281) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:60    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         $this->inTransaction = true;
         $result = $this->doRunTransactionally($function);
-        $this->inTransaction = false;
+        $this->inTransaction = true;
         return $result;
     }
     /**


282) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:70    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param string $amount
      * @return string New fund balance as bcmath-ready string
      */
-    public function addAmount(CampaignFunding $funding, string $amount) : string
+    protected function addAmount(CampaignFunding $funding, string $amount) : string
     {
         if (!$this->inTransaction) {
             throw new \LogicException('Matching adapter work must be in a transaction');


283) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:72    [M] LogicalNot

--- Original
+++ New
@@ @@
      */
     public function addAmount(CampaignFunding $funding, string $amount) : string
     {
-        if (!$this->inTransaction) {
+        if ($this->inTransaction) {
             throw new \LogicException('Matching adapter work must be in a transaction');
         }
         return $this->doAddAmount($funding, $amount);


284) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:73    [M] Throw_

--- Original
+++ New
@@ @@
     public function addAmount(CampaignFunding $funding, string $amount) : string
     {
         if (!$this->inTransaction) {
-            throw new \LogicException('Matching adapter work must be in a transaction');
+            new \LogicException('Matching adapter work must be in a transaction');
         }
         return $this->doAddAmount($funding, $amount);
     }


285) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:84    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param string $amount
      * @return string New fund balance as bcmath-ready string
      */
-    public function subtractAmount(CampaignFunding $funding, string $amount) : string
+    protected function subtractAmount(CampaignFunding $funding, string $amount) : string
     {
         if (!$this->inTransaction) {
             throw new \LogicException('Matching adapter work must be in a transaction');


286) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:86    [M] LogicalNot

--- Original
+++ New
@@ @@
      */
     public function subtractAmount(CampaignFunding $funding, string $amount) : string
     {
-        if (!$this->inTransaction) {
+        if ($this->inTransaction) {
             throw new \LogicException('Matching adapter work must be in a transaction');
         }
         return $this->doSubtractAmount($funding, $amount);


287) /home/barney/projects/matchbot/src/Application/Matching/Adapter.php:87    [M] Throw_

--- Original
+++ New
@@ @@
     public function subtractAmount(CampaignFunding $funding, string $amount) : string
     {
         if (!$this->inTransaction) {
-            throw new \LogicException('Matching adapter work must be in a transaction');
+            new \LogicException('Matching adapter work must be in a transaction');
         }
         return $this->doSubtractAmount($funding, $amount);
     }


288) /home/barney/projects/matchbot/src/Application/Matching/LessThanRequestedAllocatedException.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     #[Pure]
     public function __construct(private string $amountAllocated, private string $fundRemainingAmount)
     {
-        parent::__construct('Less than requested was allocated');
+        
     }
     public function getAmountAllocated() : string
     {


289) /home/barney/projects/matchbot/src/Application/Matching/LessThanRequestedAllocatedException.php:27    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         parent::__construct('Less than requested was allocated');
     }
-    public function getAmountAllocated() : string
+    protected function getAmountAllocated() : string
     {
         return $this->amountAllocated;
     }
 }


290) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:48    [M] PublicVisibility

--- Original
+++ New
@@ @@
     public function __construct(private Redis $redis, private EntityManagerInterface $entityManager, private LoggerInterface $logger)
     {
     }
-    #[Pure]
-    public function doRunTransactionally(callable $function)
+    protected function doRunTransactionally(callable $function)
     {
         $result = $function();
         $this->saveFundingsToDatabase();


291) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:53    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function doRunTransactionally(callable $function)
     {
         $result = $function();
-        $this->saveFundingsToDatabase();
+        
         return $result;
     }
     public function getAmountAvailable(CampaignFunding $funding) : string


292) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:61    [M] FalseValue

--- Original
+++ New
@@ @@
     public function getAmountAvailable(CampaignFunding $funding) : string
     {
         $redisFundBalanceFractional = $this->redis->get($this->buildKey($funding));
-        if ($redisFundBalanceFractional === false) {
+        if ($redisFundBalanceFractional === true) {
             // No value in Redis -> may well have expired after 24 hours. Consult the DB for the
             // stable value. This will often happen for old or slower moving campaigns.
             return $funding->getAmountAvailable();


293) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:61    [M] Identical

--- Original
+++ New
@@ @@
     public function getAmountAvailable(CampaignFunding $funding) : string
     {
         $redisFundBalanceFractional = $this->redis->get($this->buildKey($funding));
-        if ($redisFundBalanceFractional === false) {
+        if ($redisFundBalanceFractional !== false) {
             // No value in Redis -> may well have expired after 24 hours. Consult the DB for the
             // stable value. This will often happen for old or slower moving campaigns.
             return $funding->getAmountAvailable();


294) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:70    [M] CastInt

--- Original
+++ New
@@ @@
         // Redis INCRBY / DECRBY and friends work on values which are validated to be integer-like
         // but are actually stored as strings internally, and seem to come back to PHP as strings
         // when get() is used => cast to int before converting to pounds.
-        return $this->toCurrencyWholeUnit((int) $redisFundBalanceFractional);
+        return $this->toCurrencyWholeUnit($redisFundBalanceFractional);
     }
     protected function doSubtractAmount(CampaignFunding $funding, string $amount) : string
     {


295) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:82    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     protected function doSubtractAmount(CampaignFunding $funding, string $amount) : string
     {
         $decrementFractional = $this->toCurrencyFractionalUnit($amount);
-        [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->decrBy($this->buildKey($funding), $decrementFractional)->exec();
+        [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['ex' => static::$storageDurationSeconds])->decrBy($this->buildKey($funding), $decrementFractional)->exec();
         $fundBalanceFractional = (int) $fundBalanceFractional;
         if ($fundBalanceFractional < 0) {
             // We have hit the edge case where not having strict, slow locks falls down. We atomically


296) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:87    [M] CastInt

--- Original
+++ New
@@ @@
     {
         $decrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->decrBy($this->buildKey($funding), $decrementFractional)->exec();
-        $fundBalanceFractional = (int) $fundBalanceFractional;
+        $fundBalanceFractional = $fundBalanceFractional;
         if ($fundBalanceFractional < 0) {
             // We have hit the edge case where not having strict, slow locks falls down. We atomically
             // allocated some match funds based on the amount available when we queried the database, but since our


297) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:88    [M] LessThan

--- Original
+++ New
@@ @@
         $decrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->decrBy($this->buildKey($funding), $decrementFractional)->exec();
         $fundBalanceFractional = (int) $fundBalanceFractional;
-        if ($fundBalanceFractional < 0) {
+        if ($fundBalanceFractional <= 0) {
             // We have hit the edge case where not having strict, slow locks falls down. We atomically
             // allocated some match funds based on the amount available when we queried the database, but since our
             // query somebody else got some match funds and now taking the amount we wanted would take the fund's


298) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:88    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
         $decrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->decrBy($this->buildKey($funding), $decrementFractional)->exec();
         $fundBalanceFractional = (int) $fundBalanceFractional;
-        if ($fundBalanceFractional < 0) {
+        if ($fundBalanceFractional >= 0) {
             // We have hit the edge case where not having strict, slow locks falls down. We atomically
             // allocated some match funds based on the amount available when we queried the database, but since our
             // query somebody else got some match funds and now taking the amount we wanted would take the fund's


299) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:101    [M] DecrementInteger

--- Original
+++ New
@@ @@
             //
             // So, let's do exactly that and then fail in a way that tells the caller to retry, getting the new fund
             // total first. This is essentially a DIY optimistic lock exception.
-            $retries = 0;
+            $retries = -1;
             $amountAllocatedFractional = $decrementFractional;
             while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero


300) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] Increment

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries-- < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


301) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LessThan

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries++ <= $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


302) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries++ >= $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


303) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LessThan

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional <= 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


304) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional >= 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


305) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LogicalAnd

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while ($retries++ < $this->maxPartialAllocateTries || $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


306) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while (!($retries++ < $this->maxPartialAllocateTries) && !($fundBalanceFractional < 0)) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


307) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while (!($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0)) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


308) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:103    [M] While_

--- Original
+++ New
@@ @@
             // total first. This is essentially a DIY optimistic lock exception.
             $retries = 0;
             $amountAllocatedFractional = $decrementFractional;
-            while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
+            while (false) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);


309) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:105    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $amountAllocatedFractional = $decrementFractional;
             while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
-                $overspendFractional = 0 - $fundBalanceFractional;
+                $overspendFractional = -1 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }


310) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:105    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $amountAllocatedFractional = $decrementFractional;
             while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
-                $overspendFractional = 0 - $fundBalanceFractional;
+                $overspendFractional = 1 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }


311) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:105    [M] Minus

--- Original
+++ New
@@ @@
             $amountAllocatedFractional = $decrementFractional;
             while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
-                $overspendFractional = 0 - $fundBalanceFractional;
+                $overspendFractional = 0 + $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }


312) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:106    [M] CastInt

--- Original
+++ New
@@ @@
             while ($retries++ < $this->maxPartialAllocateTries && $fundBalanceFractional < 0) {
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
-                $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
+                $fundBalanceFractional = $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }
             if ($fundBalanceFractional < 0) {


313) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:107    [M] Assignment

--- Original
+++ New
@@ @@
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
-                $amountAllocatedFractional -= $overspendFractional;
+                $amountAllocatedFractional = $overspendFractional;
             }
             if ($fundBalanceFractional < 0) {
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever


314) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:107    [M] MinusEqual

--- Original
+++ New
@@ @@
                 // Try deallocating just the difference until the fund has exactly zero
                 $overspendFractional = 0 - $fundBalanceFractional;
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
-                $amountAllocatedFractional -= $overspendFractional;
+                $amountAllocatedFractional += $overspendFractional;
             }
             if ($fundBalanceFractional < 0) {
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever


315) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:110    [M] LessThan

--- Original
+++ New
@@ @@
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }
-            if ($fundBalanceFractional < 0) {
+            if ($fundBalanceFractional <= 0) {
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);


316) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:110    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $overspendFractional);
                 $amountAllocatedFractional -= $overspendFractional;
             }
-            if ($fundBalanceFractional < 0) {
+            if ($fundBalanceFractional >= 0) {
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);


317) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:113    [M] CastInt

--- Original
+++ New
@@ @@
             if ($fundBalanceFractional < 0) {
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever
                 // we tried to hold back to the match pot and bail out.
-                $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
+                $fundBalanceFractional = $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
                 throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
             }


318) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:117    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 // We couldn't get the values to work within the maximum number of iterations, so release whatever
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
-                $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
+                
                 throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));


319) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:118    [M] Throw_

--- Original
+++ New
@@ @@
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
-                throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
+                new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));


320) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:119    [M] Concat

--- Original
+++ New
@@ @@
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
-                throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
+                throw new TerminalLockException("Releasing final {$amountAllocatedFractional} 'cents'" . "Fund {$funding->getId()} balance sub-zero after {$retries} attempts. ");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));


321) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:119    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
-                throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
+                throw new TerminalLockException("Releasing final {$amountAllocatedFractional} 'cents'");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));


322) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:119    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // we tried to hold back to the match pot and bail out.
                 $fundBalanceFractional = (int) $this->redis->incrBy($this->buildKey($funding), $amountAllocatedFractional);
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
-                throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
+                throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. ");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));


323) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:124    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
                 throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
             }
-            $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
+            
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));
         }
         $this->amountsSubtractedInCurrentProcess[] = ['campaignFunding' => $funding, 'amount' => $amount];


324) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:125    [M] Throw_

--- Original
+++ New
@@ @@
                 throw new TerminalLockException("Fund {$funding->getId()} balance sub-zero after {$retries} attempts. " . "Releasing final {$amountAllocatedFractional} 'cents'");
             }
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
-            throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));
+            new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));
         }
         $this->amountsSubtractedInCurrentProcess[] = ['campaignFunding' => $funding, 'amount' => $amount];
         $fundBalance = $this->toCurrencyWholeUnit($fundBalanceFractional);


325) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:131    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $this->setFundingValue($funding, $this->toCurrencyWholeUnit($fundBalanceFractional));
             throw new LessThanRequestedAllocatedException($this->toCurrencyWholeUnit($amountAllocatedFractional), $this->toCurrencyWholeUnit($fundBalanceFractional));
         }
-        $this->amountsSubtractedInCurrentProcess[] = ['campaignFunding' => $funding, 'amount' => $amount];
+        $this->amountsSubtractedInCurrentProcess[] = ['amount' => $amount];
         $fundBalance = $this->toCurrencyWholeUnit($fundBalanceFractional);
         $this->setFundingValue($funding, $fundBalance);
         return $fundBalance;


326) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:134    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $this->amountsSubtractedInCurrentProcess[] = ['campaignFunding' => $funding, 'amount' => $amount];
         $fundBalance = $this->toCurrencyWholeUnit($fundBalanceFractional);
-        $this->setFundingValue($funding, $fundBalance);
+        
         return $fundBalance;
     }
     #[Pure]


327) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:139    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $this->setFundingValue($funding, $fundBalance);
         return $fundBalance;
     }
-    #[Pure]
-    public function doAddAmount(CampaignFunding $funding, string $amount) : string
+    protected function doAddAmount(CampaignFunding $funding, string $amount) : string
     {
         $incrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->incrBy($this->buildKey($funding), $incrementFractional)->exec();


328) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:149    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     public function doAddAmount(CampaignFunding $funding, string $amount) : string
     {
         $incrementFractional = $this->toCurrencyFractionalUnit($amount);
-        [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->incrBy($this->buildKey($funding), $incrementFractional)->exec();
+        [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['ex' => static::$storageDurationSeconds])->incrBy($this->buildKey($funding), $incrementFractional)->exec();
         $fundBalance = $this->toCurrencyWholeUnit((int) $fundBalanceFractional);
         $this->setFundingValue($funding, $fundBalance);
         return $fundBalance;


329) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:154    [M] CastInt

--- Original
+++ New
@@ @@
     {
         $incrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->incrBy($this->buildKey($funding), $incrementFractional)->exec();
-        $fundBalance = $this->toCurrencyWholeUnit((int) $fundBalanceFractional);
+        $fundBalance = $this->toCurrencyWholeUnit($fundBalanceFractional);
         $this->setFundingValue($funding, $fundBalance);
         return $fundBalance;
     }


330) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:155    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $incrementFractional = $this->toCurrencyFractionalUnit($amount);
         [$initResponse, $fundBalanceFractional] = $this->redis->multi()->set($this->buildKey($funding), $this->toCurrencyFractionalUnit($funding->getAmountAvailable()), ['nx', 'ex' => static::$storageDurationSeconds])->incrBy($this->buildKey($funding), $incrementFractional)->exec();
         $fundBalance = $this->toCurrencyWholeUnit((int) $fundBalanceFractional);
-        $this->setFundingValue($funding, $fundBalance);
+        
         return $fundBalance;
     }
     public function delete(CampaignFunding $funding) : void


331) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:162    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function delete(CampaignFunding $funding) : void
     {
-        $this->redis->del($this->buildKey($funding));
+        
     }
     /**
      * Converts e.g. pounds to pence – but is currency-agnostic except for currently assuming


332) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:174    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function toCurrencyFractionalUnit(string $wholeUnit) : int
     {
-        return (int) bcmul($wholeUnit, '100', 0);
+        return (int) bcmul($wholeUnit, '100', -1);
     }
     /**
      * Converts e.g. pence to pounds – but is currency-agnostic except for currently assuming


333) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:174    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function toCurrencyFractionalUnit(string $wholeUnit) : int
     {
-        return (int) bcmul($wholeUnit, '100', 0);
+        return (int) bcmul($wholeUnit, '100', 1);
     }
     /**
      * Converts e.g. pence to pounds – but is currency-agnostic except for currently assuming


334) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:174    [M] BCMath

--- Original
+++ New
@@ @@
      */
     private function toCurrencyFractionalUnit(string $wholeUnit) : int
     {
-        return (int) bcmul($wholeUnit, '100', 0);
+        return (int) (string) ($wholeUnit * '100');
     }
     /**
      * Converts e.g. pence to pounds – but is currency-agnostic except for currently assuming


335) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:174    [M] CastInt

--- Original
+++ New
@@ @@
      */
     private function toCurrencyFractionalUnit(string $wholeUnit) : int
     {
-        return (int) bcmul($wholeUnit, '100', 0);
+        return bcmul($wholeUnit, '100', 0);
     }
     /**
      * Converts e.g. pence to pounds – but is currency-agnostic except for currently assuming


336) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:186    [M] CastString

--- Original
+++ New
@@ @@
      */
     private function toCurrencyWholeUnit(int $fractionalUnit) : string
     {
-        return bcdiv((string) $fractionalUnit, '100', 2);
+        return bcdiv($fractionalUnit, '100', 2);
     }
     private function buildKey(CampaignFunding $funding) : string
     {


337) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:186    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function toCurrencyWholeUnit(int $fractionalUnit) : string
     {
-        return bcdiv((string) $fractionalUnit, '100', 2);
+        return bcdiv((string) $fractionalUnit, '100', 1);
     }
     private function buildKey(CampaignFunding $funding) : string
     {


338) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:186    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function toCurrencyWholeUnit(int $fractionalUnit) : string
     {
-        return bcdiv((string) $fractionalUnit, '100', 2);
+        return bcdiv((string) $fractionalUnit, '100', 3);
     }
     private function buildKey(CampaignFunding $funding) : string
     {


339) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:186    [M] BCMath

--- Original
+++ New
@@ @@
      */
     private function toCurrencyWholeUnit(int $fractionalUnit) : string
     {
-        return bcdiv((string) $fractionalUnit, '100', 2);
+        return (string) ((string) $fractionalUnit / '100');
     }
     private function buildKey(CampaignFunding $funding) : string
     {


340) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:201    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     private function saveFundingsToDatabase() : void
     {
-        $this->entityManager->transactional(function () {
-            foreach ($this->fundingsToPersist as $funding) {
-                $this->entityManager->persist($funding);
-            }
-        });
+        
     }
     private function setFundingValue(CampaignFunding $funding, string $newValue) : void
     {


341) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:202    [M] Foreach_

--- Original
+++ New
@@ @@
     private function saveFundingsToDatabase() : void
     {
         $this->entityManager->transactional(function () {
-            foreach ($this->fundingsToPersist as $funding) {
+            foreach (array() as $funding) {
                 $this->entityManager->persist($funding);
             }
         });


342) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:203    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->entityManager->transactional(function () {
             foreach ($this->fundingsToPersist as $funding) {
-                $this->entityManager->persist($funding);
+                
             }
         });
     }


343) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:210    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     private function setFundingValue(CampaignFunding $funding, string $newValue) : void
     {
-        $funding->setAmountAvailable($newValue);
+        
         if (!in_array($funding, $this->fundingsToPersist, true)) {
             $this->fundingsToPersist[] = $funding;
         }


344) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:211    [M] LogicalNot

--- Original
+++ New
@@ @@
     private function setFundingValue(CampaignFunding $funding, string $newValue) : void
     {
         $funding->setAmountAvailable($newValue);
-        if (!in_array($funding, $this->fundingsToPersist, true)) {
+        if (in_array($funding, $this->fundingsToPersist, true)) {
             $this->fundingsToPersist[] = $funding;
         }
     }


345) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:222    [M] Foreach_

--- Original
+++ New
@@ @@
      */
     public function releaseNewlyAllocatedFunds() : void
     {
-        foreach ($this->amountsSubtractedInCurrentProcess as $fundingAndAmount) {
+        foreach (array() as $fundingAndAmount) {
             $amount = $fundingAndAmount['amount'];
             $funding = $fundingAndAmount['campaignFunding'];
             $this->logger->warning("Released newly allocated funds of {$amount} for funding# {$funding->getId()}");


346) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:226    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         foreach ($this->amountsSubtractedInCurrentProcess as $fundingAndAmount) {
             $amount = $fundingAndAmount['amount'];
             $funding = $fundingAndAmount['campaignFunding'];
-            $this->logger->warning("Released newly allocated funds of {$amount} for funding# {$funding->getId()}");
+            
             $this->addAmount($funding, $amount);
         }
     }
 }


347) /home/barney/projects/matchbot/src/Application/Matching/OptimisticRedisAdapter.php:228    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $amount = $fundingAndAmount['amount'];
             $funding = $fundingAndAmount['campaignFunding'];
             $this->logger->warning("Released newly allocated funds of {$amount} for funding# {$funding->getId()}");
-            $this->addAmount($funding, $amount);
+            
         }
     }
 }


348) /home/barney/projects/matchbot/src/Application/Messenger/Handler/StripePayoutHandler.php:70    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         try {
             $balanceTransactions = $this->stripeClient->balanceTransactions->all($attributes, ['stripe_account' => $connectAccountId]);
         } catch (ApiErrorException $exception) {
-            $this->logger->error(sprintf('Stripe Balance Transaction lookup error for Payout ID %s, %s [%s]: %s', $payoutId, get_class($exception), $exception->getStripeCode(), $exception->getMessage()));
+            
             return;
         }
         // Auto page, iterating in reverse chronological order. https://stripe.com/docs/api/pagination/auto?lang=php


349) /home/barney/projects/matchbot/src/Application/Messenger/Handler/StripePayoutHandler.php:95    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $this->logger->info(sprintf('Payout: Getting all Connect account paid Charge IDs for Payout ID %s complete, found %s', $payoutId, count($paidChargeIds)));
         if (count($paidChargeIds) === 0) {
-            $this->logger->info(sprintf('Payout: Exited with no paid Charge IDs for Payout ID %s', $payoutId));
+            
             return;
         }
         $chargeIds = $this->getOriginalDonationChargeIds($paidChargeIds, $connectAccountId, $payoutCreated);


350) /home/barney/projects/matchbot/src/Application/Messenger/Handler/StripePayoutHandler.php:106    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $chargeIds = $this->getOriginalDonationChargeIds($paidChargeIds, $connectAccountId, $payoutCreated);
         if ($chargeIds === []) {
-            $this->logger->info(sprintf('Payout: Exited with no original donation charge IDs for Payout ID %s', $payoutId));
+            
             return;
         }
         foreach ($chargeIds as $chargeId) {


351) /home/barney/projects/matchbot/src/Application/Messenger/Handler/StripePayoutHandler.php:216    [M] Continue_

--- Original
+++ New
@@ @@
             foreach ($charges->data as $charge) {
                 $lastChargeId = $charge->id;
                 if (!in_array($charge->id, $paidChargeIds, true)) {
-                    continue;
+                    break;
                 }
                 $sourceTransferIds[] = $charge->source_transfer;
             }


352) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:62    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     public function transactional($func) : mixed
     {
-        $retries = 0;
+        $retries = -1;
         do {
             $this->beginTransaction();
             try {


353) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:63    [M] DoWhile

--- Original
+++ New
@@ @@
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
                 throw $ex;
             }
-        } while ($retries < $this->maxLockRetries);
+        } while (false);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
         throw $ex;
     }


354) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $retries = 0;
         do {
-            $this->beginTransaction();
+            
             try {
                 $ret = $func();
                 $this->flush();


355) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:66    [M] CatchBlockRemoval

--- Original
+++ New
@@ @@
                 $this->flush();
                 $this->commit();
                 return $ret;
-            } catch (RetryableException $ex) {
-                $this->rollback();
-                $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
-                // Wait between 0 and 0.2 seconds before retrying
-                $this->resetManager();
-                ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());


356) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:66    [M] CatchBlockRemoval

--- Original
+++ New
@@ @@
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;
-            } catch (\Exception $ex) {
-                $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
-                throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');


357) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:69    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->beginTransaction();
             try {
                 $ret = $func();
-                $this->flush();
+                
                 $this->commit();
                 return $ret;
             } catch (RetryableException $ex) {


358) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:70    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             try {
                 $ret = $func();
                 $this->flush();
-                $this->commit();
+                
                 return $ret;
             } catch (RetryableException $ex) {
                 $this->rollback();


359) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:74    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->commit();
                 return $ret;
             } catch (RetryableException $ex) {
-                $this->rollback();
+                
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
                 usleep(random_int(0, 200000));


360) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:75    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 return $ret;
             } catch (RetryableException $ex) {
                 $this->rollback();
-                $this->close();
+                
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying


361) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


362) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:78    [M] Concat

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                $this->logger->error(get_class($ex) . 'EM closed. RetrySafeEntityManager::transactional rolling back from ' . $ex->__tostring());
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


363) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:78    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                $this->logger->error(get_class($ex) . $ex->__tostring());
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


364) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:78    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . $ex->__tostring());
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


365) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:78    [M] Concat

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . $ex->__tostring() . get_class($ex));
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


366) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:78    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (RetryableException $ex) {
                 $this->rollback();
                 $this->close();
-                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
+                $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex));
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();


367) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:81    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $this->rollback();
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
+                usleep(random_int(-1, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;


368) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:81    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $this->rollback();
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
+                usleep(random_int(1, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;


369) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:81    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $this->rollback();
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
+                usleep(random_int(0, 199999));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;


370) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:81    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $this->rollback();
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
+                usleep(random_int(0, 200001));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;


371) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:81    [M] FunctionCallRemoval

--- Original
+++ New
@@ @@
                 $this->rollback();
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
-                usleep(random_int(0, 200000));
+                
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
                 ++$retries;


372) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:83    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->close();
                 $this->logger->error('EM closed. RetrySafeEntityManager::transactional rolling back from ' . get_class($ex) . $ex->__tostring());
                 usleep(random_int(0, 200000));
-                // Wait between 0 and 0.2 seconds before retrying
-                $this->resetManager();
+                
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();


373) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:84    [M] Increment

--- Original
+++ New
@@ @@
                 usleep(random_int(0, 200000));
                 // Wait between 0 and 0.2 seconds before retrying
                 $this->resetManager();
-                ++$retries;
+                --$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());


374) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:86    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->resetManager();
                 ++$retries;
             } catch (\Exception $ex) {
-                $this->rollback();
+                
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
                 throw $ex;
             }


375) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:87    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


376) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] Concat

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error(get_class($ex) . 'RetrySafeEntityManager bailing out having hit ' . ': ' . $ex->getMessage());
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


377) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error(get_class($ex) . ': ' . $ex->getMessage());
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


378) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . ': ' . $ex->getMessage());
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


379) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] Concat

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . ': ' . get_class($ex) . $ex->getMessage());
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


380) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . $ex->getMessage());
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


381) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] Concat

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . $ex->getMessage() . ': ');
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


382) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:88    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 ++$retries;
             } catch (\Exception $ex) {
                 $this->rollback();
-                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
+                $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ');
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);


383) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:91    [M] Throw_

--- Original
+++ New
@@ @@
             } catch (\Exception $ex) {
                 $this->rollback();
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
-                throw $ex;
+                $ex;
             }
         } while ($retries < $this->maxLockRetries);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');


384) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:93    [M] LessThan

--- Original
+++ New
@@ @@
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
                 throw $ex;
             }
-        } while ($retries < $this->maxLockRetries);
+        } while ($retries <= $this->maxLockRetries);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
         throw $ex;
     }


385) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:93    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
                 $this->logger->error('RetrySafeEntityManager bailing out having hit ' . get_class($ex) . ': ' . $ex->getMessage());
                 throw $ex;
             }
-        } while ($retries < $this->maxLockRetries);
+        } while ($retries >= $this->maxLockRetries);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
         throw $ex;
     }


386) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] Concat

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        $this->logger->error($this->maxLockRetries . 'RetrySafeEntityManager bailing out after ' . ' tries');
         throw $ex;
     }
     /**


387) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        $this->logger->error($this->maxLockRetries . ' tries');
         throw $ex;
     }
     /**


388) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        $this->logger->error('RetrySafeEntityManager bailing out after ' . ' tries');
         throw $ex;
     }
     /**


389) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] Concat

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        $this->logger->error('RetrySafeEntityManager bailing out after ' . ' tries' . $this->maxLockRetries);
         throw $ex;
     }
     /**


390) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries);
         throw $ex;
     }
     /**


391) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:95    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 throw $ex;
             }
         } while ($retries < $this->maxLockRetries);
-        $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
+        
         throw $ex;
     }
     /**


392) /home/barney/projects/matchbot/src/Application/Persistence/RetrySafeEntityManager.php:97    [M] Throw_

--- Original
+++ New
@@ @@
             }
         } while ($retries < $this->maxLockRetries);
         $this->logger->error('RetrySafeEntityManager bailing out after ' . $this->maxLockRetries . ' tries');
-        throw $ex;
+        $ex;
     }
     /**
      * Attempt a persist the normal way, and if the underlying EM is closed, make a new one


393) /home/barney/projects/matchbot/src/Client/Campaign.php:16    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @return array Single Campaign response object as associative array
      * @throws NotFoundException if Campaign with given ID not found
      */
-    public function getById(string $id) : array
+    protected function getById(string $id) : array
     {
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");


394) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] DecrementInteger

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 403) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


395) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] IncrementInteger

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 405) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


396) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] Identical

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() !== 404) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


397) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] LogicalAnd

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if ($exception->getResponse() || $exception->getResponse()->getStatusCode() === 404) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


398) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if (!$exception->getResponse() && !($exception->getResponse()->getStatusCode() === 404)) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


399) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if (!($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404)) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


400) /home/barney/projects/matchbot/src/Client/Campaign.php:21    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
         try {
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
-            if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
+            if (!$exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }


401) /home/barney/projects/matchbot/src/Client/Campaign.php:22    [M] Throw_

--- Original
+++ New
@@ @@
             $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$id}");
         } catch (RequestException $exception) {
             if ($exception->getResponse() && $exception->getResponse()->getStatusCode() === 404) {
-                throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
+                new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }
             // Otherwise, an unknown error occurred -> re-throw


402) /home/barney/projects/matchbot/src/Client/Campaign.php:26    [M] Throw_

--- Original
+++ New
@@ @@
                 throw new NotFoundException(sprintf('Campaign ID %s not found in SF', $id));
                 // may be safely caught in sandboxes
             }
-            // Otherwise, an unknown error occurred -> re-throw
-            throw $exception;
+            $exception;
         }
         $campaignResponse = json_decode((string) $response->getBody(), true);
         if (!$campaignResponse['ready']) {


403) /home/barney/projects/matchbot/src/Client/Campaign.php:29    [M] CastString

--- Original
+++ New
@@ @@
             // Otherwise, an unknown error occurred -> re-throw
             throw $exception;
         }
-        $campaignResponse = json_decode((string) $response->getBody(), true);
+        $campaignResponse = json_decode($response->getBody(), true);
         if (!$campaignResponse['ready']) {
             throw new NotFoundException(sprintf('Campaign ID %s not ready', $id));
         }


404) /home/barney/projects/matchbot/src/Client/Campaign.php:31    [M] LogicalNot

--- Original
+++ New
@@ @@
             throw $exception;
         }
         $campaignResponse = json_decode((string) $response->getBody(), true);
-        if (!$campaignResponse['ready']) {
+        if ($campaignResponse['ready']) {
             throw new NotFoundException(sprintf('Campaign ID %s not ready', $id));
         }
         return $campaignResponse;
     }
 }


405) /home/barney/projects/matchbot/src/Client/Campaign.php:32    [M] Throw_

--- Original
+++ New
@@ @@
         }
         $campaignResponse = json_decode((string) $response->getBody(), true);
         if (!$campaignResponse['ready']) {
-            throw new NotFoundException(sprintf('Campaign ID %s not ready', $id));
+            new NotFoundException(sprintf('Campaign ID %s not ready', $id));
         }
         return $campaignResponse;
     }
 }


406) /home/barney/projects/matchbot/src/Client/Campaign.php:35    [M] ArrayOneItem

--- Original
+++ New
@@ @@
         if (!$campaignResponse['ready']) {
             throw new NotFoundException(sprintf('Campaign ID %s not ready', $id));
         }
-        return $campaignResponse;
+        return count($campaignResponse) > 1 ? array_slice($campaignResponse, 0, 1, true) : $campaignResponse;
     }
 }


407) /home/barney/projects/matchbot/src/Client/Common.php:22    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
     {
         $this->clientSettings = $settings['apiClient'];
     }
-    protected function getSetting(string $service, string $property) : string
+    private function getSetting(string $service, string $property) : string
     {
         return $this->clientSettings[$service][$property];
     }


408) /home/barney/projects/matchbot/src/Client/Common.php:27    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
     {
         return $this->clientSettings[$service][$property];
     }
-    protected function getHttpClient() : Client
+    private function getHttpClient() : Client
     {
         if (!isset($this->httpClient)) {
             $this->httpClient = new Client(['timeout' => $this->clientSettings['global']['timeout']]);


409) /home/barney/projects/matchbot/src/Client/Common.php:29    [M] LogicalNot

--- Original
+++ New
@@ @@
     }
     protected function getHttpClient() : Client
     {
-        if (!isset($this->httpClient)) {
+        if (isset($this->httpClient)) {
             $this->httpClient = new Client(['timeout' => $this->clientSettings['global']['timeout']]);
         }
         return $this->httpClient;
     }
 }


410) /home/barney/projects/matchbot/src/Client/Common.php:30    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     protected function getHttpClient() : Client
     {
         if (!isset($this->httpClient)) {
-            $this->httpClient = new Client(['timeout' => $this->clientSettings['global']['timeout']]);
+            $this->httpClient = new Client([]);
         }
         return $this->httpClient;
     }
 }


411) /home/barney/projects/matchbot/src/Client/Donation.php:18    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @return string Salesforce donation ID
      * @throws BadRequestException
      */
-    public function create(DonationModel $donation) : string
+    protected function create(DonationModel $donation) : string
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping create of donation {$donation->getUuid()}");


412) /home/barney/projects/matchbot/src/Client/Donation.php:20    [M] IfNegation

--- Original
+++ New
@@ @@
      */
     public function create(DonationModel $donation) : string
     {
-        if (getenv('DISABLE_CLIENT_PUSH')) {
+        if (!getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping create of donation {$donation->getUuid()}");
             throw new BadRequestException('Client push is off');
         }


413) /home/barney/projects/matchbot/src/Client/Donation.php:21    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function create(DonationModel $donation) : string
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
-            $this->logger->info("Client push off: Skipping create of donation {$donation->getUuid()}");
+            
             throw new BadRequestException('Client push is off');
         }
         try {


414) /home/barney/projects/matchbot/src/Client/Donation.php:22    [M] Throw_

--- Original
+++ New
@@ @@
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping create of donation {$donation->getUuid()}");
-            throw new BadRequestException('Client push is off');
+            new BadRequestException('Client push is off');
         }
         try {
             $response = $this->getHttpClient()->post($this->getSetting('donation', 'baseUri'), ['json' => $donation->toApiModel()]);


415) /home/barney/projects/matchbot/src/Client/Donation.php:28    [M] ArrayItem

--- Original
+++ New
@@ @@
             throw new BadRequestException('Client push is off');
         }
         try {
-            $response = $this->getHttpClient()->post($this->getSetting('donation', 'baseUri'), ['json' => $donation->toApiModel()]);
+            $response = $this->getHttpClient()->post($this->getSetting('donation', 'baseUri'), ['json' > $donation->toApiModel()]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on POST may be trying to sync up donations for non-existent campaigns and
             // so have probably just been refreshed. In this case we want to update the local state of play


416) /home/barney/projects/matchbot/src/Client/Donation.php:28    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             throw new BadRequestException('Client push is off');
         }
         try {
-            $response = $this->getHttpClient()->post($this->getSetting('donation', 'baseUri'), ['json' => $donation->toApiModel()]);
+            $response = $this->getHttpClient()->post($this->getSetting('donation', 'baseUri'), []);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on POST may be trying to sync up donations for non-existent campaigns and
             // so have probably just been refreshed. In this case we want to update the local state of play


417) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] DecrementInteger

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 403 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


418) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] IncrementInteger

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 405 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


419) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] Identical

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() !== 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


420) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] NotIdentical

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 404 && getenv('APP_ENV') === 'production') {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


421) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] LogicalAnd

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 404 || getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


422) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if (!($ex->getCode() === 404) && !(getenv('APP_ENV') !== 'production')) {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


423) /home/barney/projects/matchbot/src/Client/Donation.php:37    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
             // handling in the caller without an error level log. In production, 404s should not happen and
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if (!($ex->getCode() === 404 && getenv('APP_ENV') !== 'production')) {
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));


424) /home/barney/projects/matchbot/src/Client/Donation.php:38    [M] Throw_

--- Original
+++ New
@@ @@
             // so we continue to throw a `BadRequestException` which means `DonationRepostitory::doCreate()`
             // will return false and the caller will log an error.
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
-                throw new NotFoundException();
+                new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
             throw new BadRequestException('Donation not created');


425) /home/barney/projects/matchbot/src/Client/Donation.php:41    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+            
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).


426) /home/barney/projects/matchbot/src/Client/Donation.php:45    [M] Ternary

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+            $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? 'N/A' : $ex->getResponse()->getBody()));
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).


427) /home/barney/projects/matchbot/src/Client/Donation.php:48    [M] Throw_

--- Original
+++ New
@@ @@
                 throw new NotFoundException();
             }
             $this->logger->error(sprintf('Donation create exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
-            throw new BadRequestException('Donation not created');
+            new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {


428) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] GreaterThan

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if ($response->getStatusCode() >= 201 || $response->getStatusCode() < 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


429) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] GreaterThanNegotiation

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if ($response->getStatusCode() <= 201 || $response->getStatusCode() < 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


430) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] LessThan

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if ($response->getStatusCode() > 201 || $response->getStatusCode() <= 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


431) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if ($response->getStatusCode() > 201 || $response->getStatusCode() >= 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


432) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] LogicalOr

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if ($response->getStatusCode() > 201 && $response->getStatusCode() < 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


433) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] LogicalOrAllSubExprNegation

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if (!($response->getStatusCode() > 201) || !($response->getStatusCode() < 200)) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


434) /home/barney/projects/matchbot/src/Client/Donation.php:52    [M] LogicalOrNegation

--- Original
+++ New
@@ @@
             throw new BadRequestException('Donation not created');
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
-        if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
+        if (!($response->getStatusCode() > 201 || $response->getStatusCode() < 200)) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }


435) /home/barney/projects/matchbot/src/Client/Donation.php:53    [M] Concat

--- Original
+++ New
@@ @@
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
-            $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
+            $this->logger->error($response->getStatusCode() . 'Donation create got non-success code ');
             throw new BadRequestException('Donation not created');
         }
         $donationCreatedResponse = json_decode((string) $response->getBody(), true);


436) /home/barney/projects/matchbot/src/Client/Donation.php:53    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
-            $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
+            $this->logger->error($response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }
         $donationCreatedResponse = json_decode((string) $response->getBody(), true);


437) /home/barney/projects/matchbot/src/Client/Donation.php:53    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
-            $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
+            $this->logger->error('Donation create got non-success code ');
             throw new BadRequestException('Donation not created');
         }
         $donationCreatedResponse = json_decode((string) $response->getBody(), true);


438) /home/barney/projects/matchbot/src/Client/Donation.php:53    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
-            $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
+            
             throw new BadRequestException('Donation not created');
         }
         $donationCreatedResponse = json_decode((string) $response->getBody(), true);


439) /home/barney/projects/matchbot/src/Client/Donation.php:54    [M] Throw_

--- Original
+++ New
@@ @@
         // For now, support created response codes of 200 (behaviour as of 3/5/22) or 201 (as documented).
         if ($response->getStatusCode() > 201 || $response->getStatusCode() < 200) {
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
-            throw new BadRequestException('Donation not created');
+            new BadRequestException('Donation not created');
         }
         $donationCreatedResponse = json_decode((string) $response->getBody(), true);
         return $donationCreatedResponse['donation']['donationId'];


440) /home/barney/projects/matchbot/src/Client/Donation.php:57    [M] CastString

--- Original
+++ New
@@ @@
             $this->logger->error('Donation create got non-success code ' . $response->getStatusCode());
             throw new BadRequestException('Donation not created');
         }
-        $donationCreatedResponse = json_decode((string) $response->getBody(), true);
+        $donationCreatedResponse = json_decode($response->getBody(), true);
         return $donationCreatedResponse['donation']['donationId'];
     }
     /**


441) /home/barney/projects/matchbot/src/Client/Donation.php:72    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param DonationModel $donation
      * @return bool
      */
-    public function put(DonationModel $donation) : bool
+    protected function put(DonationModel $donation) : bool
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping update of donation {$donation->getUuid()}");


442) /home/barney/projects/matchbot/src/Client/Donation.php:74    [M] IfNegation

--- Original
+++ New
@@ @@
      */
     public function put(DonationModel $donation) : bool
     {
-        if (getenv('DISABLE_CLIENT_PUSH')) {
+        if (!getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping update of donation {$donation->getUuid()}");
             return false;
         }


443) /home/barney/projects/matchbot/src/Client/Donation.php:75    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function put(DonationModel $donation) : bool
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
-            $this->logger->info("Client push off: Skipping update of donation {$donation->getUuid()}");
+            
             return false;
         }
         try {


444) /home/barney/projects/matchbot/src/Client/Donation.php:77    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         if (getenv('DISABLE_CLIENT_PUSH')) {
             $this->logger->info("Client push off: Skipping update of donation {$donation->getUuid()}");
-            return false;
+            return true;
         }
         try {
             $requestBody = $donation->toHookModel();


445) /home/barney/projects/matchbot/src/Client/Donation.php:84    [M] Concat

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put("/donation/{$donation->getSalesforceId()}" . $this->getSetting('webhook', 'baseUri'), ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


446) /home/barney/projects/matchbot/src/Client/Donation.php:84    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put("/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


447) /home/barney/projects/matchbot/src/Client/Donation.php:84    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri'), ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


448) /home/barney/projects/matchbot/src/Client/Donation.php:85    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


449) /home/barney/projects/matchbot/src/Client/Donation.php:87    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => []]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


450) /home/barney/projects/matchbot/src/Client/Donation.php:88    [M] ArrayItem

--- Original
+++ New
@@ @@
         }
         try {
             $requestBody = $donation->toHookModel();
-            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->put($this->getSetting('webhook', 'baseUri') . "/donation/{$donation->getSalesforceId()}", ['json' => $requestBody, 'headers' => ['X-Webhook-Verify-Hash' > $this->hash(json_encode($requestBody))]]);
         } catch (RequestException $ex) {
             // Sandboxes that 404 on PUT have probably just been refreshed. In this case we want to
             // update the local state of play to stop them getting pushed, instead of treating this


451) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] DecrementInteger

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 403 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


452) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] IncrementInteger

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 405 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


453) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] Identical

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() !== 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


454) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] NotIdentical

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 404 && getenv('APP_ENV') === 'production') {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


455) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] LogicalAnd

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if ($ex->getCode() === 404 || getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


456) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if (!($ex->getCode() === 404) && !(getenv('APP_ENV') !== 'production')) {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


457) /home/barney/projects/matchbot/src/Client/Donation.php:98    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
             // as an error. So throw this for appropriate handling in the caller without an error level
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
-            if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
+            if (!($ex->getCode() === 404 && getenv('APP_ENV') !== 'production')) {
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');


458) /home/barney/projects/matchbot/src/Client/Donation.php:99    [M] Throw_

--- Original
+++ New
@@ @@
             // log. In production, 404s should not happen and so we continue to `return false` which
             // will lead the caller to log an error.
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
-                throw new NotFoundException();
+                new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {


459) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] DecrementInteger

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() === 399 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


460) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] IncrementInteger

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() === 401 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


461) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] Identical

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() !== 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


462) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] LogicalAnd

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = ($ex->getCode() === 400 || getenv('APP_ENV') !== 'production') && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


463) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] LogicalAnd

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' || str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


464) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = !($ex->getCode() === 400) && !(getenv('APP_ENV') !== 'production') && !str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


465) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = !($ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"'));
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


466) /home/barney/projects/matchbot/src/Client/Donation.php:103    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && !str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


467) /home/barney/projects/matchbot/src/Client/Donation.php:104    [M] NotIdentical

--- Original
+++ New
@@ @@
             if ($ex->getCode() === 404 && getenv('APP_ENV') !== 'production') {
                 throw new NotFoundException();
             }
-            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
+            $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') === 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly


468) /home/barney/projects/matchbot/src/Client/Donation.php:107    [M] IfNegation

--- Original
+++ New
@@ @@
                 throw new NotFoundException();
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
-            if ($sandboxMissingLinkedResource) {
+            if (!$sandboxMissingLinkedResource) {
                 /**
                  * The exception we throw here still takes the donation out of the push queue permenantly
                  * – {@see DonationRepository::doUpdate()} – but as this case is not as well


469) /home/barney/projects/matchbot/src/Client/Donation.php:115    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             $sandboxMissingLinkedResource = $ex->getCode() === 400 && getenv('APP_ENV') !== 'production' && str_contains($ex->getMessage(), '"entity is deleted"');
             if ($sandboxMissingLinkedResource) {
-                /**
-                 * The exception we throw here still takes the donation out of the push queue permenantly
-                 * – {@see DonationRepository::doUpdate()} – but as this case is not as well
-                 * understood, we also log a one time high severity error so we are better able to
-                 * monitor these cases and try to understand what is happening in sandboxes that hit
-                 * this edge case.
-                 */
-                $this->logger->error(sprintf('Donation update skipped due to missing sandbox resource. Exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+                
                 throw new NotFoundException();
             }
             // All other errors should be logged so we get a notification and the app left to retry the


470) /home/barney/projects/matchbot/src/Client/Donation.php:119    [M] Ternary

--- Original
+++ New
@@ @@
                  * monitor these cases and try to understand what is happening in sandboxes that hit
                  * this edge case.
                  */
-                $this->logger->error(sprintf('Donation update skipped due to missing sandbox resource. Exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+                $this->logger->error(sprintf('Donation update skipped due to missing sandbox resource. Exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? 'N/A' : $ex->getResponse()->getBody()));
                 throw new NotFoundException();
             }
             // All other errors should be logged so we get a notification and the app left to retry the


471) /home/barney/projects/matchbot/src/Client/Donation.php:122    [M] Throw_

--- Original
+++ New
@@ @@
                  * this edge case.
                  */
                 $this->logger->error(sprintf('Donation update skipped due to missing sandbox resource. Exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
-                throw new NotFoundException();
+                new NotFoundException();
             }
             // All other errors should be logged so we get a notification and the app left to retry the
             // push at a later date.


472) /home/barney/projects/matchbot/src/Client/Donation.php:127    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->logger->error(sprintf('Donation update skipped due to missing sandbox resource. Exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
                 throw new NotFoundException();
             }
-            // All other errors should be logged so we get a notification and the app left to retry the
-            // push at a later date.
-            $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+            
             return false;
         }
         return $response->getStatusCode() === 200;


473) /home/barney/projects/matchbot/src/Client/Donation.php:131    [M] Ternary

--- Original
+++ New
@@ @@
             }
             // All other errors should be logged so we get a notification and the app left to retry the
             // push at a later date.
-            $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
+            $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? 'N/A' : $ex->getResponse()->getBody()));
             return false;
         }
         return $response->getStatusCode() === 200;


474) /home/barney/projects/matchbot/src/Client/Donation.php:134    [M] FalseValue

--- Original
+++ New
@@ @@
             // All other errors should be logged so we get a notification and the app left to retry the
             // push at a later date.
             $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
-            return false;
+            return true;
         }
         return $response->getStatusCode() === 200;
     }


475) /home/barney/projects/matchbot/src/Client/Donation.php:137    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
             return false;
         }
-        return $response->getStatusCode() === 200;
+        return $response->getStatusCode() === 199;
     }
     private function hash(string $body) : string
     {


476) /home/barney/projects/matchbot/src/Client/Donation.php:137    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
             return false;
         }
-        return $response->getStatusCode() === 200;
+        return $response->getStatusCode() === 201;
     }
     private function hash(string $body) : string
     {


477) /home/barney/projects/matchbot/src/Client/Donation.php:137    [M] Identical

--- Original
+++ New
@@ @@
             $this->logger->warning(sprintf('Donation update exception %s: %s. Body: %s', get_class($ex), $ex->getMessage(), $ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A'));
             return false;
         }
-        return $response->getStatusCode() === 200;
+        return $response->getStatusCode() !== 200;
     }
     private function hash(string $body) : string
     {


478) /home/barney/projects/matchbot/src/Client/Donation.php:142    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function hash(string $body) : string
     {
-        return hash_hmac('sha256', trim($body), getenv('WEBHOOK_DONATION_SECRET'));
+        return hash_hmac('sha256', $body, getenv('WEBHOOK_DONATION_SECRET'));
     }
 }


479) /home/barney/projects/matchbot/src/Client/Fund.php:14    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @return array Single Fund, as associative array
      * @throws NotFoundException if Fund with given ID not found
      */
-    public function getById(string $fundId) : array
+    protected function getById(string $fundId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('fund', 'baseUri')}/{$fundId}");
         if ($response->getStatusCode() !== 200) {


480) /home/barney/projects/matchbot/src/Client/Fund.php:18    [M] DecrementInteger

--- Original
+++ New
@@ @@
     public function getById(string $fundId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('fund', 'baseUri')}/{$fundId}");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() !== 199) {
             throw new NotFoundException('Fund not found');
         }
         return json_decode((string) $response->getBody(), true);


481) /home/barney/projects/matchbot/src/Client/Fund.php:18    [M] IncrementInteger

--- Original
+++ New
@@ @@
     public function getById(string $fundId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('fund', 'baseUri')}/{$fundId}");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() !== 201) {
             throw new NotFoundException('Fund not found');
         }
         return json_decode((string) $response->getBody(), true);


482) /home/barney/projects/matchbot/src/Client/Fund.php:18    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function getById(string $fundId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('fund', 'baseUri')}/{$fundId}");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() === 200) {
             throw new NotFoundException('Fund not found');
         }
         return json_decode((string) $response->getBody(), true);


483) /home/barney/projects/matchbot/src/Client/Fund.php:19    [M] Throw_

--- Original
+++ New
@@ @@
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('fund', 'baseUri')}/{$fundId}");
         if ($response->getStatusCode() !== 200) {
-            throw new NotFoundException('Fund not found');
+            new NotFoundException('Fund not found');
         }
         return json_decode((string) $response->getBody(), true);
     }


484) /home/barney/projects/matchbot/src/Client/Fund.php:22    [M] CastString

--- Original
+++ New
@@ @@
         if ($response->getStatusCode() !== 200) {
             throw new NotFoundException('Fund not found');
         }
-        return json_decode((string) $response->getBody(), true);
+        return json_decode($response->getBody(), true);
     }
     /**
      * @param string $campaignId


485) /home/barney/projects/matchbot/src/Client/Fund.php:30    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @return array Array of Funds, each as associative array
      * @throws NotFoundException if Campaign with given ID not found
      */
-    public function getForCampaign(string $campaignId) : array
+    protected function getForCampaign(string $campaignId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$campaignId}/funds");
         if ($response->getStatusCode() !== 200) {


486) /home/barney/projects/matchbot/src/Client/Fund.php:34    [M] DecrementInteger

--- Original
+++ New
@@ @@
     public function getForCampaign(string $campaignId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$campaignId}/funds");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() !== 199) {
             throw new NotFoundException('Campaign not found');
         }
         return json_decode((string) $response->getBody(), true);
     }
 }


487) /home/barney/projects/matchbot/src/Client/Fund.php:34    [M] IncrementInteger

--- Original
+++ New
@@ @@
     public function getForCampaign(string $campaignId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$campaignId}/funds");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() !== 201) {
             throw new NotFoundException('Campaign not found');
         }
         return json_decode((string) $response->getBody(), true);
     }
 }


488) /home/barney/projects/matchbot/src/Client/Fund.php:34    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function getForCampaign(string $campaignId) : array
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$campaignId}/funds");
-        if ($response->getStatusCode() !== 200) {
+        if ($response->getStatusCode() === 200) {
             throw new NotFoundException('Campaign not found');
         }
         return json_decode((string) $response->getBody(), true);
     }
 }


489) /home/barney/projects/matchbot/src/Client/Fund.php:35    [M] Throw_

--- Original
+++ New
@@ @@
     {
         $response = $this->getHttpClient()->get("{$this->getSetting('campaign', 'baseUri')}/{$campaignId}/funds");
         if ($response->getStatusCode() !== 200) {
-            throw new NotFoundException('Campaign not found');
+            new NotFoundException('Campaign not found');
         }
         return json_decode((string) $response->getBody(), true);
     }
 }


490) /home/barney/projects/matchbot/src/Client/Fund.php:38    [M] CastString

--- Original
+++ New
@@ @@
         if ($response->getStatusCode() !== 200) {
             throw new NotFoundException('Campaign not found');
         }
-        return json_decode((string) $response->getBody(), true);
+        return json_decode($response->getBody(), true);
     }
 }


491) /home/barney/projects/matchbot/src/Client/Mailer.php:17    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @psalm-param array{templateKey: string, recipientEmailAddress: string, params: array, ...} $requestBody
      */
-    public function sendEmail(array $requestBody) : void
+    protected function sendEmail(array $requestBody) : void
     {
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');


492) /home/barney/projects/matchbot/src/Client/Mailer.php:19    [M] CatchBlockRemoval

--- Original
+++ New
@@ @@
                 $this->logger->warning(sprintf('%s email callout didn\'t return 200. It returned code: %s. Request body: %s. Response body: %s.', $requestBody['templateKey'], $response->getStatusCode(), json_encode($requestBody), $response->getBody()->getContents()));
                 return;
             }
-        } catch (RequestException $ex) {
-            $response = $ex->getResponse();
-            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? $response->getBody()->getContents() : 'N/A'));
-            return;
         } catch (GuzzleException $ex) {
             $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), 'N/A'));
             return;


493) /home/barney/projects/matchbot/src/Client/Mailer.php:19    [M] CatchBlockRemoval

--- Original
+++ New
@@ @@
             $response = $ex->getResponse();
             $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? $response->getBody()->getContents() : 'N/A'));
             return;
-        } catch (GuzzleException $ex) {
-            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), 'N/A'));
-            return;
         }
     }
     private function hash(string $body) : string


494) /home/barney/projects/matchbot/src/Client/Mailer.php:21    [M] Concat

--- Original
+++ New
@@ @@
     {
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
-            $uri = $baseUri . '/v1/send';
+            $uri = '/v1/send' . $baseUri;
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
             if ($response->getStatusCode() === 200) {
                 return;


495) /home/barney/projects/matchbot/src/Client/Mailer.php:21    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     {
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
-            $uri = $baseUri . '/v1/send';
+            $uri = '/v1/send';
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
             if ($response->getStatusCode() === 200) {
                 return;


496) /home/barney/projects/matchbot/src/Client/Mailer.php:21    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     {
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
-            $uri = $baseUri . '/v1/send';
+            $uri = $baseUri;
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
             if ($response->getStatusCode() === 200) {
                 return;


497) /home/barney/projects/matchbot/src/Client/Mailer.php:24    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
-            $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->post($uri, ['headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
             if ($response->getStatusCode() === 200) {
                 return;
             } else {


498) /home/barney/projects/matchbot/src/Client/Mailer.php:26    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
-            $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => []]);
             if ($response->getStatusCode() === 200) {
                 return;
             } else {


499) /home/barney/projects/matchbot/src/Client/Mailer.php:27    [M] ArrayItem

--- Original
+++ New
@@ @@
         try {
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
-            $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
+            $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' > $this->hash(json_encode($requestBody))]]);
             if ($response->getStatusCode() === 200) {
                 return;
             } else {


500) /home/barney/projects/matchbot/src/Client/Mailer.php:32    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
-            if ($response->getStatusCode() === 200) {
+            if ($response->getStatusCode() === 199) {
                 return;
             } else {
                 $this->logger->warning(sprintf('%s email callout didn\'t return 200. It returned code: %s. Request body: %s. Response body: %s.', $requestBody['templateKey'], $response->getStatusCode(), json_encode($requestBody), $response->getBody()->getContents()));


501) /home/barney/projects/matchbot/src/Client/Mailer.php:32    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
-            if ($response->getStatusCode() === 200) {
+            if ($response->getStatusCode() === 201) {
                 return;
             } else {
                 $this->logger->warning(sprintf('%s email callout didn\'t return 200. It returned code: %s. Request body: %s. Response body: %s.', $requestBody['templateKey'], $response->getStatusCode(), json_encode($requestBody), $response->getBody()->getContents()));


502) /home/barney/projects/matchbot/src/Client/Mailer.php:32    [M] Identical

--- Original
+++ New
@@ @@
             $baseUri = $this->getSetting('mailer', 'baseUri');
             $uri = $baseUri . '/v1/send';
             $response = $this->getHttpClient()->post($uri, ['json' => $requestBody, 'headers' => ['x-send-verify-hash' => $this->hash(json_encode($requestBody))]]);
-            if ($response->getStatusCode() === 200) {
+            if ($response->getStatusCode() !== 200) {
                 return;
             } else {
                 $this->logger->warning(sprintf('%s email callout didn\'t return 200. It returned code: %s. Request body: %s. Response body: %s.', $requestBody['templateKey'], $response->getStatusCode(), json_encode($requestBody), $response->getBody()->getContents()));


503) /home/barney/projects/matchbot/src/Client/Mailer.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             if ($response->getStatusCode() === 200) {
                 return;
             } else {
-                $this->logger->warning(sprintf('%s email callout didn\'t return 200. It returned code: %s. Request body: %s. Response body: %s.', $requestBody['templateKey'], $response->getStatusCode(), json_encode($requestBody), $response->getBody()->getContents()));
+                
                 return;
             }
         } catch (RequestException $ex) {


504) /home/barney/projects/matchbot/src/Client/Mailer.php:47    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
         } catch (RequestException $ex) {
             $response = $ex->getResponse();
-            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? $response->getBody()->getContents() : 'N/A'));
+            
             return;
         } catch (GuzzleException $ex) {
             $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), 'N/A'));


505) /home/barney/projects/matchbot/src/Client/Mailer.php:53    [M] Ternary

--- Original
+++ New
@@ @@
             }
         } catch (RequestException $ex) {
             $response = $ex->getResponse();
-            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? $response->getBody()->getContents() : 'N/A'));
+            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? 'N/A' : $response->getBody()->getContents()));
             return;
         } catch (GuzzleException $ex) {
             $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), 'N/A'));


506) /home/barney/projects/matchbot/src/Client/Mailer.php:57    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), $response ? $response->getBody()->getContents() : 'N/A'));
             return;
         } catch (GuzzleException $ex) {
-            $this->logger->error(sprintf('%s email exception %s with error code %s: %s. Body: %s', $requestBody['templateKey'], get_class($ex), $ex->getCode(), $ex->getMessage(), 'N/A'));
+            
             return;
         }
     }


507) /home/barney/projects/matchbot/src/Client/Mailer.php:71    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function hash(string $body) : string
     {
-        return hash_hmac('sha256', trim($body), $this->getSetting('mailer', 'sendSecret'));
+        return hash_hmac('sha256', $body, $this->getSetting('mailer', 'sendSecret'));
     }
 }


508) /home/barney/projects/matchbot/src/Domain/Campaign.php:92    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @ORM\PrePersist()
      * @psalm-suppress PossiblyUnusedMethod
      */
-    public function prePersistCheck(PrePersistEventArgs $_args) : void
+    protected function prePersistCheck(PrePersistEventArgs $_args) : void
     {
         try {
             // PHP doesn't have a much nicer way to check if a property is initialised because the maintainers think


509) /home/barney/projects/matchbot/src/Domain/Campaign.php:104    [M] Throw_

--- Original
+++ New
@@ @@
             // envrionments
             $_charity = $this->charity;
         } catch (\Error $e) {
-            throw new \Exception("Error on attempt to persist campaign #{$this->id}, sfID {$this->salesforceId}: \n{$e}");
+            new \Exception("Error on attempt to persist campaign #{$this->id}, sfID {$this->salesforceId}: \n{$e}");
         }
     }
     /**


510) /home/barney/projects/matchbot/src/Domain/Campaign.php:200    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return DateTime
      */
-    public function getEndDate() : DateTime
+    protected function getEndDate() : DateTime
     {
         return $this->endDate;
     }
 }


511) /home/barney/projects/matchbot/src/Domain/CampaignFunding.php:81    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return "CampaignFunding, ID #{$this->id}, created {$this->createdAt->format('c')} of fund SF ID {$this->fund->getSalesforceId()}";
     }
-    public function isShared() : bool
+    protected function isShared() : bool
     {
         return count($this->campaigns) > 1;
     }


512) /home/barney/projects/matchbot/src/Domain/CampaignFunding.php:83    [M] GreaterThan

--- Original
+++ New
@@ @@
     }
     public function isShared() : bool
     {
-        return count($this->campaigns) > 1;
+        return count($this->campaigns) >= 1;
     }
     /**
      * @return string


513) /home/barney/projects/matchbot/src/Domain/CampaignFunding.php:83    [M] GreaterThanNegotiation

--- Original
+++ New
@@ @@
     }
     public function isShared() : bool
     {
-        return count($this->campaigns) > 1;
+        return count($this->campaigns) <= 1;
     }
     /**
      * @return string


514) /home/barney/projects/matchbot/src/Domain/CampaignFunding.php:151    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return Fund
      */
-    public function getFund() : Fund
+    protected function getFund() : Fund
     {
         return $this->fund;
     }


515) /home/barney/projects/matchbot/src/Domain/CampaignFunding.php:156    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->fund;
     }
-    public function getCurrencyCode() : string
+    protected function getCurrencyCode() : string
     {
         return $this->currencyCode;
     }


516) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:32    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @return CampaignFunding[]    Sorted in the order funds should be allocated
      * @throws \Doctrine\ORM\TransactionRequiredException if called this outside a surrounding transaction
      */
-    public function getAvailableFundings(Campaign $campaign) : array
+    protected function getAvailableFundings(Campaign $campaign) : array
     {
         $query = $this->getEntityManager()->createQuery('
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf


517) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             AND cf.amountAvailable > 0
             ORDER BY cf.allocationOrder, cf.id
         ');
-        $query->setParameter('campaign', $campaign->getId());
+        
         return $query->getResult();
     }
     public function getFunding(Fund $fund) : ?CampaignFunding


518) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:45    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $query->setParameter('campaign', $campaign->getId());
         return $query->getResult();
     }
-    public function getFunding(Fund $fund) : ?CampaignFunding
+    protected function getFunding(Fund $fund) : ?CampaignFunding
     {
         $query = $this->getEntityManager()->createQuery('
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf


519) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:50    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $query = $this->getEntityManager()->createQuery('
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf
             WHERE cf.fund = :fund
-        ')->setMaxResults(1);
+        ')->setMaxResults(0);
         $query->setParameter('fund', $fund->getId());
         $query->execute();
         return $query->getOneOrNullResult();


520) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:50    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $query = $this->getEntityManager()->createQuery('
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf
             WHERE cf.fund = :fund
-        ')->setMaxResults(1);
+        ')->setMaxResults(2);
         $query->setParameter('fund', $fund->getId());
         $query->execute();
         return $query->getOneOrNullResult();


521) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:51    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf
             WHERE cf.fund = :fund
         ')->setMaxResults(1);
-        $query->setParameter('fund', $fund->getId());
+        
         $query->execute();
         return $query->getOneOrNullResult();
     }


522) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             WHERE cf.fund = :fund
         ')->setMaxResults(1);
         $query->setParameter('fund', $fund->getId());
-        $query->execute();
+        
         return $query->getOneOrNullResult();
     }
     public function getFundingForCampaign(Campaign $campaign, Fund $fund) : ?CampaignFunding


523) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:57    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $query->execute();
         return $query->getOneOrNullResult();
     }
-    public function getFundingForCampaign(Campaign $campaign, Fund $fund) : ?CampaignFunding
+    protected function getFundingForCampaign(Campaign $campaign, Fund $fund) : ?CampaignFunding
     {
         $query = $this->getEntityManager()->createQuery('
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf


524) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:63    [M] DecrementInteger

--- Original
+++ New
@@ @@
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf
             WHERE :campaign MEMBER OF cf.campaigns
             AND cf.fund = :fund
-        ')->setMaxResults(1);
+        ')->setMaxResults(0);
         $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
         $query->setParameter('fund', $fund->getId());
         $query->execute();


525) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:63    [M] IncrementInteger

--- Original
+++ New
@@ @@
             SELECT cf FROM MatchBot\\Domain\\CampaignFunding cf
             WHERE :campaign MEMBER OF cf.campaigns
             AND cf.fund = :fund
-        ')->setMaxResults(1);
+        ')->setMaxResults(2);
         $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
         $query->setParameter('fund', $fund->getId());
         $query->execute();


526) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:64    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             WHERE :campaign MEMBER OF cf.campaigns
             AND cf.fund = :fund
         ')->setMaxResults(1);
-        $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
+        $query->setParameter('campaign', new ArrayCollection([]));
         $query->setParameter('fund', $fund->getId());
         $query->execute();
         return $query->getOneOrNullResult();
     }
 }


527) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             WHERE :campaign MEMBER OF cf.campaigns
             AND cf.fund = :fund
         ')->setMaxResults(1);
-        $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
+        
         $query->setParameter('fund', $fund->getId());
         $query->execute();
         return $query->getOneOrNullResult();
     }
 }


528) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:65    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             AND cf.fund = :fund
         ')->setMaxResults(1);
         $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
-        $query->setParameter('fund', $fund->getId());
+        
         $query->execute();
         return $query->getOneOrNullResult();
     }
 }


529) /home/barney/projects/matchbot/src/Domain/CampaignFundingRepository.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         ')->setMaxResults(1);
         $query->setParameter('campaign', new ArrayCollection([$campaign->getId()]));
         $query->setParameter('fund', $fund->getId());
-        $query->execute();
+        
         return $query->getOneOrNullResult();
     }
 }


530) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:28    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return Campaign[]
      */
-    public function findRecentAndLive() : array
+    protected function findRecentAndLive() : array
     {
         $oneWeekAgo = (new DateTime('now'))->sub(new \DateInterval('P7D'));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('c')->from(Campaign::class, 'c')->where('c.endDate >= :oneWeekAgo')->orderBy('c.createdAt', 'ASC')->setParameter('oneWeekAgo', $oneWeekAgo);


531) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:52    [M] NotIdentical

--- Original
+++ New
@@ @@
     {
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
-        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
+        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() === $campaignData['currencyCode']) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
             throw new DomainCurrencyMustNotChangeException();
         }


532) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:52    [M] LogicalAnd

--- Original
+++ New
@@ @@
     {
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
-        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
+        if ($campaign->hasBeenPersisted() || $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
             throw new DomainCurrencyMustNotChangeException();
         }


533) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:52    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
     {
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
-        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
+        if (!$campaign->hasBeenPersisted() && !($campaign->getCurrencyCode() !== $campaignData['currencyCode'])) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
             throw new DomainCurrencyMustNotChangeException();
         }


534) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:52    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
     {
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
-        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
+        if (!($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode'])) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
             throw new DomainCurrencyMustNotChangeException();
         }


535) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:52    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
     {
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
-        if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
+        if (!$campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
             throw new DomainCurrencyMustNotChangeException();
         }


536) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:53    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $client = $this->getClient();
         $campaignData = $client->getById($campaign->getSalesforceId());
         if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
-            $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
+            
             throw new DomainCurrencyMustNotChangeException();
         }
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);


537) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:59    [M] Throw_

--- Original
+++ New
@@ @@
         $campaignData = $client->getById($campaign->getSalesforceId());
         if ($campaign->hasBeenPersisted() && $campaign->getCurrencyCode() !== $campaignData['currencyCode']) {
             $this->logWarning(sprintf('Refusing to update campaign currency to %s for SF ID %s', $campaignData['currencyCode'], $campaignData['id']));
-            throw new DomainCurrencyMustNotChangeException();
+            new DomainCurrencyMustNotChangeException();
         }
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);
         $campaign->setCharity($charity);


538) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:72    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             throw new DomainCurrencyMustNotChangeException();
         }
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);
-        $campaign->setCharity($charity);
+        
         $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
         $campaign->setFeePercentage($campaignData['feePercentage']);


539) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:73    [M] Coalesce

--- Original
+++ New
@@ @@
         }
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);
         $campaign->setCharity($charity);
-        $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
+        $campaign->setCurrencyCode('GBP' ?? $campaignData['currencyCode']);
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
         $campaign->setFeePercentage($campaignData['feePercentage']);
         $campaign->setIsMatched($campaignData['isMatched']);


540) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:73    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);
         $campaign->setCharity($charity);
-        $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
+        
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
         $campaign->setFeePercentage($campaignData['feePercentage']);
         $campaign->setIsMatched($campaignData['isMatched']);


541) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:74    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $charity = $this->pullCharity($campaignData['charity']['id'], $campaignData['charity']['name'], $campaignData['charity']['stripeAccountId'], $campaignData['charity']['giftAidOnboardingStatus'], $campaignData['charity']['hmrcReferenceNumber'], $campaignData['charity']['regulatorRegion'], $campaignData['charity']['regulatorNumber']);
         $campaign->setCharity($charity);
         $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
-        $campaign->setEndDate(new DateTime($campaignData['endDate']));
+        
         $campaign->setFeePercentage($campaignData['feePercentage']);
         $campaign->setIsMatched($campaignData['isMatched']);
         $campaign->setName($campaignData['title']);


542) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:75    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $campaign->setCharity($charity);
         $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
-        $campaign->setFeePercentage($campaignData['feePercentage']);
+        
         $campaign->setIsMatched($campaignData['isMatched']);
         $campaign->setName($campaignData['title']);
         $campaign->setStartDate(new DateTime($campaignData['startDate']));


543) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:76    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $campaign->setCurrencyCode($campaignData['currencyCode'] ?? 'GBP');
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
         $campaign->setFeePercentage($campaignData['feePercentage']);
-        $campaign->setIsMatched($campaignData['isMatched']);
+        
         $campaign->setName($campaignData['title']);
         $campaign->setStartDate(new DateTime($campaignData['startDate']));
         return $campaign;


544) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $campaign->setEndDate(new DateTime($campaignData['endDate']));
         $campaign->setFeePercentage($campaignData['feePercentage']);
         $campaign->setIsMatched($campaignData['isMatched']);
-        $campaign->setName($campaignData['title']);
+        
         $campaign->setStartDate(new DateTime($campaignData['startDate']));
         return $campaign;
     }


545) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:78    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $campaign->setFeePercentage($campaignData['feePercentage']);
         $campaign->setIsMatched($campaignData['isMatched']);
         $campaign->setName($campaignData['title']);
-        $campaign->setStartDate(new DateTime($campaignData['startDate']));
+        
         return $campaign;
     }
     /**


546) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:99    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
      */
     private function pullCharity(string $salesforceCharityId, string $charityName, ?string $stripeAccountId, ?string $giftAidOnboardingStatus, ?string $hmrcReferenceNumber, string $regulator, ?string $regulatorNumber) : Charity
     {
-        $charity = $this->getEntityManager()->getRepository(Charity::class)->findOneBy(['salesforceId' => $salesforceCharityId]);
+        $charity = $this->getEntityManager()->getRepository(Charity::class)->findOneBy([]);
         if (!$charity) {
             $charity = new Charity(salesforceId: $salesforceCharityId, charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
         } else {


547) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:100    [M] LogicalNot

--- Original
+++ New
@@ @@
     private function pullCharity(string $salesforceCharityId, string $charityName, ?string $stripeAccountId, ?string $giftAidOnboardingStatus, ?string $hmrcReferenceNumber, string $regulator, ?string $regulatorNumber) : Charity
     {
         $charity = $this->getEntityManager()->getRepository(Charity::class)->findOneBy(['salesforceId' => $salesforceCharityId]);
-        if (!$charity) {
+        if ($charity) {
             $charity = new Charity(salesforceId: $salesforceCharityId, charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
         } else {
             $charity->updateFromSfPull(charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));


548) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:112    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if (!$charity) {
             $charity = new Charity(salesforceId: $salesforceCharityId, charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
         } else {
-            $charity->updateFromSfPull(charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
+            
         }
         $this->getEntityManager()->persist($charity);
         return $charity;


549) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:123    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         } else {
             $charity->updateFromSfPull(charityName: $charityName, stripeAccountId: $stripeAccountId, hmrcReferenceNumber: $hmrcReferenceNumber, giftAidOnboardingStatus: $giftAidOnboardingStatus, regulator: $this->getRegulatorHMRCIdentifier($regulator), regulatorNumber: $regulatorNumber, time: new \DateTime('now'));
         }
-        $this->getEntityManager()->persist($charity);
+        
         return $charity;
     }
     protected function getRegulatorHMRCIdentifier(string $regulatorName) : ?string


550) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:128    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
         $this->getEntityManager()->persist($charity);
         return $charity;
     }
-    protected function getRegulatorHMRCIdentifier(string $regulatorName) : ?string
+    private function getRegulatorHMRCIdentifier(string $regulatorName) : ?string
     {
         return match ($regulatorName) {
             'England and Wales' => 'CCEW',


551) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:130    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
     protected function getRegulatorHMRCIdentifier(string $regulatorName) : ?string
     {
         return match ($regulatorName) {
-            'England and Wales' => 'CCEW',
             'Northern Ireland' => 'CCNI',
             'Scotland' => 'OSCR',
             default => null,


552) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:130    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
     {
         return match ($regulatorName) {
             'England and Wales' => 'CCEW',
-            'Northern Ireland' => 'CCNI',
             'Scotland' => 'OSCR',
             default => null,
         };
     }
 }


553) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:130    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
         return match ($regulatorName) {
             'England and Wales' => 'CCEW',
             'Northern Ireland' => 'CCNI',
-            'Scotland' => 'OSCR',
             default => null,
         };
     }
 }


554) /home/barney/projects/matchbot/src/Domain/CampaignRepository.php:130    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
             'England and Wales' => 'CCEW',
             'Northern Ireland' => 'CCNI',
             'Scotland' => 'OSCR',
-            default => null,
         };
     }
 }


555) /home/barney/projects/matchbot/src/Domain/Charity.php:219    [M] Throw_

--- Original
+++ New
@@ @@
     public function updateFromSfPull(string $charityName, ?string $stripeAccountId, ?string $hmrcReferenceNumber, ?string $giftAidOnboardingStatus, ?string $regulator, ?string $regulatorNumber, DateTime $time) : void
     {
         if (!is_null($giftAidOnboardingStatus) && !in_array($giftAidOnboardingStatus, self::POSSIBLE_GIFT_AID_STATUSES, true)) {
-            throw new \UnexpectedValueException();
+            new \UnexpectedValueException();
         }
         $this->setName($charityName);
         $this->setStripeAccountId($stripeAccountId);


556) /home/barney/projects/matchbot/src/Domain/Currency.php:11    [M] PublicVisibility

--- Original
+++ New
@@ @@
 enum Currency
 {
     case GBP;
-    public static function fromIsoCode(mixed $isoCode) : self
+    protected static function fromIsoCode(mixed $isoCode) : self
     {
         Assertion::length($isoCode, 3);
         Assertion::alnum($isoCode);


557) /home/barney/projects/matchbot/src/Domain/Currency.php:13    [M] DecrementInteger

--- Original
+++ New
@@ @@
     case GBP;
     public static function fromIsoCode(mixed $isoCode) : self
     {
-        Assertion::length($isoCode, 3);
+        Assertion::length($isoCode, 2);
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,


558) /home/barney/projects/matchbot/src/Domain/Currency.php:13    [M] IncrementInteger

--- Original
+++ New
@@ @@
     case GBP;
     public static function fromIsoCode(mixed $isoCode) : self
     {
-        Assertion::length($isoCode, 3);
+        Assertion::length($isoCode, 4);
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,


559) /home/barney/projects/matchbot/src/Domain/Currency.php:13    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     case GBP;
     public static function fromIsoCode(mixed $isoCode) : self
     {
-        Assertion::length($isoCode, 3);
+        
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,


560) /home/barney/projects/matchbot/src/Domain/Currency.php:14    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public static function fromIsoCode(mixed $isoCode) : self
     {
         Assertion::length($isoCode, 3);
-        Assertion::alnum($isoCode);
+        
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,
             default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),


561) /home/barney/projects/matchbot/src/Domain/Currency.php:15    [M] UnwrapStrToUpper

--- Original
+++ New
@@ @@
     {
         Assertion::length($isoCode, 3);
         Assertion::alnum($isoCode);
-        return match (strtoupper($isoCode)) {
+        return match ($isoCode) {
             'GBP' => self::GBP,
             default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
         };


562) /home/barney/projects/matchbot/src/Domain/Currency.php:15    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
         Assertion::length($isoCode, 3);
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
-            'GBP' => self::GBP,
             default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
         };
     }


563) /home/barney/projects/matchbot/src/Domain/Currency.php:15    [M] MatchArmRemoval

--- Original
+++ New
@@ @@
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,
-            default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
         };
     }
     /**


564) /home/barney/projects/matchbot/src/Domain/Currency.php:17    [M] Concat

--- Original
+++ New
@@ @@
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,
-            default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
+            default => throw new \UnexpectedValueException($isoCode . "Unexpected Currency ISO Code"),
         };
     }
     /**


565) /home/barney/projects/matchbot/src/Domain/Currency.php:17    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,
-            default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
+            default => throw new \UnexpectedValueException($isoCode),
         };
     }
     /**


566) /home/barney/projects/matchbot/src/Domain/Currency.php:17    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         Assertion::alnum($isoCode);
         return match (strtoupper($isoCode)) {
             'GBP' => self::GBP,
-            default => throw new \UnexpectedValueException("Unexpected Currency ISO Code" . $isoCode),
+            default => throw new \UnexpectedValueException("Unexpected Currency ISO Code"),
         };
     }
     /**


567) /home/barney/projects/matchbot/src/Domain/Donation.php:334    [M] Identical

--- Original
+++ New
@@ @@
     public static function fromApiModel(DonationCreate $donationData, Campaign $campaign) : Donation
     {
         $psp = $donationData->psp;
-        assert($psp === 'stripe');
+        assert($psp !== 'stripe');
         $donation = new self($donationData->donationAmount, $donationData->currencyCode, $donationData->paymentMethodType);
         $donation->setPsp($psp);
         $donation->setUuid(Uuid::uuid4());


568) /home/barney/projects/matchbot/src/Domain/Donation.php:360    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $donation->setDonorLastName($donationData->lastName);
         $donation->setDonorEmailAddress($donationData->emailAddress);
         if (!empty($donationData->countryCode)) {
-            $donation->setDonorCountryCode($donationData->countryCode);
+            
         }
         if (isset($donationData->feeCoverAmount)) {
             $donation->setFeeCoverAmount($donationData->feeCoverAmount);


569) /home/barney/projects/matchbot/src/Domain/Donation.php:391    [M] Concat

--- Original
+++ New
@@ @@
         } catch (\Throwable $t) {
             // perhaps the charity was never pulled from Salesforce into our database, in which case we might
             // have a TypeError trying to get a string name from it.
-            $charityName = "[pending charity threw " . get_class($t) . "]";
+            $charityName = get_class($t) . "[pending charity threw " . "]";
         }
         return "Donation {$this->getUuid()} to {$charityName}";
     }


570) /home/barney/projects/matchbot/src/Domain/Donation.php:391    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         } catch (\Throwable $t) {
             // perhaps the charity was never pulled from Salesforce into our database, in which case we might
             // have a TypeError trying to get a string name from it.
-            $charityName = "[pending charity threw " . get_class($t) . "]";
+            $charityName = get_class($t) . "]";
         }
         return "Donation {$this->getUuid()} to {$charityName}";
     }


571) /home/barney/projects/matchbot/src/Domain/Donation.php:391    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         } catch (\Throwable $t) {
             // perhaps the charity was never pulled from Salesforce into our database, in which case we might
             // have a TypeError trying to get a string name from it.
-            $charityName = "[pending charity threw " . get_class($t) . "]";
+            $charityName = "[pending charity threw " . "]";
         }
         return "Donation {$this->getUuid()} to {$charityName}";
     }


572) /home/barney/projects/matchbot/src/Domain/Donation.php:391    [M] Concat

--- Original
+++ New
@@ @@
         } catch (\Throwable $t) {
             // perhaps the charity was never pulled from Salesforce into our database, in which case we might
             // have a TypeError trying to get a string name from it.
-            $charityName = "[pending charity threw " . get_class($t) . "]";
+            $charityName = "[pending charity threw " . "]" . get_class($t);
         }
         return "Donation {$this->getUuid()} to {$charityName}";
     }


573) /home/barney/projects/matchbot/src/Domain/Donation.php:391    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         } catch (\Throwable $t) {
             // perhaps the charity was never pulled from Salesforce into our database, in which case we might
             // have a TypeError trying to get a string name from it.
-            $charityName = "[pending charity threw " . get_class($t) . "]";
+            $charityName = "[pending charity threw " . get_class($t);
         }
         return "Donation {$this->getUuid()} to {$charityName}";
     }


574) /home/barney/projects/matchbot/src/Domain/Donation.php:411    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param PreUpdateEventArgs $args
      * @throws \LogicException if amount is changed
      */
-    public function preUpdate(PreUpdateEventArgs $args) : void
+    protected function preUpdate(PreUpdateEventArgs $args) : void
     {
         if (!$args->hasChangedField('amount')) {
             return;


575) /home/barney/projects/matchbot/src/Domain/Donation.php:413    [M] LogicalNot

--- Original
+++ New
@@ @@
      */
     public function preUpdate(PreUpdateEventArgs $args) : void
     {
-        if (!$args->hasChangedField('amount')) {
+        if ($args->hasChangedField('amount')) {
             return;
         }
         if ($args->getOldValue('amount') !== $args->getNewValue('amount')) {


576) /home/barney/projects/matchbot/src/Domain/Donation.php:417    [M] NotIdentical

--- Original
+++ New
@@ @@
         if (!$args->hasChangedField('amount')) {
             return;
         }
-        if ($args->getOldValue('amount') !== $args->getNewValue('amount')) {
+        if ($args->getOldValue('amount') === $args->getNewValue('amount')) {
             throw new \LogicException('Amount may not be changed after a donation is created');
         }
     }


577) /home/barney/projects/matchbot/src/Domain/Donation.php:418    [M] Throw_

--- Original
+++ New
@@ @@
             return;
         }
         if ($args->getOldValue('amount') !== $args->getNewValue('amount')) {
-            throw new \LogicException('Amount may not be changed after a donation is created');
+            new \LogicException('Amount may not be changed after a donation is created');
         }
     }
     public function replaceNullPaymentMethodTypeWithCard() : void


578) /home/barney/projects/matchbot/src/Domain/Donation.php:422    [M] PublicVisibility

--- Original
+++ New
@@ @@
             throw new \LogicException('Amount may not be changed after a donation is created');
         }
     }
-    public function replaceNullPaymentMethodTypeWithCard() : void
+    protected function replaceNullPaymentMethodTypeWithCard() : void
     {
         if ($this->paymentMethodType !== null) {
             throw new \Exception('Should only be called when payment method type is null');


579) /home/barney/projects/matchbot/src/Domain/Donation.php:424    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function replaceNullPaymentMethodTypeWithCard() : void
     {
-        if ($this->paymentMethodType !== null) {
+        if ($this->paymentMethodType === null) {
             throw new \Exception('Should only be called when payment method type is null');
         }
         $this->paymentMethodType = PaymentMethodType::Card;


580) /home/barney/projects/matchbot/src/Domain/Donation.php:425    [M] Throw_

--- Original
+++ New
@@ @@
     public function replaceNullPaymentMethodTypeWithCard() : void
     {
         if ($this->paymentMethodType !== null) {
-            throw new \Exception('Should only be called when payment method type is null');
+            new \Exception('Should only be called when payment method type is null');
         }
         $this->paymentMethodType = PaymentMethodType::Card;
     }


581) /home/barney/projects/matchbot/src/Domain/Donation.php:512    [M] Throw_

--- Original
+++ New
@@ @@
     public function setDonationStatus(DonationStatus $donationStatus) : void
     {
         if ($donationStatus === DonationStatus::Refunded) {
-            throw new \Exception('Donation::recordRefundAt must be used to set refunded status');
+            new \Exception('Donation::recordRefundAt must be used to set refunded status');
         }
         if ($donationStatus === DonationStatus::Cancelled) {
             throw new \Exception('Donation::cancelled must be used to cancel');


582) /home/barney/projects/matchbot/src/Domain/Donation.php:516    [M] Throw_

--- Original
+++ New
@@ @@
             throw new \Exception('Donation::recordRefundAt must be used to set refunded status');
         }
         if ($donationStatus === DonationStatus::Cancelled) {
-            throw new \Exception('Donation::cancelled must be used to cancel');
+            new \Exception('Donation::cancelled must be used to cancel');
         }
         $this->donationStatus = $donationStatus;
     }


583) /home/barney/projects/matchbot/src/Domain/Donation.php:731    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $withdrawalTotal = '0.0';
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
-            if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof ChampionFund) {
+            if (true) {
                 $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
             }
         }


584) /home/barney/projects/matchbot/src/Domain/Donation.php:731    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $withdrawalTotal = '0.0';
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
-            if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof ChampionFund) {
+            if (false) {
                 $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
             }
         }


585) /home/barney/projects/matchbot/src/Domain/Donation.php:732    [M] DecrementInteger

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof ChampionFund) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 1);
             }
         }
         return $withdrawalTotal;


586) /home/barney/projects/matchbot/src/Domain/Donation.php:732    [M] IncrementInteger

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof ChampionFund) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 3);
             }
         }
         return $withdrawalTotal;


587) /home/barney/projects/matchbot/src/Domain/Donation.php:732    [M] BCMath

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof ChampionFund) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = (string) ($withdrawalTotal + $fundingWithdrawal->getAmount());
             }
         }
         return $withdrawalTotal;


588) /home/barney/projects/matchbot/src/Domain/Donation.php:751    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $withdrawalTotal = '0.0';
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
-            if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof Pledge) {
+            if (true) {
                 $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
             }
         }


589) /home/barney/projects/matchbot/src/Domain/Donation.php:751    [M] InstanceOf_

--- Original
+++ New
@@ @@
         $withdrawalTotal = '0.0';
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
-            if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof Pledge) {
+            if (false) {
                 $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
             }
         }


590) /home/barney/projects/matchbot/src/Domain/Donation.php:752    [M] DecrementInteger

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof Pledge) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 1);
             }
         }
         return $withdrawalTotal;


591) /home/barney/projects/matchbot/src/Domain/Donation.php:752    [M] IncrementInteger

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof Pledge) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 3);
             }
         }
         return $withdrawalTotal;


592) /home/barney/projects/matchbot/src/Domain/Donation.php:752    [M] BCMath

--- Original
+++ New
@@ @@
         foreach ($this->fundingWithdrawals as $fundingWithdrawal) {
             // Rely on Doctrine `SINGLE_TABLE` inheritance structure to derive the type from the concrete class.
             if ($fundingWithdrawal->getCampaignFunding()->getFund() instanceof Pledge) {
-                $withdrawalTotal = bcadd($withdrawalTotal, $fundingWithdrawal->getAmount(), 2);
+                $withdrawalTotal = (string) ($withdrawalTotal + $fundingWithdrawal->getAmount());
             }
         }
         return $withdrawalTotal;


593) /home/barney/projects/matchbot/src/Domain/Donation.php:769    [M] Throw_

--- Original
+++ New
@@ @@
     public function getTransactionId() : string
     {
         if (!$this->transactionId) {
-            throw new \LogicException('Transaction ID not set');
+            new \LogicException('Transaction ID not set');
         }
         return $this->transactionId;
     }


594) /home/barney/projects/matchbot/src/Domain/Donation.php:804    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return ArrayCollection|FundingWithdrawal[]
      */
-    public function getFundingWithdrawals()
+    protected function getFundingWithdrawals()
     {
         return $this->fundingWithdrawals;
     }


595) /home/barney/projects/matchbot/src/Domain/Donation.php:1051    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return DateTime|null
      */
-    public function getTbgGiftAidRequestQueuedAt() : ?DateTime
+    protected function getTbgGiftAidRequestQueuedAt() : ?DateTime
     {
         return $this->tbgGiftAidRequestQueuedAt;
     }


596) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:60    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $salesforceDonationId = $this->getClient()->create($donation);
             $donation->setSalesforceId($salesforceDonationId);
         } catch (NotFoundException $ex) {
-            // Thrown only for *sandbox* 404s -> quietly stop trying to push donation to a removed campaign.
-            $this->logInfo("Marking Salesforce donation {$donation->getUuid()} as campaign removed; will not try to push again.");
+            
             $donation->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_REMOVED);
             $this->getEntityManager()->persist($donation);
             return true;


597) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         } catch (NotFoundException $ex) {
             // Thrown only for *sandbox* 404s -> quietly stop trying to push donation to a removed campaign.
             $this->logInfo("Marking Salesforce donation {$donation->getUuid()} as campaign removed; will not try to push again.");
-            $donation->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_REMOVED);
+            
             $this->getEntityManager()->persist($donation);
             return true;
             // Report 'success' for simpler summaries and spotting of real errors.


598) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // Thrown only for *sandbox* 404s -> quietly stop trying to push donation to a removed campaign.
             $this->logInfo("Marking Salesforce donation {$donation->getUuid()} as campaign removed; will not try to push again.");
             $donation->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_REMOVED);
-            $this->getEntityManager()->persist($donation);
+            
             return true;
             // Report 'success' for simpler summaries and spotting of real errors.
         } catch (BadRequestException $exception) {


599) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:66    [M] TrueValue

--- Original
+++ New
@@ @@
             $this->logInfo("Marking Salesforce donation {$donation->getUuid()} as campaign removed; will not try to push again.");
             $donation->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_REMOVED);
             $this->getEntityManager()->persist($donation);
-            return true;
+            return false;
             // Report 'success' for simpler summaries and spotting of real errors.
         } catch (BadRequestException $exception) {
             return false;


600) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:68    [M] FalseValue

--- Original
+++ New
@@ @@
             return true;
             // Report 'success' for simpler summaries and spotting of real errors.
         } catch (BadRequestException $exception) {
-            return false;
+            return true;
         }
         return true;
     }


601) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:81    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function doUpdate(SalesforceWriteProxy $donation) : bool
     {
         if ($donation->getPaymentMethodType() === null) {
-            $donation->replaceNullPaymentMethodTypeWithCard();
+            
             $this->getEntityManager()->persist($donation);
         }
         try {


602) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:82    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         if ($donation->getPaymentMethodType() === null) {
             $donation->replaceNullPaymentMethodTypeWithCard();
-            $this->getEntityManager()->persist($donation);
+            
         }
         try {
             if ($donation->getDonationStatus() === DonationStatus::Pending) {


603) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:126    [M] Throw_

--- Original
+++ New
@@ @@
     public function buildFromApiRequest(DonationCreate $donationData) : Donation
     {
         if (!in_array($donationData->psp, ['stripe'], true)) {
-            throw new \UnexpectedValueException(sprintf('PSP %s is invalid', $donationData->psp));
+            new \UnexpectedValueException(sprintf('PSP %s is invalid', $donationData->psp));
         }
         $campaign = $this->campaignRepository->findOneBy(['salesforceId' => $donationData->projectId]);
         if (!$campaign) {


604) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:136    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $campaign = $this->campaignRepository->findOneBy(['salesforceId' => $donationData->projectId]);
         if (!$campaign) {
-            // Fetch data for as-yet-unknown campaigns on-demand
-            $this->logInfo("Loading unknown campaign ID {$donationData->projectId} on-demand");
+            
             $campaign = new Campaign(charity: null);
             $campaign->setSalesforceId($donationData->projectId);
             try {


605) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:138    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // Fetch data for as-yet-unknown campaigns on-demand
             $this->logInfo("Loading unknown campaign ID {$donationData->projectId} on-demand");
             $campaign = new Campaign(charity: null);
-            $campaign->setSalesforceId($donationData->projectId);
+            
             try {
                 $campaign = $this->campaignRepository->pull($campaign);
             } catch (ClientException $exception) {


606) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:142    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             try {
                 $campaign = $this->campaignRepository->pull($campaign);
             } catch (ClientException $exception) {
-                $this->logError("Pull error for campaign ID {$donationData->projectId}: {$exception->getMessage()}");
+                
                 throw new \UnexpectedValueException('Campaign does not exist');
             }
             $this->fundRepository->pullForCampaign($campaign);


607) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:143    [M] Throw_

--- Original
+++ New
@@ @@
                 $campaign = $this->campaignRepository->pull($campaign);
             } catch (ClientException $exception) {
                 $this->logError("Pull error for campaign ID {$donationData->projectId}: {$exception->getMessage()}");
-                throw new \UnexpectedValueException('Campaign does not exist');
+                new \UnexpectedValueException('Campaign does not exist');
             }
             $this->fundRepository->pullForCampaign($campaign);
             $this->getEntityManager()->flush();


608) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:145    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->logError("Pull error for campaign ID {$donationData->projectId}: {$exception->getMessage()}");
                 throw new \UnexpectedValueException('Campaign does not exist');
             }
-            $this->fundRepository->pullForCampaign($campaign);
+            
             $this->getEntityManager()->flush();
             // Because this case of campaigns being set up individually is relatively rare,
             // it is the one place outside of `UpdateCampaigns` where we clear the whole


609) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:147    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 throw new \UnexpectedValueException('Campaign does not exist');
             }
             $this->fundRepository->pullForCampaign($campaign);
-            $this->getEntityManager()->flush();
+            
             // Because this case of campaigns being set up individually is relatively rare,
             // it is the one place outside of `UpdateCampaigns` where we clear the whole
             // result cache. It's currently the only user-invoked or single item place where


610) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:155    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // we do so.
             /** @var CacheProvider $cacheDriver */
             $cacheDriver = $this->getEntityManager()->getConfiguration()->getResultCacheImpl();
-            $cacheDriver->deleteAll();
+            
         }
         if ($donationData->currencyCode !== $campaign->getCurrencyCode()) {
             throw new \UnexpectedValueException(sprintf('Currency %s is invalid for campaign', $donationData->currencyCode));


611) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:180    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *  return value is only used in retrospective mathcing command - Donation::create does not take return value.
      * @see CampaignFundingRepository::getAvailableFundings() for lock acquisition detail
      */
-    public function allocateMatchFunds(Donation $donation) : string
+    protected function allocateMatchFunds(Donation $donation) : string
     {
         $allocationDone = false;
         $allocationTries = 0;


612) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:182    [M] FalseValue

--- Original
+++ New
@@ @@
      */
     public function allocateMatchFunds(Donation $donation) : string
     {
-        $allocationDone = false;
+        $allocationDone = true;
         $allocationTries = 0;
         // We look up matching withdrawals to allow for the case where retrospective matching was required
         // and the donation is not new, and *some* (or full) matching already occurred. The collection of withdrawals


613) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:183    [M] DecrementInteger

--- Original
+++ New
@@ @@
     public function allocateMatchFunds(Donation $donation) : string
     {
         $allocationDone = false;
-        $allocationTries = 0;
+        $allocationTries = -1;
         // We look up matching withdrawals to allow for the case where retrospective matching was required
         // and the donation is not new, and *some* (or full) matching already occurred. The collection of withdrawals
         // is most often empty (for new donations) so this will frequently be 0.00.


614) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LogicalNot

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while ($allocationDone && $allocationTries < $this->maxLockTries) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


615) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LessThan

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while (!$allocationDone && $allocationTries <= $this->maxLockTries) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


616) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while (!$allocationDone && $allocationTries >= $this->maxLockTries) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


617) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LogicalAnd

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while (!$allocationDone || $allocationTries < $this->maxLockTries) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


618) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while ($allocationDone && !($allocationTries < $this->maxLockTries)) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


619) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while (!(!$allocationDone && $allocationTries < $this->maxLockTries)) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


620) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:192    [M] While_

--- Original
+++ New
@@ @@
         $amountMatchedAtStart = $donation->getFundingWithdrawalTotal();
         /** @var FundingWithdrawal[] $newWithdrawals */
         $newWithdrawals = [];
-        while (!$allocationDone && $allocationTries < $this->maxLockTries) {
+        while (false) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {


621) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:198    [M] Foreach_

--- Original
+++ New
@@ @@
         while (!$allocationDone && $allocationTries < $this->maxLockTries) {
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
-                foreach ($likelyAvailableFunds as $funding) {
+                foreach (array() as $funding) {
                     if ($funding->getCurrencyCode() !== $donation->getCurrencyCode()) {
                         throw new \UnexpectedValueException('Currency mismatch');
                     }


622) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:199    [M] NotIdentical

--- Original
+++ New
@@ @@
             try {
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {
-                    if ($funding->getCurrencyCode() !== $donation->getCurrencyCode()) {
+                    if ($funding->getCurrencyCode() === $donation->getCurrencyCode()) {
                         throw new \UnexpectedValueException('Currency mismatch');
                     }
                 }


623) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:200    [M] Throw_

--- Original
+++ New
@@ @@
                 $likelyAvailableFunds = $this->getEntityManager()->getRepository(CampaignFunding::class)->getAvailableFundings($donation->getCampaign());
                 foreach ($likelyAvailableFunds as $funding) {
                     if ($funding->getCurrencyCode() !== $donation->getCurrencyCode()) {
-                        throw new \UnexpectedValueException('Currency mismatch');
+                        new \UnexpectedValueException('Currency mismatch');
                     }
                 }
                 $lockStartTime = microtime(true);


624) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:210    [M] TrueValue

--- Original
+++ New
@@ @@
                 $lockStartTime = microtime(true);
                 $newWithdrawals = $this->matchingAdapter->runTransactionally(fn() => $this->safelyAllocateFunds($donation, $likelyAvailableFunds, $amountMatchedAtStart));
                 $lockEndTime = microtime(true);
-                $allocationDone = true;
+                $allocationDone = false;
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s


625) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:211    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $newWithdrawals = $this->matchingAdapter->runTransactionally(fn() => $this->safelyAllocateFunds($donation, $likelyAvailableFunds, $amountMatchedAtStart));
                 $lockEndTime = microtime(true);
                 $allocationDone = true;
-                $this->persistQueuedDonations();
+                
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);


626) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:213    [M] Minus

--- Original
+++ New
@@ @@
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) + $lockStartTime, 6);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


627) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:213    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) - $lockStartTime, 5);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


628) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:213    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) - $lockStartTime, 7);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


629) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:213    [M] RoundingFamily

--- Original
+++ New
@@ @@
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = floor(microtime(true) - $lockStartTime);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


630) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:213    [M] RoundingFamily

--- Original
+++ New
@@ @@
                 $this->persistQueuedDonations();
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = ceil(microtime(true) - $lockStartTime);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


631) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:214    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


632) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:215    [M] Concat

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                $this->logError(get_class($exception) . "Match allocate FINAL error: ID {$donation->getUuid()} got " . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


633) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:215    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                $this->logError(get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


634) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:215    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


635) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:215    [M] Concat

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}" . get_class($exception));
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


636) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:215    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
+                $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception));
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


637) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:218    [M] Throw_

--- Original
+++ New
@@ @@
                 // Includes non-retryable `DBALException`s
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
                 $this->logError("Match allocate FINAL error: ID {$donation->getUuid()} got " . get_class($exception) . " after {$waitTime}s on try #{$allocationTries}: {$exception->getMessage()}");
-                throw $exception;
+                $exception;
                 // Re-throw exception after logging the details if not recoverable
             }
         }


638) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:222    [M] LogicalNot

--- Original
+++ New
@@ @@
                 // Re-throw exception after logging the details if not recoverable
             }
         }
-        if (!$allocationDone) {
+        if ($allocationDone) {
             $this->logger->error("Match allocate FINAL error: ID {$donation->getUuid()} failed matching after {$allocationTries} tries");
             throw new DomainLockContentionException();
         }


639) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:223    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
         }
         if (!$allocationDone) {
-            $this->logger->error("Match allocate FINAL error: ID {$donation->getUuid()} failed matching after {$allocationTries} tries");
+            
             throw new DomainLockContentionException();
         }
         // We release the allocation lock prior to inserting the funding withdrawal records, to keep the lock


640) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:227    [M] Throw_

--- Original
+++ New
@@ @@
         }
         if (!$allocationDone) {
             $this->logger->error("Match allocate FINAL error: ID {$donation->getUuid()} failed matching after {$allocationTries} tries");
-            throw new DomainLockContentionException();
+            new DomainLockContentionException();
         }
         // We release the allocation lock prior to inserting the funding withdrawal records, to keep the lock
         // time short. These are new entities, so except in a system crash the withdrawal totals will almost


641) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:235    [M] Foreach_

--- Original
+++ New
@@ @@
         // time short. These are new entities, so except in a system crash the withdrawal totals will almost
         // immediately match the amount deducted from the fund.
         $amountNewlyMatched = '0.0';
-        foreach ($newWithdrawals as $newWithdrawal) {
+        foreach (array() as $newWithdrawal) {
             $this->getEntityManager()->persist($newWithdrawal);
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);


642) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:236    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // immediately match the amount deducted from the fund.
         $amountNewlyMatched = '0.0';
         foreach ($newWithdrawals as $newWithdrawal) {
-            $this->getEntityManager()->persist($newWithdrawal);
+            
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }


643) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:237    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $amountNewlyMatched = '0.0';
         foreach ($newWithdrawals as $newWithdrawal) {
             $this->getEntityManager()->persist($newWithdrawal);
-            $donation->addFundingWithdrawal($newWithdrawal);
+            
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);


644) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:238    [M] DecrementInteger

--- Original
+++ New
@@ @@
         foreach ($newWithdrawals as $newWithdrawal) {
             $this->getEntityManager()->persist($newWithdrawal);
             $donation->addFundingWithdrawal($newWithdrawal);
-            $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
+            $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 1);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');


645) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:238    [M] IncrementInteger

--- Original
+++ New
@@ @@
         foreach ($newWithdrawals as $newWithdrawal) {
             $this->getEntityManager()->persist($newWithdrawal);
             $donation->addFundingWithdrawal($newWithdrawal);
-            $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
+            $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 3);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');


646) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:238    [M] BCMath

--- Original
+++ New
@@ @@
         foreach ($newWithdrawals as $newWithdrawal) {
             $this->getEntityManager()->persist($newWithdrawal);
             $donation->addFundingWithdrawal($newWithdrawal);
-            $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
+            $amountNewlyMatched = (string) ($amountNewlyMatched + $newWithdrawal->getAmount());
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');


647) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] Concat

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo($donation->getUuid() . 'ID ' . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


648) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo($donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


649) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo('ID ' . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


650) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] Concat

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo('ID ' . ' allocated new match funds totalling ' . $donation->getUuid() . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


651) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo('ID ' . $donation->getUuid() . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


652) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] Concat

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo('ID ' . $donation->getUuid() . $amountNewlyMatched . ' allocated new match funds totalling ');
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


653) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ');
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


654) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:241    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $donation->addFundingWithdrawal($newWithdrawal);
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
-        $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
+        
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;


655) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] Minus

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . round($lockEndTime + $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


656) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] DecrementInteger

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 5) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


657) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] IncrementInteger

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 7) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


658) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] RoundingFamily

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . floor($lockEndTime - $lockStartTime) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


659) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] RoundingFamily

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . ceil($lockEndTime - $lockStartTime) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


660) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] Concat

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo(round($lockEndTime - $lockStartTime, 6) . 'Allocation took ' . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


661) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo(round($lockEndTime - $lockStartTime, 6) . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


662) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . ' seconds');
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


663) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] Concat

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . ' seconds' . round($lockEndTime - $lockStartTime, 6));
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


664) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6));
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


665) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:242    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $amountNewlyMatched = bcadd($amountNewlyMatched, $newWithdrawal->getAmount(), 2);
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
-        $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
+        
         $this->getEntityManager()->flush();
         return $amountNewlyMatched;
     }


666) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:244    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $this->logInfo('ID ' . $donation->getUuid() . ' allocated new match funds totalling ' . $amountNewlyMatched);
         $this->logInfo('Allocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');
-        $this->getEntityManager()->flush();
+        
         return $amountNewlyMatched;
     }
     /**


667) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:309    [M] Foreach_

--- Original
+++ New
@@ @@
             try {
                 $lockStartTime = microtime(true);
                 $totalAmountReleased = $this->matchingAdapter->runTransactionally(function () use($donation, $totalAmountReleased) {
-                    foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
+                    foreach (array() as $fundingWithdrawal) {
                         $funding = $fundingWithdrawal->getCampaignFunding();
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
                         $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);


668) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:312    [M] DecrementInteger

--- Original
+++ New
@@ @@
                     foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
                         $funding = $fundingWithdrawal->getCampaignFunding();
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
-                        $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);
+                        $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 1);
                         $this->logInfo("Released {$fundingWithdrawal->getAmount()} to funding {$funding->getId()}");
                         $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
                     }


669) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:312    [M] IncrementInteger

--- Original
+++ New
@@ @@
                     foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
                         $funding = $fundingWithdrawal->getCampaignFunding();
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
-                        $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);
+                        $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 3);
                         $this->logInfo("Released {$fundingWithdrawal->getAmount()} to funding {$funding->getId()}");
                         $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
                     }


670) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:312    [M] BCMath

--- Original
+++ New
@@ @@
                     foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
                         $funding = $fundingWithdrawal->getCampaignFunding();
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
-                        $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);
+                        $totalAmountReleased = (string) ($totalAmountReleased + $fundingWithdrawal->getAmount());
                         $this->logInfo("Released {$fundingWithdrawal->getAmount()} to funding {$funding->getId()}");
                         $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
                     }


671) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:313    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                         $funding = $fundingWithdrawal->getCampaignFunding();
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
                         $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);
-                        $this->logInfo("Released {$fundingWithdrawal->getAmount()} to funding {$funding->getId()}");
+                        
                         $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
                     }
                     return $totalAmountReleased;


672) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:314    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                         $newTotal = $this->matchingAdapter->addAmount($funding, $fundingWithdrawal->getAmount());
                         $totalAmountReleased = bcadd($totalAmountReleased, $fundingWithdrawal->getAmount(), 2);
                         $this->logInfo("Released {$fundingWithdrawal->getAmount()} to funding {$funding->getId()}");
-                        $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
+                        
                     }
                     return $totalAmountReleased;
                 });


673) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:329    [M] Minus

--- Original
+++ New
@@ @@
                     $this->logError('Doctrine could not remove withdrawals after maximum tries');
                 }
             } catch (Matching\TerminalLockException $exception) {
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) + $lockStartTime, 6);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


674) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:329    [M] DecrementInteger

--- Original
+++ New
@@ @@
                     $this->logError('Doctrine could not remove withdrawals after maximum tries');
                 }
             } catch (Matching\TerminalLockException $exception) {
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) - $lockStartTime, 5);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


675) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:329    [M] IncrementInteger

--- Original
+++ New
@@ @@
                     $this->logError('Doctrine could not remove withdrawals after maximum tries');
                 }
             } catch (Matching\TerminalLockException $exception) {
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = round(microtime(true) - $lockStartTime, 7);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


676) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:329    [M] RoundingFamily

--- Original
+++ New
@@ @@
                     $this->logError('Doctrine could not remove withdrawals after maximum tries');
                 }
             } catch (Matching\TerminalLockException $exception) {
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = floor(microtime(true) - $lockStartTime);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


677) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:329    [M] RoundingFamily

--- Original
+++ New
@@ @@
                     $this->logError('Doctrine could not remove withdrawals after maximum tries');
                 }
             } catch (Matching\TerminalLockException $exception) {
-                $waitTime = round(microtime(true) - $lockStartTime, 6);
+                $waitTime = ceil(microtime(true) - $lockStartTime);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable


678) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:330    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


679) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] Concat

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError($donation->getUuid() . 'Match release FINAL error: ID ' . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


680) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError($donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


681) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


682) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] Concat

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . ' got ' . $donation->getUuid() . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


683) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


684) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] Concat

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . get_class($exception) . ' got ' . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


685) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


686) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] Concat

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}" . get_class($exception));
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


687) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:331    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 }
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
-                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
+                $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception));
                 throw $exception;
                 // Re-throw exception after logging the details if not recoverable
             }


688) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:334    [M] Throw_

--- Original
+++ New
@@ @@
             } catch (Matching\TerminalLockException $exception) {
                 $waitTime = round(microtime(true) - $lockStartTime, 6);
                 $this->logError('Match release FINAL error: ID ' . $donation->getUuid() . ' got ' . get_class($exception) . " after {$waitTime}s on try #{$releaseTries}: {$exception->getMessage()}");
-                throw $exception;
+                $exception;
                 // Re-throw exception after logging the details if not recoverable
             }
         }


689) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:339    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
         }
         if (!$releaseDone) {
-            $this->logger->error("Match release FINAL error: ID {$donation->getUuid()} failed releasing after {$releaseTries} tries");
+            
             throw new DomainLockContentionException();
         }
         $this->logInfo("Taking from ID {$donation->getUuid()} released match funds totalling {$totalAmountReleased}");


690) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:343    [M] Throw_

--- Original
+++ New
@@ @@
         }
         if (!$releaseDone) {
             $this->logger->error("Match release FINAL error: ID {$donation->getUuid()} failed releasing after {$releaseTries} tries");
-            throw new DomainLockContentionException();
+            new DomainLockContentionException();
         }
         $this->logInfo("Taking from ID {$donation->getUuid()} released match funds totalling {$totalAmountReleased}");
         $this->logInfo('Deallocation took ' . round($lockEndTime - $lockStartTime, 6) . ' seconds');


691) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:355    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return Donation[]
      */
-    public function findWithExpiredMatching(\DateTimeImmutable $now) : array
+    protected function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
         $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);


692) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:357    [M] Concat

--- Original
+++ New
@@ @@
      */
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
-        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
+        $cutoff = $now->sub(new \DateInterval(self::EXPIRY_SECONDS . 'PT' . 'S'));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching


693) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:357    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
-        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
+        $cutoff = $now->sub(new \DateInterval(self::EXPIRY_SECONDS . 'S'));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching


694) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:357    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
-        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
+        $cutoff = $now->sub(new \DateInterval('PT' . 'S'));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching


695) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:357    [M] Concat

--- Original
+++ New
@@ @@
      */
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
-        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
+        $cutoff = $now->sub(new \DateInterval('PT' . 'S' . self::EXPIRY_SECONDS));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching


696) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:357    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
-        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
+        $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS));
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching


697) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:367    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     public function findWithExpiredMatching(\DateTimeImmutable $now) : array
     {
         $cutoff = $now->sub(new \DateInterval('PT' . self::EXPIRY_SECONDS . 'S'));
-        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Pending->value, DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
+        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->innerJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:expireWithStatuses)')->andWhere('d.createdAt < :expireBefore')->groupBy('d.id')->setParameter('expireWithStatuses', [DonationStatus::Cancelled->value])->setParameter('expireBefore', $cutoff);
         // As this is used by the only regular task working with donations,
         // `ExpireMatchFunds`, it makes more sense to opt it out of result caching
         // here rather than take the performance hit of a full query cache clear


698) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:386    [M] Throw_

--- Original
+++ New
@@ @@
     public function findReadyToClaimGiftAid(bool $withResends) : array
     {
         if ($withResends && getenv('APP_ENV') === 'production') {
-            throw new \LogicException('Cannot re-send live donations');
+            new \LogicException('Cannot re-send live donations');
         }
         // Stripe's weekly payout schedule uses a `weekly_anchor` of Monday and `delay_days` set to 14. However,
         // as of 5 July 2022, we see essentially undocumented behaviour such that donations on a Monday can have less


699) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:425    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return Donation[]
      */
-    public function findNotFullyMatchedToCampaignsWhichClosedSince(DateTime $closedSinceDate) : array
+    protected function findNotFullyMatchedToCampaignsWhichClosedSince(DateTime $closedSinceDate) : array
     {
         $now = new DateTime('now');
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('c.endDate < :now')->andWhere('c.endDate > :campaignClosedSince')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', array_map(static fn(DonationStatus $s) => $s->value, DonationStatus::SUCCESS_STATUSES))->setParameter('campaignClosedSince', $closedSinceDate)->setParameter('now', $now);


700) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:440    [M] UnwrapArrayMap

--- Original
+++ New
@@ @@
     public function findNotFullyMatchedToCampaignsWhichClosedSince(DateTime $closedSinceDate) : array
     {
         $now = new DateTime('now');
-        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('c.endDate < :now')->andWhere('c.endDate > :campaignClosedSince')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', array_map(static fn(DonationStatus $s) => $s->value, DonationStatus::SUCCESS_STATUSES))->setParameter('campaignClosedSince', $closedSinceDate)->setParameter('now', $now);
+        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('c.endDate < :now')->andWhere('c.endDate > :campaignClosedSince')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', DonationStatus::SUCCESS_STATUSES)->setParameter('campaignClosedSince', $closedSinceDate)->setParameter('now', $now);
         // Result caching rationale as per `findWithExpiredMatching()`.
         return $qb->getQuery()->disableResultCache()->getResult();
     }


701) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:453    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return Donation[]
      */
-    public function findRecentNotFullyMatchedToMatchCampaigns(DateTime $sinceDate) : array
+    protected function findRecentNotFullyMatchedToMatchCampaigns(DateTime $sinceDate) : array
     {
         $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('d.createdAt >= :checkAfter')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', array_map(static fn(DonationStatus $s) => $s->value, DonationStatus::SUCCESS_STATUSES))->setParameter('checkAfter', $sinceDate);
         // Result caching rationale as per `findWithExpiredMatching()`, except this is


702) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:466    [M] UnwrapArrayMap

--- Original
+++ New
@@ @@
      */
     public function findRecentNotFullyMatchedToMatchCampaigns(DateTime $sinceDate) : array
     {
-        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('d.createdAt >= :checkAfter')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', array_map(static fn(DonationStatus $s) => $s->value, DonationStatus::SUCCESS_STATUSES))->setParameter('checkAfter', $sinceDate);
+        $qb = $this->getEntityManager()->createQueryBuilder()->select('d')->from(Donation::class, 'd')->join('d.campaign', 'c')->leftJoin('d.fundingWithdrawals', 'fw')->where('d.donationStatus IN (:completeStatuses)')->andWhere('c.isMatched = true')->andWhere('d.createdAt >= :checkAfter')->groupBy('d')->having('(SUM(fw.amount) IS NULL OR SUM(fw.amount) < d.amount)')->orderBy('d.createdAt', 'ASC')->setParameter('completeStatuses', DonationStatus::SUCCESS_STATUSES)->setParameter('checkAfter', $sinceDate);
         // Result caching rationale as per `findWithExpiredMatching()`, except this is
         // currently used only in the rarer case of manually invoking
         // `RetrospectivelyMatch`.


703) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:571    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param FundRepository $fundRepository
      */
-    public function setFundRepository(FundRepository $fundRepository) : void
+    protected function setFundRepository(FundRepository $fundRepository) : void
     {
         $this->fundRepository = $fundRepository;
     }


704) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:604    [M] DecrementInteger

--- Original
+++ New
@@ @@
      */
     private function safelyAllocateFunds(Donation $donation, array $fundings, string $amountMatchedAtStart) : array
     {
-        $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 2);
+        $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 1);
         $currentFundingIndex = 0;
         /** @var FundingWithdrawal[] $newWithdrawals Track these to persist outside the lock window, to keep it short */
         $newWithdrawals = [];


705) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:604    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     private function safelyAllocateFunds(Donation $donation, array $fundings, string $amountMatchedAtStart) : array
     {
-        $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 2);
+        $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 3);
         $currentFundingIndex = 0;
         /** @var FundingWithdrawal[] $newWithdrawals Track these to persist outside the lock window, to keep it short */
         $newWithdrawals = [];


706) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:604    [M] BCMath

--- Original
+++ New
@@ @@
      */
     private function safelyAllocateFunds(Donation $donation, array $fundings, string $amountMatchedAtStart) : array
     {
-        $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 2);
+        $amountLeftToMatch = (string) ($donation->getAmount() - $amountMatchedAtStart);
         $currentFundingIndex = 0;
         /** @var FundingWithdrawal[] $newWithdrawals Track these to persist outside the lock window, to keep it short */
         $newWithdrawals = [];


707) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:605    [M] DecrementInteger

--- Original
+++ New
@@ @@
     private function safelyAllocateFunds(Donation $donation, array $fundings, string $amountMatchedAtStart) : array
     {
         $amountLeftToMatch = bcsub($donation->getAmount(), $amountMatchedAtStart, 2);
-        $currentFundingIndex = 0;
+        $currentFundingIndex = -1;
         /** @var FundingWithdrawal[] $newWithdrawals Track these to persist outside the lock window, to keep it short */
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation


708) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] LessThan

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex <= count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


709) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex >= count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


710) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 1) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


711) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 3) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


712) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] BCMath

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) && ($amountLeftToMatch <=> '0.00') === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


713) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 2) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


714) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] Identical

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) !== 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


715) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] LogicalAnd

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while ($currentFundingIndex < count($fundings) || bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


716) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] LogicalAndAllSubExprNegation

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while (!($currentFundingIndex < count($fundings)) && !(bccomp($amountLeftToMatch, '0.00', 2) === 1)) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


717) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] LogicalAndNegation

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while (!($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1)) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


718) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:611    [M] While_

--- Original
+++ New
@@ @@
         $newWithdrawals = [];
         // Loop as long as there are still campaign funds not allocated and we have allocated less than the donation
         // amount
-        while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
+        while (false) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
             if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {


719) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:615    [M] DecrementInteger

--- Original
+++ New
@@ @@
         while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
-            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {
+            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 1) === -1) {
                 $amountToAllocateNow = $startAmountAvailable;
             } else {
                 $amountToAllocateNow = $amountLeftToMatch;


720) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:615    [M] IncrementInteger

--- Original
+++ New
@@ @@
         while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
-            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {
+            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 3) === -1) {
                 $amountToAllocateNow = $startAmountAvailable;
             } else {
                 $amountToAllocateNow = $amountLeftToMatch;


721) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:615    [M] BCMath

--- Original
+++ New
@@ @@
         while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
-            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {
+            if (($funding->getAmountAvailable() <=> $amountLeftToMatch) === -1) {
                 $amountToAllocateNow = $startAmountAvailable;
             } else {
                 $amountToAllocateNow = $amountLeftToMatch;


722) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:615    [M] IncrementInteger

--- Original
+++ New
@@ @@
         while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
-            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {
+            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -0) {
                 $amountToAllocateNow = $startAmountAvailable;
             } else {
                 $amountToAllocateNow = $amountLeftToMatch;


723) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:615    [M] Identical

--- Original
+++ New
@@ @@
         while ($currentFundingIndex < count($fundings) && bccomp($amountLeftToMatch, '0.00', 2) === 1) {
             $funding = $fundings[$currentFundingIndex];
             $startAmountAvailable = $fundings[$currentFundingIndex]->getAmountAvailable();
-            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) === -1) {
+            if (bccomp($funding->getAmountAvailable(), $amountLeftToMatch, 2) !== -1) {
                 $amountToAllocateNow = $startAmountAvailable;
             } else {
                 $amountToAllocateNow = $amountLeftToMatch;


724) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:626    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 // If no exception thrown
             } catch (Matching\LessThanRequestedAllocatedException $exception) {
                 $amountAllocated = $exception->getAmountAllocated();
-                $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
+                
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {


725) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:627    [M] Concat

--- Original
+++ New
@@ @@
                 // If no exception thrown
             } catch (Matching\LessThanRequestedAllocatedException $exception) {
                 $amountAllocated = $exception->getAmountAllocated();
-                $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
+                $this->logInfo("of requested {$amountToAllocateNow}" . "Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} ");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {


726) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:627    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // If no exception thrown
             } catch (Matching\LessThanRequestedAllocatedException $exception) {
                 $amountAllocated = $exception->getAmountAllocated();
-                $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
+                $this->logInfo("of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {


727) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:627    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // If no exception thrown
             } catch (Matching\LessThanRequestedAllocatedException $exception) {
                 $amountAllocated = $exception->getAmountAllocated();
-                $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
+                $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} ");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {


728) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:632    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $amountAllocated = $exception->getAmountAllocated();
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
-            $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
+            $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 1);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);


729) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:632    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $amountAllocated = $exception->getAmountAllocated();
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
-            $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
+            $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 3);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);


730) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:632    [M] BCMath

--- Original
+++ New
@@ @@
                 $amountAllocated = $exception->getAmountAllocated();
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
-            $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
+            $amountLeftToMatch = (string) ($amountLeftToMatch - $amountAllocated);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);


731) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:634    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
-            if (bccomp($amountAllocated, '0.00', 2) === 1) {
+            if (bccomp($amountAllocated, '0.00', 1) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);


732) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:634    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
-            if (bccomp($amountAllocated, '0.00', 2) === 1) {
+            if (bccomp($amountAllocated, '0.00', 3) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);


733) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:634    [M] BCMath

--- Original
+++ New
@@ @@
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
-            if (bccomp($amountAllocated, '0.00', 2) === 1) {
+            if (($amountAllocated <=> '0.00') === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);


734) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:634    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
-            if (bccomp($amountAllocated, '0.00', 2) === 1) {
+            if (bccomp($amountAllocated, '0.00', 2) === 2) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);


735) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:634    [M] Identical

--- Original
+++ New
@@ @@
                 $this->logInfo("Amount available from funding {$funding->getId()} changed: - got {$amountAllocated} " . "of requested {$amountToAllocateNow}");
             }
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
-            if (bccomp($amountAllocated, '0.00', 2) === 1) {
+            if (bccomp($amountAllocated, '0.00', 2) !== 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);


736) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:636    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $amountLeftToMatch = bcsub($amountLeftToMatch, $amountAllocated, 2);
             if (bccomp($amountAllocated, '0.00', 2) === 1) {
                 $withdrawal = new FundingWithdrawal();
-                $withdrawal->setDonation($donation);
+                
                 $withdrawal->setCampaignFunding($funding);
                 $withdrawal->setAmount($amountAllocated);
                 $newWithdrawals[] = $withdrawal;


737) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:637    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             if (bccomp($amountAllocated, '0.00', 2) === 1) {
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
-                $withdrawal->setCampaignFunding($funding);
+                
                 $withdrawal->setAmount($amountAllocated);
                 $newWithdrawals[] = $withdrawal;
                 $this->logInfo("Successfully withdrew {$amountAllocated} from funding {$funding->getId()}");


738) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:638    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $withdrawal = new FundingWithdrawal();
                 $withdrawal->setDonation($donation);
                 $withdrawal->setCampaignFunding($funding);
-                $withdrawal->setAmount($amountAllocated);
+                
                 $newWithdrawals[] = $withdrawal;
                 $this->logInfo("Successfully withdrew {$amountAllocated} from funding {$funding->getId()}");
                 $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");


739) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:640    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $withdrawal->setCampaignFunding($funding);
                 $withdrawal->setAmount($amountAllocated);
                 $newWithdrawals[] = $withdrawal;
-                $this->logInfo("Successfully withdrew {$amountAllocated} from funding {$funding->getId()}");
+                
                 $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
             }
             $currentFundingIndex++;


740) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:641    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $withdrawal->setAmount($amountAllocated);
                 $newWithdrawals[] = $withdrawal;
                 $this->logInfo("Successfully withdrew {$amountAllocated} from funding {$funding->getId()}");
-                $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
+                
             }
             $currentFundingIndex++;
         }


741) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:644    [M] Increment

--- Original
+++ New
@@ @@
                 $this->logInfo("Successfully withdrew {$amountAllocated} from funding {$funding->getId()}");
                 $this->logInfo("New fund total for {$funding->getId()}: {$newTotal}");
             }
-            $currentFundingIndex++;
+            $currentFundingIndex--;
         }
         $this->queueForPersist($donation);
         return $newWithdrawals;


742) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:647    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             $currentFundingIndex++;
         }
-        $this->queueForPersist($donation);
+        
         return $newWithdrawals;
     }
     private function queueForPersist(Donation $donation) : void


743) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:649    [M] ArrayOneItem

--- Original
+++ New
@@ @@
             $currentFundingIndex++;
         }
         $this->queueForPersist($donation);
-        return $newWithdrawals;
+        return count($newWithdrawals) > 1 ? array_slice($newWithdrawals, 0, 1, true) : $newWithdrawals;
     }
     private function queueForPersist(Donation $donation) : void
     {


744) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:659    [M] Identical

--- Original
+++ New
@@ @@
     }
     private function persistQueuedDonations() : void
     {
-        if (count($this->queuedForPersist) === 0) {
+        if (count($this->queuedForPersist) !== 0) {
             return;
         }
         foreach ($this->queuedForPersist as $donation) {


745) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:663    [M] Foreach_

--- Original
+++ New
@@ @@
         if (count($this->queuedForPersist) === 0) {
             return;
         }
-        foreach ($this->queuedForPersist as $donation) {
+        foreach (array() as $donation) {
             $this->getEntityManager()->persist($donation);
         }
     }


746) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:664    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return;
         }
         foreach ($this->queuedForPersist as $donation) {
-            $this->getEntityManager()->persist($donation);
+            
         }
     }
     /**


747) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:672    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * Locks row in DB to prevent concurrent updates. See jira MAT-260
      * @throws DBALException\LockWaitTimeoutException
      */
-    public function findAndLockOneBy(array $criteria, ?array $orderBy = null) : ?Donation
+    protected function findAndLockOneBy(array $criteria, ?array $orderBy = null) : ?Donation
     {
         // We can't actually lock the row until we know the ID of the donation, so we fetch it first
         // using the criteria, and then call find once we know the ID to lock.


748) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:678    [M] Identical

--- Original
+++ New
@@ @@
         // We can't actually lock the row until we know the ID of the donation, so we fetch it first
         // using the criteria, and then call find once we know the ID to lock.
         $donation = $this->findOneBy($criteria, $orderBy);
-        if ($donation === null) {
+        if ($donation !== null) {
             return null;
         }
         $this->getEntityManager()->refresh($donation, LockMode::PESSIMISTIC_WRITE);


749) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:682    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if ($donation === null) {
             return null;
         }
-        $this->getEntityManager()->refresh($donation, LockMode::PESSIMISTIC_WRITE);
+        
         return $donation;
     }
     /**


750) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:695    [M] Foreach_

--- Original
+++ New
@@ @@
     public function removeAllFundingWithdrawalsForDonation(Donation $donation) : void
     {
         $this->getEntityManager()->transactional(function () use($donation) {
-            foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
+            foreach (array() as $fundingWithdrawal) {
                 $this->getEntityManager()->remove($fundingWithdrawal);
             }
         });
     }
 }


751) /home/barney/projects/matchbot/src/Domain/DonationRepository.php:696    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->getEntityManager()->transactional(function () use($donation) {
             foreach ($donation->getFundingWithdrawals() as $fundingWithdrawal) {
-                $this->getEntityManager()->remove($fundingWithdrawal);
+                
             }
         });
     }
 }


752) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:16    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @throws UniqueConstraintViolationException if we already have a donor account with the same Stripe Customer ID.
      */
-    public function save(DonorAccount $donorAccount) : void
+    protected function save(DonorAccount $donorAccount) : void
     {
         $this->getEntityManager()->persist($donorAccount);
         $this->getEntityManager()->flush();


753) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:18    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function save(DonorAccount $donorAccount) : void
     {
-        $this->getEntityManager()->persist($donorAccount);
+        
         $this->getEntityManager()->flush();
     }
     public function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount


754) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function save(DonorAccount $donorAccount) : void
     {
         $this->getEntityManager()->persist($donorAccount);
-        $this->getEntityManager()->flush();
+        
     }
     public function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount
     {


755) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:22    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $this->getEntityManager()->persist($donorAccount);
         $this->getEntityManager()->flush();
     }
-    public function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount
+    protected function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount
     {
         // see https://github.com/laravel-doctrine/fluent/issues/51 for using findOneBy on a field of an embeddable.
         return $this->findOneBy(['stripeCustomerId.stripeCustomerId' => $stripeAccountId->stripeCustomerId]);
     }
 }


756) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:25    [M] ArrayItem

--- Original
+++ New
@@ @@
     public function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount
     {
         // see https://github.com/laravel-doctrine/fluent/issues/51 for using findOneBy on a field of an embeddable.
-        return $this->findOneBy(['stripeCustomerId.stripeCustomerId' => $stripeAccountId->stripeCustomerId]);
+        return $this->findOneBy(['stripeCustomerId.stripeCustomerId' > $stripeAccountId->stripeCustomerId]);
     }
 }


757) /home/barney/projects/matchbot/src/Domain/DonorAccountRepository.php:25    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     public function findByStripeIdOrNull(StripeCustomerId $stripeAccountId) : ?DonorAccount
     {
         // see https://github.com/laravel-doctrine/fluent/issues/51 for using findOneBy on a field of an embeddable.
-        return $this->findOneBy(['stripeCustomerId.stripeCustomerId' => $stripeAccountId->stripeCustomerId]);
+        return $this->findOneBy([]);
     }
 }


758) /home/barney/projects/matchbot/src/Domain/DonorName.php:48    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @psalm-suppress PossiblyUnusedMethod - likely to be used soon when we send emails.
      */
-    public function fullName() : string
+    protected function fullName() : string
     {
         return "{$this->first} {$this->last}";
     }
 }


759) /home/barney/projects/matchbot/src/Domain/FundRepository.php:62    [M] Concat

--- Original
+++ New
@@ @@
                 // Need the fund ID for the CampaignFunding find
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else made the fund with this SF ID during the previous operations.
-                $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
+                $this->logError($fundData['id'] . 'Skipping fund create as unique constraint failed on SF ID ');
                 $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
                 $fund = $this->setAnyFundData($fund, $fundData);
                 $this->getEntityManager()->persist($fund);


760) /home/barney/projects/matchbot/src/Domain/FundRepository.php:62    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // Need the fund ID for the CampaignFunding find
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else made the fund with this SF ID during the previous operations.
-                $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
+                $this->logError($fundData['id']);
                 $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
                 $fund = $this->setAnyFundData($fund, $fundData);
                 $this->getEntityManager()->persist($fund);


761) /home/barney/projects/matchbot/src/Domain/FundRepository.php:62    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 // Need the fund ID for the CampaignFunding find
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else made the fund with this SF ID during the previous operations.
-                $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
+                $this->logError('Skipping fund create as unique constraint failed on SF ID ');
                 $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
                 $fund = $this->setAnyFundData($fund, $fundData);
                 $this->getEntityManager()->persist($fund);


762) /home/barney/projects/matchbot/src/Domain/FundRepository.php:62    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
                 // Need the fund ID for the CampaignFunding find
             } catch (UniqueConstraintViolationException $exception) {
-                // Somebody else made the fund with this SF ID during the previous operations.
-                $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
+                
                 $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
                 $fund = $this->setAnyFundData($fund, $fundData);
                 $this->getEntityManager()->persist($fund);


763) /home/barney/projects/matchbot/src/Domain/FundRepository.php:64    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else made the fund with this SF ID during the previous operations.
                 $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
-                $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
+                $fund = $this->findOneBy([]);
                 $fund = $this->setAnyFundData($fund, $fundData);
                 $this->getEntityManager()->persist($fund);
             }


764) /home/barney/projects/matchbot/src/Domain/FundRepository.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->logError('Skipping fund create as unique constraint failed on SF ID ' . $fundData['id']);
                 $fund = $this->findOneBy(['salesforceId' => $fundData['id']]);
                 $fund = $this->setAnyFundData($fund, $fundData);
-                $this->getEntityManager()->persist($fund);
+                
             }
             // If there's already a CampaignFunding for this fund, use that regardless of existing campaigns
             // iff the fund is shareable. Otherwise look up only fundings for this campaign. In both cases,


765) /home/barney/projects/matchbot/src/Domain/FundRepository.php:117    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $campaignFunding->setAmount($amountForCampaign);
             }
             if ($fund instanceof Pledge) {
-                $campaignFunding->setAllocationOrder(100);
+                $campaignFunding->setAllocationOrder(99);
             } else {
                 $campaignFunding->setAllocationOrder(200);
             }


766) /home/barney/projects/matchbot/src/Domain/FundRepository.php:117    [M] IncrementInteger

--- Original
+++ New
@@ @@
                 $campaignFunding->setAmount($amountForCampaign);
             }
             if ($fund instanceof Pledge) {
-                $campaignFunding->setAllocationOrder(100);
+                $campaignFunding->setAllocationOrder(101);
             } else {
                 $campaignFunding->setAllocationOrder(200);
             }


767) /home/barney/projects/matchbot/src/Domain/FundRepository.php:117    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $campaignFunding->setAmount($amountForCampaign);
             }
             if ($fund instanceof Pledge) {
-                $campaignFunding->setAllocationOrder(100);
+                
             } else {
                 $campaignFunding->setAllocationOrder(200);
             }


768) /home/barney/projects/matchbot/src/Domain/FundRepository.php:131    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->persist($campaignFunding);
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
-                // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                
             }
         }
     }


769) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] Concat

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError($campaign->getId() . 'Skipping campaign funding create as constraint failed with campaign ' . ', fund ' . $fund->getId());
             }
         }
     }


770) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError($campaign->getId() . ', fund ' . $fund->getId());
             }
         }
     }


771) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . ', fund ' . $fund->getId());
             }
         }
     }


772) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] Concat

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . ', fund ' . $campaign->getId() . $fund->getId());
             }
         }
     }


773) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . $fund->getId());
             }
         }
     }


774) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] Concat

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . $fund->getId() . ', fund ');
             }
         }
     }


775) /home/barney/projects/matchbot/src/Domain/FundRepository.php:132    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 $this->getEntityManager()->flush();
             } catch (UniqueConstraintViolationException $exception) {
                 // Somebody else created the specific funding -> proceed without modifying it.
-                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ' . $fund->getId());
+                $this->logError('Skipping campaign funding create as constraint failed with campaign ' . $campaign->getId() . ', fund ');
             }
         }
     }


776) /home/barney/projects/matchbot/src/Domain/FundRepository.php:166    [M] Throw_

--- Original
+++ New
@@ @@
         } elseif ($fundData['type'] === 'championFund') {
             $fund = new ChampionFund();
         } else {
-            throw new \UnexpectedValueException("Unknown fund type '{$fundData['type']}'");
+            new \UnexpectedValueException("Unknown fund type '{$fundData['type']}'");
         }
         $fund->setSalesforceId($fundData['id']);
         return $fund;


777) /home/barney/projects/matchbot/src/Domain/FundingWithdrawal.php:63    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param CampaignFunding $campaignFunding
      */
-    public function setCampaignFunding(CampaignFunding $campaignFunding) : void
+    protected function setCampaignFunding(CampaignFunding $campaignFunding) : void
     {
         $this->campaignFunding = $campaignFunding;
     }


778) /home/barney/projects/matchbot/src/Domain/FundingWithdrawal.php:68    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         $this->campaignFunding = $campaignFunding;
     }
-    public function getCampaignFunding() : ?CampaignFunding
+    protected function getCampaignFunding() : ?CampaignFunding
     {
         return $this->campaignFunding;
     }
 }


779) /home/barney/projects/matchbot/src/Domain/FundingWithdrawalRepository.php:18    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param CampaignFunding $campaignFunding
      * @return string Total of FundingWithdrawals (including active reservations) as bcmath-ready string
      */
-    public function getWithdrawalsTotal(CampaignFunding $campaignFunding) : string
+    protected function getWithdrawalsTotal(CampaignFunding $campaignFunding) : string
     {
         $qb = $this->getEntityManager()->createQueryBuilder()->select('SUM(fw.amount)')->from(FundingWithdrawal::class, 'fw')->where('fw.campaignFunding = :campaignFunding')->setParameter('campaignFunding', $campaignFunding->getId());
         $amount = (string) $qb->getQuery()->getSingleScalarResult();


780) /home/barney/projects/matchbot/src/Domain/FundingWithdrawalRepository.php:26    [M] CastString

--- Original
+++ New
@@ @@
     public function getWithdrawalsTotal(CampaignFunding $campaignFunding) : string
     {
         $qb = $this->getEntityManager()->createQueryBuilder()->select('SUM(fw.amount)')->from(FundingWithdrawal::class, 'fw')->where('fw.campaignFunding = :campaignFunding')->setParameter('campaignFunding', $campaignFunding->getId());
-        $amount = (string) $qb->getQuery()->getSingleScalarResult();
+        $amount = $qb->getQuery()->getSingleScalarResult();
         if ($amount === '') {
             return '0.00';
         }


781) /home/barney/projects/matchbot/src/Domain/FundingWithdrawalRepository.php:28    [M] Identical

--- Original
+++ New
@@ @@
     {
         $qb = $this->getEntityManager()->createQueryBuilder()->select('SUM(fw.amount)')->from(FundingWithdrawal::class, 'fw')->where('fw.campaignFunding = :campaignFunding')->setParameter('campaignFunding', $campaignFunding->getId());
         $amount = (string) $qb->getQuery()->getSingleScalarResult();
-        if ($amount === '') {
+        if ($amount !== '') {
             return '0.00';
         }
         return $amount;
     }
 }


782) /home/barney/projects/matchbot/src/Domain/Model.php:42    [M] Concat

--- Original
+++ New
@@ @@
     }
     public function __toString() : string
     {
-        return "Instance of " . get_class($this);
+        return get_class($this) . "Instance of ";
     }
 }


783) /home/barney/projects/matchbot/src/Domain/Model.php:42    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function __toString() : string
     {
-        return "Instance of " . get_class($this);
+        return get_class($this);
     }
 }


784) /home/barney/projects/matchbot/src/Domain/Model.php:42    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function __toString() : string
     {
-        return "Instance of " . get_class($this);
+        return "Instance of ";
     }
 }


785) /home/barney/projects/matchbot/src/Domain/SalesforceProxyRepository.php:47    [M] Throw_

--- Original
+++ New
@@ @@
     protected function getClient() : Client\Common
     {
         if (!$this->client) {
-            throw new \LogicException('Set a Client in DI config for this Repository to sync data');
+            new \LogicException('Set a Client in DI config for this Repository to sync data');
         }
         return $this->client;
     }
 }


786) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxy.php:25    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return DateTime
      */
-    public function getSalesforceLastPull() : ?DateTime
+    protected function getSalesforceLastPull() : ?DateTime
     {
         return $this->salesforceLastPull;
     }


787) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] Concat

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo(get_class($proxy) . 'Updating ' . ' ' . $proxy->getSalesforceId() . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


788) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo(get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


789) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . ' ' . $proxy->getSalesforceId() . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


790) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] Concat

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . ' ' . get_class($proxy) . $proxy->getSalesforceId() . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


791) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . get_class($proxy) . $proxy->getSalesforceId() . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


792) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] Concat

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . get_class($proxy) . $proxy->getSalesforceId() . ' ' . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


793) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . get_class($proxy) . ' ' . '...');
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


794) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] Concat

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . get_class($proxy) . ' ' . '...' . $proxy->getSalesforceId());
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


795) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


796) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:39    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // Make sure we update existing object if passed in a partial copy and we already have that Salesforce object
         // persisted, otherwise we'll try to insert a duplicate and get an ORM crash.
         if ($proxy->hasBeenPersisted() && ($existingProxy = $this->findOneBy(['salesforceId' => $proxy->getSalesforceId()]))) {
-            $this->logInfo('Updating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId() . '...');
+            
             $proxy = $existingProxy;
         } else {
             $this->logInfo('Creating ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());


797) /home/barney/projects/matchbot/src/Domain/SalesforceReadProxyRepository.php:49    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $proxy->setSalesforceLastPull(new DateTime('now'));
         $this->getEntityManager()->persist($proxy);
         if ($autoSave) {
-            $this->getEntityManager()->flush();
+            
         }
         $this->logInfo('Done persisting ' . get_class($proxy) . ' ' . $proxy->getSalesforceId());
         return $proxy;
     }
 }


798) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // This 'pre-`prePush()`' check protects us from trying to save the same Salesforce record twice at once.
         if (!$isNew && $proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_UPDATING) {
-            /**
-             * If we were in the middle of awaiting Salesforce processing of an update
-             * and are asked to push another one, do nothing except flag that this happened.
-             * We can return immediately and then:
-             * * the already in-flight update will finish up by setting the status back to
-             *   'pending-update' instead of 'complete' – see postPush().
-             * * the scheduled PushDonations command will pick up pushing the data on a delay.
-             *   In the rare case that the new update contained different data, it will get
-             *   synced to Salesforce at the point.
-             * @see SalesforceWriteProxyRepository::postPush()
-             * @see PushDonations
-             */
-            $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
+            
             $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value


799) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] Concat

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo(get_class($proxy) . 'Queued extra update for ' . ' ' . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


800) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo(get_class($proxy) . ' ' . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


801) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo('Queued extra update for ' . ' ' . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


802) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] Concat

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo('Queued extra update for ' . ' ' . get_class($proxy) . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


803) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo('Queued extra update for ' . get_class($proxy) . $proxy->getId());
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


804) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] Concat

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo('Queued extra update for ' . get_class($proxy) . $proxy->getId() . ' ');
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


805) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ');
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


806) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
              * @see PushDonations
              */
             $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE);
-            $this->logInfo('Queued extra update for ' . get_class($proxy) . ' ' . $proxy->getId());
+            
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.


807) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:41    [M] TrueValue

--- Original
+++ New
@@ @@
             // This is the best we can do in this scenario while awaiting the first Salesforce response,
             // and by returning early we ensure postPush() is not called. So as a summary return value
             // we can safely treat this as successful.
-            return true;
+            return false;
         }
         $this->logInfo(($isNew ? 'Pushing ' : 'Updating ') . get_class($proxy) . ' ' . $proxy->getId() . '...');
         $this->prePush($proxy, $isNew);


808) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:109    [M] DecrementInteger

--- Original
+++ New
@@ @@
      * @param int $limit    Maximum of each type of pending object to process
      * @return int  Number of objects pushed
      */
-    public function pushSalesforcePending(int $limit = 200) : int
+    public function pushSalesforcePending(int $limit = 199) : int
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {


809) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:109    [M] IncrementInteger

--- Original
+++ New
@@ @@
      * @param int $limit    Maximum of each type of pending object to process
      * @return int  Number of objects pushed
      */
-    public function pushSalesforcePending(int $limit = 200) : int
+    public function pushSalesforcePending(int $limit = 201) : int
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {


810) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:109    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @param int $limit    Maximum of each type of pending object to process
      * @return int  Number of objects pushed
      */
-    public function pushSalesforcePending(int $limit = 200) : int
+    protected function pushSalesforcePending(int $limit = 200) : int
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {


811) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:112    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
      */
     public function pushSalesforcePending(int $limit = 200) : int
     {
-        $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
+        $proxiesToCreate = $this->findBy([], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {
             $this->push($proxy, true);
         }


812) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:113    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
      */
     public function pushSalesforcePending(int $limit = 200) : int
     {
-        $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
+        $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], [], $limit);
         foreach ($proxiesToCreate as $proxy) {
             $this->push($proxy, true);
         }


813) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:117    [M] Foreach_

--- Original
+++ New
@@ @@
     public function pushSalesforcePending(int $limit = 200) : int
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
-        foreach ($proxiesToCreate as $proxy) {
+        foreach (array() as $proxy) {
             $this->push($proxy, true);
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);


814) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:118    [M] TrueValue

--- Original
+++ New
@@ @@
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {
-            $this->push($proxy, true);
+            $this->push($proxy, false);
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToUpdate as $proxy) {


815) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:118    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $proxiesToCreate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToCreate as $proxy) {
-            $this->push($proxy, true);
+            
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToUpdate as $proxy) {


816) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:122    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         foreach ($proxiesToCreate as $proxy) {
             $this->push($proxy, true);
         }
-        $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
+        $proxiesToUpdate = $this->findBy([], ['id' => 'ASC'], $limit);
         foreach ($proxiesToUpdate as $proxy) {
             $this->push($proxy, false);
         }


817) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:123    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         foreach ($proxiesToCreate as $proxy) {
             $this->push($proxy, true);
         }
-        $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
+        $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], [], $limit);
         foreach ($proxiesToUpdate as $proxy) {
             $this->push($proxy, false);
         }


818) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:127    [M] Foreach_

--- Original
+++ New
@@ @@
             $this->push($proxy, true);
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
-        foreach ($proxiesToUpdate as $proxy) {
+        foreach (array() as $proxy) {
             $this->push($proxy, false);
         }
         return count($proxiesToCreate) + count($proxiesToUpdate);


819) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:128    [M] FalseValue

--- Original
+++ New
@@ @@
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToUpdate as $proxy) {
-            $this->push($proxy, false);
+            $this->push($proxy, true);
         }
         return count($proxiesToCreate) + count($proxiesToUpdate);
     }


820) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:128    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         $proxiesToUpdate = $this->findBy(['salesforcePushStatus' => SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE], ['id' => 'ASC'], $limit);
         foreach ($proxiesToUpdate as $proxy) {
-            $this->push($proxy, false);
+            
         }
         return count($proxiesToCreate) + count($proxiesToUpdate);
     }


821) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:131    [M] Plus

--- Original
+++ New
@@ @@
         foreach ($proxiesToUpdate as $proxy) {
             $this->push($proxy, false);
         }
-        return count($proxiesToCreate) + count($proxiesToUpdate);
+        return count($proxiesToCreate) - count($proxiesToUpdate);
     }
     protected function prePush(SalesforceWriteProxy $proxy, bool $isNew) : void
     {


822) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:152    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if ($success) {
             $proxy->setSalesforceLastPush(new DateTime('now'));
             if ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE && $proxy->hasPostCreateUpdates()) {
-                $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
+                
                 $shouldRePush = true;
             } elseif ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE) {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);


823) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:153    [M] TrueValue

--- Original
+++ New
@@ @@
             $proxy->setSalesforceLastPush(new DateTime('now'));
             if ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_CREATE && $proxy->hasPostCreateUpdates()) {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
-                $shouldRePush = true;
+                $shouldRePush = false;
             } elseif ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE) {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                 $this->logInfo(sprintf('... marking for additional later push %s %d: SF ID %s', get_class($proxy), $proxy->getId(), $proxy->getSalesforceId()));


824) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:158    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                 $shouldRePush = true;
             } elseif ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE) {
-                $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
+                
                 $this->logInfo(sprintf('... marking for additional later push %s %d: SF ID %s', get_class($proxy), $proxy->getId(), $proxy->getSalesforceId()));
             } else {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);


825) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:159    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $shouldRePush = true;
             } elseif ($proxy->getSalesforcePushStatus() === SalesforceWriteProxy::PUSH_STATUS_PENDING_ADDITIONAL_UPDATE) {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
-                $this->logInfo(sprintf('... marking for additional later push %s %d: SF ID %s', get_class($proxy), $proxy->getId(), $proxy->getSalesforceId()));
+                
             } else {
                 $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
             }


826) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:172    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $this->logInfo('... pushed ' . get_class($proxy) . " {$proxy->getId()}: SF ID {$proxy->getSalesforceId()}");
             if ($shouldRePush) {
                 if ($this->doUpdate($proxy)) {
-                    // Make sure *not* to call push() again to avoid doing this recursively!
-                    $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
+                    
                     $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);


827) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] Concat

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    $this->logInfo(get_class($proxy) . '... plus interim updates for ' . " {$proxy->getId()}");
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


828) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    $this->logInfo(get_class($proxy) . " {$proxy->getId()}");
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


829) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    $this->logInfo('... plus interim updates for ' . " {$proxy->getId()}");
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


830) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] Concat

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    $this->logInfo('... plus interim updates for ' . " {$proxy->getId()}" . get_class($proxy));
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


831) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    $this->logInfo('... plus interim updates for ' . get_class($proxy));
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


832) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:173    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 if ($this->doUpdate($proxy)) {
                     // Make sure *not* to call push() again to avoid doing this recursively!
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
-                    $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
+                    
                 } else {
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));


833) /home/barney/projects/matchbot/src/Domain/SalesforceWriteProxyRepository.php:175    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_COMPLETE);
                     $this->logInfo('... plus interim updates for ' . get_class($proxy) . " {$proxy->getId()}");
                 } else {
-                    $proxy->setSalesforcePushStatus(SalesforceWriteProxy::PUSH_STATUS_PENDING_UPDATE);
+                    
                     $this->logError(sprintf('... with error on interim updates for %s %d', get_class($proxy), $proxy->getId()));
                 }
             }


834) /home/barney/projects/matchbot/src/Domain/TimestampsTrait.php:41    [M] PublicVisibility

--- Original
+++ New
@@ @@
      * @psalm-suppress PossiblyUnusedMethod
      * @ORM\PreUpdate Set updated timestamp
      */
-    public function updatedNow() : void
+    protected function updatedNow() : void
     {
         $this->updatedAt = new \DateTime('now');
     }


835) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


836) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


837) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


838) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


839) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


840) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE Charity (id INT UNSIGNED AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_4CC08E82D8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');


841) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE Campaign (id INT UNSIGNED AUTO_INCREMENT NOT NULL, charity_id INT UNSIGNED DEFAULT NULL, name VARCHAR(255) NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME NOT NULL, isMatched TINYINT(1) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_E663708BD8961D21 (salesforceId), INDEX IDX_E663708BF5C97E37 (charity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');


842) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE Fund (id INT UNSIGNED AUTO_INCREMENT NOT NULL, amount NUMERIC(18, 2) NOT NULL, name VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, salesforceLastPull DATETIME DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, fundType VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_7CA0912ED8961D21 (salesforceId), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');


843) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE FundingWithdrawal (id INT UNSIGNED AUTO_INCREMENT NOT NULL, donation_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_5C8EAC124DC1279C (donation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');


844) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE CampaignFunding (id INT UNSIGNED AUTO_INCREMENT NOT NULL, fund_id INT UNSIGNED DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, amountAvailable NUMERIC(18, 2) NOT NULL, allocationOrder INT NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, INDEX IDX_B00548FA25A38F89 (fund_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');


845) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE Campaign_CampaignFunding (campaignfunding_id INT UNSIGNED NOT NULL, campaign_id INT UNSIGNED NOT NULL, INDEX IDX_3364399584C3B9E4 (campaignfunding_id), INDEX IDX_33643995F639F774 (campaign_id), PRIMARY KEY(campaignfunding_id, campaign_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
-        $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
+        
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_33643995F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');


846) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('CREATE TABLE Donation (id INT UNSIGNED AUTO_INCREMENT NOT NULL, campaign_id INT UNSIGNED DEFAULT NULL, uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:uuid)\', transactionId VARCHAR(255) DEFAULT NULL, amount NUMERIC(18, 2) NOT NULL, donationStatus VARCHAR(255) NOT NULL, charityComms TINYINT(1) NOT NULL, giftAid TINYINT(1) NOT NULL, tbgComms TINYINT(1) NOT NULL, donorCountryCode VARCHAR(2) DEFAULT NULL, donorEmailAddress VARCHAR(255) DEFAULT NULL, donorFirstName VARCHAR(255) DEFAULT NULL, donorLastName VARCHAR(255) DEFAULT NULL, donorPostalAddress VARCHAR(255) DEFAULT NULL, donorTitle VARCHAR(255) DEFAULT NULL, salesforceLastPush DATETIME DEFAULT NULL, salesforcePushStatus VARCHAR(255) NOT NULL, salesforceId VARCHAR(18) DEFAULT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL, UNIQUE INDEX UNIQ_C893E3F6D17F50A6 (uuid), UNIQUE INDEX UNIQ_C893E3F6C2F43114 (transactionId), UNIQUE INDEX UNIQ_C893E3F6D8961D21 (salesforceId), INDEX IDX_C893E3F6F639F774 (campaign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
-        $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
+        
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_33643995F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
         $this->addSql('ALTER TABLE Donation ADD CONSTRAINT FK_C893E3F6F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');


847) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign ADD CONSTRAINT FK_E663708BF5C97E37 FOREIGN KEY (charity_id) REFERENCES Charity (id)');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
-        $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');
+        
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_33643995F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
         $this->addSql('ALTER TABLE Donation ADD CONSTRAINT FK_C893E3F6F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
     }


848) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC124DC1279C FOREIGN KEY (donation_id) REFERENCES Donation (id)');
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');
-        $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_33643995F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
+        
         $this->addSql('ALTER TABLE Donation ADD CONSTRAINT FK_C893E3F6F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
     }
     public function down(Schema $schema) : void


849) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE CampaignFunding ADD CONSTRAINT FK_B00548FA25A38F89 FOREIGN KEY (fund_id) REFERENCES Fund (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_3364399584C3B9E4 FOREIGN KEY (campaignfunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding ADD CONSTRAINT FK_33643995F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
-        $this->addSql('ALTER TABLE Donation ADD CONSTRAINT FK_C893E3F6F639F774 FOREIGN KEY (campaign_id) REFERENCES Campaign (id)');
+        
     }
     public function down(Schema $schema) : void
     {


850) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:43    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');


851) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');


852) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
+        
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');


853) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:46    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
-        $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
+        
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');


854) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:47    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
-        $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
+        
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');


855) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:48    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign DROP FOREIGN KEY FK_E663708BF5C97E37');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
-        $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
+        
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
         $this->addSql('DROP TABLE Charity');


856) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:49    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_33643995F639F774');
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
-        $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
         $this->addSql('DROP TABLE Charity');
         $this->addSql('DROP TABLE Campaign');


857) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:50    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Donation DROP FOREIGN KEY FK_C893E3F6F639F774');
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
-        $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
+        
         $this->addSql('DROP TABLE Charity');
         $this->addSql('DROP TABLE Campaign');
         $this->addSql('DROP TABLE Fund');


858) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:51    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE CampaignFunding DROP FOREIGN KEY FK_B00548FA25A38F89');
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
-        $this->addSql('DROP TABLE Charity');
+        
         $this->addSql('DROP TABLE Campaign');
         $this->addSql('DROP TABLE Fund');
         $this->addSql('DROP TABLE FundingWithdrawal');


859) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign_CampaignFunding DROP FOREIGN KEY FK_3364399584C3B9E4');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
         $this->addSql('DROP TABLE Charity');
-        $this->addSql('DROP TABLE Campaign');
+        
         $this->addSql('DROP TABLE Fund');
         $this->addSql('DROP TABLE FundingWithdrawal');
         $this->addSql('DROP TABLE CampaignFunding');


860) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:53    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC124DC1279C');
         $this->addSql('DROP TABLE Charity');
         $this->addSql('DROP TABLE Campaign');
-        $this->addSql('DROP TABLE Fund');
+        
         $this->addSql('DROP TABLE FundingWithdrawal');
         $this->addSql('DROP TABLE CampaignFunding');
         $this->addSql('DROP TABLE Campaign_CampaignFunding');


861) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:54    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('DROP TABLE Charity');
         $this->addSql('DROP TABLE Campaign');
         $this->addSql('DROP TABLE Fund');
-        $this->addSql('DROP TABLE FundingWithdrawal');
+        
         $this->addSql('DROP TABLE CampaignFunding');
         $this->addSql('DROP TABLE Campaign_CampaignFunding');
         $this->addSql('DROP TABLE Donation');
     }
 }


862) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:55    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('DROP TABLE Campaign');
         $this->addSql('DROP TABLE Fund');
         $this->addSql('DROP TABLE FundingWithdrawal');
-        $this->addSql('DROP TABLE CampaignFunding');
+        
         $this->addSql('DROP TABLE Campaign_CampaignFunding');
         $this->addSql('DROP TABLE Donation');
     }
 }


863) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:56    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('DROP TABLE Fund');
         $this->addSql('DROP TABLE FundingWithdrawal');
         $this->addSql('DROP TABLE CampaignFunding');
-        $this->addSql('DROP TABLE Campaign_CampaignFunding');
+        
         $this->addSql('DROP TABLE Donation');
     }
 }


864) /home/barney/projects/matchbot/src/Migrations/Version20191109151808.php:57    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('DROP TABLE FundingWithdrawal');
         $this->addSql('DROP TABLE CampaignFunding');
         $this->addSql('DROP TABLE Campaign_CampaignFunding');
-        $this->addSql('DROP TABLE Donation');
+        
     }
 }


865) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD donateLinkId VARCHAR(255) NOT NULL');
     }
     public function down(Schema $schema) : void


866) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity ADD donateLinkId VARCHAR(255) NOT NULL');
     }
     public function down(Schema $schema) : void


867) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity ADD donateLinkId VARCHAR(255) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


868) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity DROP donateLinkId');
     }
 }


869) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity DROP donateLinkId');
     }
 }


870) /home/barney/projects/matchbot/src/Migrations/Version20191109215947.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity DROP donateLinkId');
+        
     }
 }


871) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD campaignFunding_id INT UNSIGNED DEFAULT NULL');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC12CB9EBA34 FOREIGN KEY (campaignFunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('CREATE INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal (campaignFunding_id)');


872) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal ADD campaignFunding_id INT UNSIGNED DEFAULT NULL');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC12CB9EBA34 FOREIGN KEY (campaignFunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('CREATE INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal (campaignFunding_id)');


873) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE FundingWithdrawal ADD campaignFunding_id INT UNSIGNED DEFAULT NULL');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC12CB9EBA34 FOREIGN KEY (campaignFunding_id) REFERENCES CampaignFunding (id)');
         $this->addSql('CREATE INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal (campaignFunding_id)');
     }


874) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD campaignFunding_id INT UNSIGNED DEFAULT NULL');
-        $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC12CB9EBA34 FOREIGN KEY (campaignFunding_id) REFERENCES CampaignFunding (id)');
+        
         $this->addSql('CREATE INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal (campaignFunding_id)');
     }
     public function down(Schema $schema) : void


875) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD campaignFunding_id INT UNSIGNED DEFAULT NULL');
         $this->addSql('ALTER TABLE FundingWithdrawal ADD CONSTRAINT FK_5C8EAC12CB9EBA34 FOREIGN KEY (campaignFunding_id) REFERENCES CampaignFunding (id)');
-        $this->addSql('CREATE INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal (campaignFunding_id)');
+        
     }
     public function down(Schema $schema) : void
     {


876) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:33    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC12CB9EBA34');
         $this->addSql('DROP INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP campaignFunding_id');
     }
 }


877) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC12CB9EBA34');
         $this->addSql('DROP INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP campaignFunding_id');
     }
 }


878) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC12CB9EBA34');
+        
         $this->addSql('DROP INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP campaignFunding_id');
     }
 }


879) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC12CB9EBA34');
-        $this->addSql('DROP INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal');
+        
         $this->addSql('ALTER TABLE FundingWithdrawal DROP campaignFunding_id');
     }
 }


880) /home/barney/projects/matchbot/src/Migrations/Version20191110112409.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE FundingWithdrawal DROP FOREIGN KEY FK_5C8EAC12CB9EBA34');
         $this->addSql('DROP INDEX IDX_5C8EAC12CB9EBA34 ON FundingWithdrawal');
-        $this->addSql('ALTER TABLE FundingWithdrawal DROP campaignFunding_id');
+        
     }
 }


881) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP donorTitle');
     }
     public function down(Schema $schema) : void


882) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP donorTitle');
     }
     public function down(Schema $schema) : void


883) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP donorTitle');
+        
     }
     public function down(Schema $schema) : void
     {


884) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD donorTitle VARCHAR(255) CHARACTER SET utf8mb4 DEFAULT NULL COLLATE `utf8mb4_unicode_ci`');
     }
 }


885) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD donorTitle VARCHAR(255) CHARACTER SET utf8mb4 DEFAULT NULL COLLATE `utf8mb4_unicode_ci`');
     }
 }


886) /home/barney/projects/matchbot/src/Migrations/Version20191110121708.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD donorTitle VARCHAR(255) CHARACTER SET utf8mb4 DEFAULT NULL COLLATE `utf8mb4_unicode_ci`');
+        
     }
 }


887) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE TABLE CommandLockKeys (key_id VARCHAR(64) NOT NULL, key_token VARCHAR(44) NOT NULL, key_expiration INT UNSIGNED NOT NULL, PRIMARY KEY(key_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_bin` ENGINE = InnoDB');
     }
     public function down(Schema $schema) : void


888) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('CREATE TABLE CommandLockKeys (key_id VARCHAR(64) NOT NULL, key_token VARCHAR(44) NOT NULL, key_expiration INT UNSIGNED NOT NULL, PRIMARY KEY(key_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_bin` ENGINE = InnoDB');
     }
     public function down(Schema $schema) : void


889) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('CREATE TABLE CommandLockKeys (key_id VARCHAR(64) NOT NULL, key_token VARCHAR(44) NOT NULL, key_expiration INT UNSIGNED NOT NULL, PRIMARY KEY(key_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_bin` ENGINE = InnoDB');
+        
     }
     public function down(Schema $schema) : void
     {


890) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP TABLE CommandLockKeys');
     }
 }


891) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP TABLE CommandLockKeys');
     }
 }


892) /home/barney/projects/matchbot/src/Migrations/Version20191110162524.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP TABLE CommandLockKeys');
+        
     }
 }


893) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE INDEX available_fundings ON CampaignFunding (amountAvailable, allocationOrder, id)');
         $this->addSql('CREATE INDEX date_and_status ON Donation (createdAt, donationStatus)');
         $this->addSql('CREATE INDEX salesforcePushStatus ON Donation (salesforcePushStatus)');


894) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('CREATE INDEX available_fundings ON CampaignFunding (amountAvailable, allocationOrder, id)');
         $this->addSql('CREATE INDEX date_and_status ON Donation (createdAt, donationStatus)');
         $this->addSql('CREATE INDEX salesforcePushStatus ON Donation (salesforcePushStatus)');


895) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('CREATE INDEX available_fundings ON CampaignFunding (amountAvailable, allocationOrder, id)');
+        
         $this->addSql('CREATE INDEX date_and_status ON Donation (createdAt, donationStatus)');
         $this->addSql('CREATE INDEX salesforcePushStatus ON Donation (salesforcePushStatus)');
     }


896) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE INDEX available_fundings ON CampaignFunding (amountAvailable, allocationOrder, id)');
-        $this->addSql('CREATE INDEX date_and_status ON Donation (createdAt, donationStatus)');
+        
         $this->addSql('CREATE INDEX salesforcePushStatus ON Donation (salesforcePushStatus)');
     }
     public function down(Schema $schema) : void


897) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('CREATE INDEX available_fundings ON CampaignFunding (amountAvailable, allocationOrder, id)');
         $this->addSql('CREATE INDEX date_and_status ON Donation (createdAt, donationStatus)');
-        $this->addSql('CREATE INDEX salesforcePushStatus ON Donation (salesforcePushStatus)');
+        
     }
     public function down(Schema $schema) : void
     {


898) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX available_fundings ON CampaignFunding');
         $this->addSql('DROP INDEX date_and_status ON Donation');
         $this->addSql('DROP INDEX salesforcePushStatus ON Donation');
     }
 }


899) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP INDEX available_fundings ON CampaignFunding');
         $this->addSql('DROP INDEX date_and_status ON Donation');
         $this->addSql('DROP INDEX salesforcePushStatus ON Donation');
     }
 }


900) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP INDEX available_fundings ON CampaignFunding');
+        
         $this->addSql('DROP INDEX date_and_status ON Donation');
         $this->addSql('DROP INDEX salesforcePushStatus ON Donation');
     }
 }


901) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX available_fundings ON CampaignFunding');
-        $this->addSql('DROP INDEX date_and_status ON Donation');
+        
         $this->addSql('DROP INDEX salesforcePushStatus ON Donation');
     }
 }


902) /home/barney/projects/matchbot/src/Migrations/Version20191113083835.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX available_fundings ON CampaignFunding');
         $this->addSql('DROP INDEX date_and_status ON Donation');
-        $this->addSql('DROP INDEX salesforcePushStatus ON Donation');
+        
     }
 }


903) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql("ALTER TABLE Donation ADD tipAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
     }
     public function down(Schema $schema) : void


904) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql("ALTER TABLE Donation ADD tipAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
     }
     public function down(Schema $schema) : void


905) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql("ALTER TABLE Donation ADD tipAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
+        
     }
     public function down(Schema $schema) : void
     {


906) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:30    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP tipAmount');
     }
 }


907) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP tipAmount');
     }
 }


908) /home/barney/projects/matchbot/src/Migrations/Version20191119154404.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP tipAmount');
+        
     }
 }


909) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


910) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


911) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


912) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
     }
 }


913) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
     }
 }


914) /home/barney/projects/matchbot/src/Migrations/Version20191126051351.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE tipAmount tipAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
+        
     }
 }


915) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // Migration modified to first set up existing donations with
         // psp = 'enthuse'
         $this->addSql("ALTER TABLE Donation ADD psp VARCHAR(20) DEFAULT 'enthuse', ADD clientSecret VARCHAR(255) DEFAULT NULL");


916) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // Migration modified to first set up existing donations with
         // psp = 'enthuse'
         $this->addSql("ALTER TABLE Donation ADD psp VARCHAR(20) DEFAULT 'enthuse', ADD clientSecret VARCHAR(255) DEFAULT NULL");


917) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        // Migration modified to first set up existing donations with
-        // psp = 'enthuse'
-        $this->addSql("ALTER TABLE Donation ADD psp VARCHAR(20) DEFAULT 'enthuse', ADD clientSecret VARCHAR(255) DEFAULT NULL");
+        
         // Once this change is done, remove the psp default and make psp
         // non-nullable going forward.
         $this->addSql('ALTER TABLE Donation CHANGE psp psp VARCHAR(20) NOT NULL');


918) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // Migration modified to first set up existing donations with
         // psp = 'enthuse'
         $this->addSql("ALTER TABLE Donation ADD psp VARCHAR(20) DEFAULT 'enthuse', ADD clientSecret VARCHAR(255) DEFAULT NULL");
-        // Once this change is done, remove the psp default and make psp
-        // non-nullable going forward.
-        $this->addSql('ALTER TABLE Donation CHANGE psp psp VARCHAR(20) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


919) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:35    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP psp, DROP clientSecret');
     }
 }


920) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP psp, DROP clientSecret');
     }
 }


921) /home/barney/projects/matchbot/src/Migrations/Version20200713104818.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP psp, DROP clientSecret');
+        
     }
 }


922) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD stripeAccountId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E8293A8A818 ON Charity (stripeAccountId)');
     }


923) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity ADD stripeAccountId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E8293A8A818 ON Charity (stripeAccountId)');
     }


924) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity ADD stripeAccountId VARCHAR(255) DEFAULT NULL');
+        
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E8293A8A818 ON Charity (stripeAccountId)');
     }
     public function down(Schema $schema) : void


925) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD stripeAccountId VARCHAR(255) DEFAULT NULL');
-        $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E8293A8A818 ON Charity (stripeAccountId)');
+        
     }
     public function down(Schema $schema) : void
     {


926) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:30    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_4CC08E8293A8A818 ON Charity');
         $this->addSql('ALTER TABLE Charity DROP stripeAccountId');
     }
 }


927) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP INDEX UNIQ_4CC08E8293A8A818 ON Charity');
         $this->addSql('ALTER TABLE Charity DROP stripeAccountId');
     }
 }


928) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP INDEX UNIQ_4CC08E8293A8A818 ON Charity');
+        
         $this->addSql('ALTER TABLE Charity DROP stripeAccountId');
     }
 }


929) /home/barney/projects/matchbot/src/Migrations/Version20200720102604.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_4CC08E8293A8A818 ON Charity');
-        $this->addSql('ALTER TABLE Charity DROP stripeAccountId');
+        
     }
 }


930) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) DEFAULT NULL, CHANGE giftAid giftAid TINYINT(1) DEFAULT NULL, CHANGE tbgComms tbgComms TINYINT(1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


931) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) DEFAULT NULL, CHANGE giftAid giftAid TINYINT(1) DEFAULT NULL, CHANGE tbgComms tbgComms TINYINT(1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


932) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) DEFAULT NULL, CHANGE giftAid giftAid TINYINT(1) DEFAULT NULL, CHANGE tbgComms tbgComms TINYINT(1) DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


933) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) NOT NULL, CHANGE giftAid giftAid TINYINT(1) NOT NULL, CHANGE tbgComms tbgComms TINYINT(1) NOT NULL');
     }
 }


934) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) NOT NULL, CHANGE giftAid giftAid TINYINT(1) NOT NULL, CHANGE tbgComms tbgComms TINYINT(1) NOT NULL');
     }
 }


935) /home/barney/projects/matchbot/src/Migrations/Version20200804150108.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE charityComms charityComms TINYINT(1) NOT NULL, CHANGE giftAid giftAid TINYINT(1) NOT NULL, CHANGE tbgComms tbgComms TINYINT(1) NOT NULL');
+        
     }
 }


936) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD donorHomeAddressLine1 VARCHAR(255) DEFAULT NULL, ADD donorHomePostcode VARCHAR(255) DEFAULT NULL, ADD tipGiftAid TINYINT(1) DEFAULT NULL');
         $this->addSql('UPDATE Donation SET tipGiftAid = giftAid WHERE tipGiftAid IS NULL');
     }


937) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD donorHomeAddressLine1 VARCHAR(255) DEFAULT NULL, ADD donorHomePostcode VARCHAR(255) DEFAULT NULL, ADD tipGiftAid TINYINT(1) DEFAULT NULL');
         $this->addSql('UPDATE Donation SET tipGiftAid = giftAid WHERE tipGiftAid IS NULL');
     }


938) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD donorHomeAddressLine1 VARCHAR(255) DEFAULT NULL, ADD donorHomePostcode VARCHAR(255) DEFAULT NULL, ADD tipGiftAid TINYINT(1) DEFAULT NULL');
+        
         $this->addSql('UPDATE Donation SET tipGiftAid = giftAid WHERE tipGiftAid IS NULL');
     }
     public function down(Schema $schema) : void


939) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD donorHomeAddressLine1 VARCHAR(255) DEFAULT NULL, ADD donorHomePostcode VARCHAR(255) DEFAULT NULL, ADD tipGiftAid TINYINT(1) DEFAULT NULL');
-        $this->addSql('UPDATE Donation SET tipGiftAid = giftAid WHERE tipGiftAid IS NULL');
+        
     }
     public function down(Schema $schema) : void
     {


940) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:30    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP donorHomeAddressLine1, DROP donorHomePostcode, DROP tipGiftAid');
     }
 }


941) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP donorHomeAddressLine1, DROP donorHomePostcode, DROP tipGiftAid');
     }
 }


942) /home/barney/projects/matchbot/src/Migrations/Version20200804164545.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP donorHomeAddressLine1, DROP donorHomePostcode, DROP tipGiftAid');
+        
     }
 }


943) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD chargeId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6402C829F ON Donation (chargeId)');
     }


944) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD chargeId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6402C829F ON Donation (chargeId)');
     }


945) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD chargeId VARCHAR(255) DEFAULT NULL');
+        
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6402C829F ON Donation (chargeId)');
     }
     public function down(Schema $schema) : void


946) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD chargeId VARCHAR(255) DEFAULT NULL');
-        $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6402C829F ON Donation (chargeId)');
+        
     }
     public function down(Schema $schema) : void
     {


947) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:30    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_C893E3F6402C829F ON Donation');
         $this->addSql('ALTER TABLE Donation DROP chargeId');
     }
 }


948) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP INDEX UNIQ_C893E3F6402C829F ON Donation');
         $this->addSql('ALTER TABLE Donation DROP chargeId');
     }
 }


949) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP INDEX UNIQ_C893E3F6402C829F ON Donation');
+        
         $this->addSql('ALTER TABLE Donation DROP chargeId');
     }
 }


950) /home/barney/projects/matchbot/src/Migrations/Version20200826135513.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_C893E3F6402C829F ON Donation');
-        $this->addSql('ALTER TABLE Donation DROP chargeId');
+        
     }
 }


951) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD championComms TINYINT(1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


952) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD championComms TINYINT(1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


953) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD championComms TINYINT(1) DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


954) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP championComms');
     }
 }


955) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP championComms');
     }
 }


956) /home/barney/projects/matchbot/src/Migrations/Version20200925104750.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP championComms');
+        
     }
 }


957) /home/barney/projects/matchbot/src/Migrations/Version20201113093420.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


958) /home/barney/projects/matchbot/src/Migrations/Version20201113093420.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


959) /home/barney/projects/matchbot/src/Migrations/Version20201113093420.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 SET salesforcePushStatus = 'not-sent'
 WHERE salesforcePushStatus = 'pending-update' AND (donorFirstName IS NULL OR donorLastName IS NULL)
 EOT;
-        $this->addSql($updateSql);
+        
     }
     public function down(Schema $schema) : void
     {


960) /home/barney/projects/matchbot/src/Migrations/Version20201113093420.php:34    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


961) /home/barney/projects/matchbot/src/Migrations/Version20201113093420.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


962) /home/barney/projects/matchbot/src/Migrations/Version20201114144300.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


963) /home/barney/projects/matchbot/src/Migrations/Version20201114144300.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


964) /home/barney/projects/matchbot/src/Migrations/Version20201114144300.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 SET salesforcePushStatus = 'not-sent'
 WHERE salesforcePushStatus = 'pending-update' AND (donorFirstName IS NULL OR donorLastName IS NULL)
 EOT;
-        $this->addSql($updateSql);
+        
     }
     public function down(Schema $schema) : void
     {


965) /home/barney/projects/matchbot/src/Migrations/Version20201114144300.php:35    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


966) /home/barney/projects/matchbot/src/Migrations/Version20201114144300.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


967) /home/barney/projects/matchbot/src/Migrations/Version20201118043500.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


968) /home/barney/projects/matchbot/src/Migrations/Version20201118043500.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'not-sent'


969) /home/barney/projects/matchbot/src/Migrations/Version20201118043500.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 SET salesforcePushStatus = 'not-sent'
 WHERE salesforcePushStatus = 'pending-update' AND (donorFirstName IS NULL OR donorLastName IS NULL)
 EOT;
-        $this->addSql($updateSql);
+        
     }
     public function down(Schema $schema) : void
     {


970) /home/barney/projects/matchbot/src/Migrations/Version20201118043500.php:35    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


971) /home/barney/projects/matchbot/src/Migrations/Version20201118043500.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


972) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:23    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD charityFee NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


973) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD charityFee NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


974) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this up() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD charityFee NUMERIC(18, 2) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


975) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP charityFee');
     }
 }


976) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP charityFee');
     }
 }


977) /home/barney/projects/matchbot/src/Migrations/Version20201119104427.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // this down() migration is auto-generated, please modify it to your needs
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP charityFee');
+        
     }
 }


978) /home/barney/projects/matchbot/src/Migrations/Version20201119205321.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donationStatus = 'Paid'


979) /home/barney/projects/matchbot/src/Migrations/Version20201119205321.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateSql = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donationStatus = 'Paid'


980) /home/barney/projects/matchbot/src/Migrations/Version20201119205321.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN ('a066900001kFNkrAAG', 'a066900001kFNuSAAW', 'a066900001kFOgNAAW')
 LIMIT 3
 EOT;
-        $this->addSql($updateSql);
+        
     }
     public function down(Schema $schema) : void
     {


981) /home/barney/projects/matchbot/src/Migrations/Version20201119205321.php:35    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


982) /home/barney/projects/matchbot/src/Migrations/Version20201119205321.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


983) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateLongNameDonation = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donorFirstName = 'Joshua'


984) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateLongNameDonation = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donorFirstName = 'Joshua'


985) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = '98712b7b-774f-4d15-890f-34026a17ad86' AND salesforcePushStatus = 'updating'
 LIMIT 1
 EOT;
-        $this->addSql($updateLongNameDonation);
+        
         $updateMysteryStuckDonation = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update'


986) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:38    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = '9ae7719f-e47a-433f-b39f-b159bac52f79' AND salesforcePushStatus = 'updating'
 LIMIT 1
 EOT;
-        $this->addSql($updateMysteryStuckDonation);
+        
     }
     public function down(Schema $schema) : void
     {


987) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:43    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


988) /home/barney/projects/matchbot/src/Migrations/Version20201208101014.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


989) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD charityFeeVat NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


990) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD charityFeeVat NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


991) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD charityFeeVat NUMERIC(18, 2) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


992) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP charityFeeVat');
     }
 }


993) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP charityFeeVat');
     }
 }


994) /home/barney/projects/matchbot/src/Migrations/Version20210122113600.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP charityFeeVat');
+        
     }
 }


995) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD originalPspFee NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


996) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD originalPspFee NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


997) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD originalPspFee NUMERIC(18, 2) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


998) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP originalPspFee');
     }
 }


999) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP originalPspFee');
     }
 }


1000) /home/barney/projects/matchbot/src/Migrations/Version20210311133325.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP originalPspFee');
+        
     }
 }


1001) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // Migration modified to first set up existing data with currencyCode 'GBP'.
         $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');


1002) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // Migration modified to first set up existing data with currencyCode 'GBP'.
         $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');


1003) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        // Migration modified to first set up existing data with currencyCode 'GBP'.
-        $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
+        
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Donation ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');


1004) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // Migration modified to first set up existing data with currencyCode 'GBP'.
         $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
-        $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
+        
         $this->addSql('ALTER TABLE Donation ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         // Once this change is done, remove the defaults.


1005) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // Migration modified to first set up existing data with currencyCode 'GBP'.
         $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
-        $this->addSql('ALTER TABLE Donation ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
+        
         $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         // Once this change is done, remove the defaults.
         $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');


1006) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Donation ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
-        $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
+        
         // Once this change is done, remove the defaults.
         $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE CampaignFunding CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');


1007) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE CampaignFunding ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Donation ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
-        // Once this change is done, remove the defaults.
-        $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
+        
         $this->addSql('ALTER TABLE CampaignFunding CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE Donation CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE Fund CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');


1008) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Fund ADD currencyCode VARCHAR(3) NOT NULL DEFAULT \'GBP\'');
         // Once this change is done, remove the defaults.
         $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
-        $this->addSql('ALTER TABLE CampaignFunding CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
+        
         $this->addSql('ALTER TABLE Donation CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE Fund CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
     }


1009) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         // Once this change is done, remove the defaults.
         $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE CampaignFunding CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
-        $this->addSql('ALTER TABLE Donation CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
+        
         $this->addSql('ALTER TABLE Fund CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
     }
     public function down(Schema $schema) : void


1010) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE CampaignFunding CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
         $this->addSql('ALTER TABLE Donation CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
-        $this->addSql('ALTER TABLE Fund CHANGE currencyCode currencyCode VARCHAR(3) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1011) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:39    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP currencyCode');
         $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
         $this->addSql('ALTER TABLE Donation DROP currencyCode');


1012) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:39    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Campaign DROP currencyCode');
         $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
         $this->addSql('ALTER TABLE Donation DROP currencyCode');


1013) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:41    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Campaign DROP currencyCode');
+        
         $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
         $this->addSql('ALTER TABLE Donation DROP currencyCode');
         $this->addSql('ALTER TABLE Fund DROP currencyCode');
     }
 }


1014) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:42    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP currencyCode');
-        $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
+        
         $this->addSql('ALTER TABLE Donation DROP currencyCode');
         $this->addSql('ALTER TABLE Fund DROP currencyCode');
     }
 }


1015) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP currencyCode');
         $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
-        $this->addSql('ALTER TABLE Donation DROP currencyCode');
+        
         $this->addSql('ALTER TABLE Fund DROP currencyCode');
     }
 }


1016) /home/barney/projects/matchbot/src/Migrations/Version20210408183019.php:44    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql('ALTER TABLE Campaign DROP currencyCode');
         $this->addSql('ALTER TABLE CampaignFunding DROP currencyCode');
         $this->addSql('ALTER TABLE Donation DROP currencyCode');
-        $this->addSql('ALTER TABLE Fund DROP currencyCode');
+        
     }
 }


1017) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign ADD feePercentage NUMERIC(3, 1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


1018) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Campaign ADD feePercentage NUMERIC(3, 1) DEFAULT NULL');
     }
     public function down(Schema $schema) : void


1019) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Campaign ADD feePercentage NUMERIC(3, 1) DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1020) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Campaign DROP feePercentage');
     }
 }


1021) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Campaign DROP feePercentage');
     }
 }


1022) /home/barney/projects/matchbot/src/Migrations/Version20210422163630.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Campaign DROP feePercentage');
+        
     }
 }


1023) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql("ALTER TABLE Donation ADD feeCoverAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
     }
     public function down(Schema $schema) : void


1024) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql("ALTER TABLE Donation ADD feeCoverAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
     }
     public function down(Schema $schema) : void


1025) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql("ALTER TABLE Donation ADD feeCoverAmount NUMERIC(18, 2) DEFAULT '0.00' NOT NULL");
+        
     }
     public function down(Schema $schema) : void
     {


1026) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP feeCoverAmount');
     }
 }


1027) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP feeCoverAmount');
     }
 }


1028) /home/barney/projects/matchbot/src/Migrations/Version20210907103000.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP feeCoverAmount');
+        
     }
 }


1029) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:24    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


1030) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) NOT NULL');
     }
     public function down(Schema $schema) : void


1031) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1032) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:31    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
     }
 }


1033) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
     }
 }


1034) /home/barney/projects/matchbot/src/Migrations/Version20210907110200.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE feeCoverAmount feeCoverAmount NUMERIC(18, 2) DEFAULT \'0.00\' NOT NULL');
+        
     }
 }


1035) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD collectedAt DATETIME NOT NULL, ADD tbgShouldProcessGiftAid TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestQueuedAt TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestFailedAt TINYINT(1) DEFAULT NULL');
         // Set new collectedAt field to the best guess we have at roughly when the donation was completed by
         // the donor – this will be up to a few minutes before the real time for pre-existing donations.


1036) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD collectedAt DATETIME NOT NULL, ADD tbgShouldProcessGiftAid TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestQueuedAt TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestFailedAt TINYINT(1) DEFAULT NULL');
         // Set new collectedAt field to the best guess we have at roughly when the donation was completed by
         // the donor – this will be up to a few minutes before the real time for pre-existing donations.


1037) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD collectedAt DATETIME NOT NULL, ADD tbgShouldProcessGiftAid TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestQueuedAt TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestFailedAt TINYINT(1) DEFAULT NULL');
+        
         // Set new collectedAt field to the best guess we have at roughly when the donation was completed by
         // the donor – this will be up to a few minutes before the real time for pre-existing donations.
         $this->addSql("UPDATE Donation SET collectedAt = createdAt WHERE collectedAt IS NULL AND (donationStatus IN ('Collected', 'Paid'))");


1038) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD collectedAt DATETIME NOT NULL, ADD tbgShouldProcessGiftAid TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestQueuedAt TINYINT(1) DEFAULT NULL, ADD tbgGiftAidRequestFailedAt TINYINT(1) DEFAULT NULL');
-        // Set new collectedAt field to the best guess we have at roughly when the donation was completed by
-        // the donor – this will be up to a few minutes before the real time for pre-existing donations.
-        $this->addSql("UPDATE Donation SET collectedAt = createdAt WHERE collectedAt IS NULL AND (donationStatus IN ('Collected', 'Paid'))");
+        
     }
     public function down(Schema $schema) : void
     {


1039) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:33    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation DROP collectedAt, DROP tbgShouldProcessGiftAid, DROP tbgGiftAidRequestQueuedAt, DROP tbgGiftAidRequestFailedAt');
     }
 }


1040) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation DROP collectedAt, DROP tbgShouldProcessGiftAid, DROP tbgGiftAidRequestQueuedAt, DROP tbgGiftAidRequestFailedAt');
     }
 }


1041) /home/barney/projects/matchbot/src/Migrations/Version20211029152640.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation DROP collectedAt, DROP tbgShouldProcessGiftAid, DROP tbgGiftAidRequestQueuedAt, DROP tbgGiftAidRequestFailedAt');
+        
     }
 }


1042) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD hmrcReferenceNumber VARCHAR(7) DEFAULT NULL, ADD tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E829EF7853B ON Charity (hmrcReferenceNumber)');
         // Set a non-null value for existing charities, without adding a schema `DEFAULT`.


1043) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity ADD hmrcReferenceNumber VARCHAR(7) DEFAULT NULL, ADD tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E829EF7853B ON Charity (hmrcReferenceNumber)');
         // Set a non-null value for existing charities, without adding a schema `DEFAULT`.


1044) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity ADD hmrcReferenceNumber VARCHAR(7) DEFAULT NULL, ADD tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
+        
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E829EF7853B ON Charity (hmrcReferenceNumber)');
         // Set a non-null value for existing charities, without adding a schema `DEFAULT`.
         $this->addSql('UPDATE Charity SET tbgClaimingGiftAid = 0 WHERE tbgClaimingGiftAid IS NULL');


1045) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD hmrcReferenceNumber VARCHAR(7) DEFAULT NULL, ADD tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
-        $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E829EF7853B ON Charity (hmrcReferenceNumber)');
+        
         // Set a non-null value for existing charities, without adding a schema `DEFAULT`.
         $this->addSql('UPDATE Charity SET tbgClaimingGiftAid = 0 WHERE tbgClaimingGiftAid IS NULL');
     }


1046) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity ADD hmrcReferenceNumber VARCHAR(7) DEFAULT NULL, ADD tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_4CC08E829EF7853B ON Charity (hmrcReferenceNumber)');
-        // Set a non-null value for existing charities, without adding a schema `DEFAULT`.
-        $this->addSql('UPDATE Charity SET tbgClaimingGiftAid = 0 WHERE tbgClaimingGiftAid IS NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1047) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:33    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_4CC08E829EF7853B ON Charity');
         $this->addSql('ALTER TABLE Charity DROP hmrcReferenceNumber, DROP tbgClaimingGiftAid');
     }
 }


1048) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP INDEX UNIQ_4CC08E829EF7853B ON Charity');
         $this->addSql('ALTER TABLE Charity DROP hmrcReferenceNumber, DROP tbgClaimingGiftAid');
     }
 }


1049) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP INDEX UNIQ_4CC08E829EF7853B ON Charity');
+        
         $this->addSql('ALTER TABLE Charity DROP hmrcReferenceNumber, DROP tbgClaimingGiftAid');
     }
 }


1050) /home/barney/projects/matchbot/src/Migrations/Version20211029163214.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_4CC08E829EF7853B ON Charity');
-        $this->addSql('ALTER TABLE Charity DROP hmrcReferenceNumber, DROP tbgClaimingGiftAid');
+        
     }
 }


1051) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) NOT NULL');
     }
     public function down(Schema $schema) : void


1052) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) NOT NULL');
     }
     public function down(Schema $schema) : void


1053) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1054) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
     }
 }


1055) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
     }
 }


1056) /home/barney/projects/matchbot/src/Migrations/Version20211029164148.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Charity CHANGE tbgClaimingGiftAid tbgClaimingGiftAid TINYINT(1) DEFAULT NULL');
+        
     }
 }


1057) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME DEFAULT NULL');
     }
     public function down(Schema $schema) : void


1058) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME DEFAULT NULL');
     }
     public function down(Schema $schema) : void


1059) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1060) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:29    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME NOT NULL');
     }
 }


1061) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME NOT NULL');
     }
 }


1062) /home/barney/projects/matchbot/src/Migrations/Version20211029225612.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME NOT NULL');
+        
     }
 }


1063) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateTipPartiallyRefundedDonation = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', tipAmount = 5


1064) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateTipPartiallyRefundedDonation = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', tipAmount = 5


1065) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = '096fe6fd-d8b0-42fd-806f-03bbdc54c092' AND transactionId = 'pi_3K1ZFYKkGuKkxwBN0IPLOiWS'
 LIMIT 1
 EOT;
-        $this->addSql($updateTipPartiallyRefundedDonation);
+        
         $updateDonorGAIncorrectlyClaimed = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', giftAid = 0, tipGiftAid = 0


1066) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:38    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = '2417b8db-89b1-438b-a053-33e77c58303c' AND transactionId = 'pi_3K3zlfKkGuKkxwBN14bQcAKu'
 LIMIT 1
 EOT;
-        $this->addSql($updateDonorGAIncorrectlyClaimed);
+        
     }
     public function down(Schema $schema) : void
     {


1067) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:43    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


1068) /home/barney/projects/matchbot/src/Migrations/Version20211209083200.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


1069) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $updateIncorrectPostcode = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donorHomePostcode = donorPostalAddress


1070) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $updateIncorrectPostcode = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', donorHomePostcode = donorPostalAddress


1071) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:31    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = :uuid AND transactionId = :paymentIntentId
 LIMIT 1
 EOT;
-        $this->addSql($updateIncorrectPostcode, ['uuid' => '4f6804a9-6e2c-46de-9cb4-6bc59c380f90', 'paymentIntentId' => 'pi_3K2RMiKkGuKkxwBN0S5Uy9mP']);
+        $this->addSql($updateIncorrectPostcode, ['paymentIntentId' => 'pi_3K2RMiKkGuKkxwBN0S5Uy9mP']);
         $this->addSql($updateIncorrectPostcode, ['uuid' => 'd957f281-d71b-45ba-8593-cf12f9203d5b', 'paymentIntentId' => 'pi_3K2YigKkGuKkxwBN0re3gWSI']);
         $updateDonorGAIncorrectlyClaimed = <<<EOT
 UPDATE Donation


1072) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = :uuid AND transactionId = :paymentIntentId
 LIMIT 1
 EOT;
-        $this->addSql($updateIncorrectPostcode, ['uuid' => '4f6804a9-6e2c-46de-9cb4-6bc59c380f90', 'paymentIntentId' => 'pi_3K2RMiKkGuKkxwBN0S5Uy9mP']);
+        
         $this->addSql($updateIncorrectPostcode, ['uuid' => 'd957f281-d71b-45ba-8593-cf12f9203d5b', 'paymentIntentId' => 'pi_3K2YigKkGuKkxwBN0re3gWSI']);
         $updateDonorGAIncorrectlyClaimed = <<<EOT
 UPDATE Donation


1073) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:35    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         $this->addSql($updateIncorrectPostcode, ['uuid' => '4f6804a9-6e2c-46de-9cb4-6bc59c380f90', 'paymentIntentId' => 'pi_3K2RMiKkGuKkxwBN0S5Uy9mP']);
-        $this->addSql($updateIncorrectPostcode, ['uuid' => 'd957f281-d71b-45ba-8593-cf12f9203d5b', 'paymentIntentId' => 'pi_3K2YigKkGuKkxwBN0re3gWSI']);
+        $this->addSql($updateIncorrectPostcode, ['paymentIntentId' => 'pi_3K2YigKkGuKkxwBN0re3gWSI']);
         $updateDonorGAIncorrectlyClaimed = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', giftAid = 0, tipGiftAid = 0,


1074) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         $this->addSql($updateIncorrectPostcode, ['uuid' => '4f6804a9-6e2c-46de-9cb4-6bc59c380f90', 'paymentIntentId' => 'pi_3K2RMiKkGuKkxwBN0S5Uy9mP']);
-        $this->addSql($updateIncorrectPostcode, ['uuid' => 'd957f281-d71b-45ba-8593-cf12f9203d5b', 'paymentIntentId' => 'pi_3K2YigKkGuKkxwBN0re3gWSI']);
+        
         $updateDonorGAIncorrectlyClaimed = <<<EOT
 UPDATE Donation
 SET salesforcePushStatus = 'pending-update', giftAid = 0, tipGiftAid = 0,


1075) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:48    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = :uuid AND transactionId = :paymentIntentId
 LIMIT 1
 EOT;
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
+        $this->addSql($updateDonorGAIncorrectlyClaimed, ['paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);


1076) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:48    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE uuid = :uuid AND transactionId = :paymentIntentId
 LIMIT 1
 EOT;
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
+        
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);


1077) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:52    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
+        $this->addSql($updateDonorGAIncorrectlyClaimed, ['paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);


1078) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
+        
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);


1079) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:56    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 EOT;
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
+        $this->addSql($updateDonorGAIncorrectlyClaimed, ['paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
     }


1080) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:56    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 EOT;
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
+        
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
     }


1081) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:60    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
+        $this->addSql($updateDonorGAIncorrectlyClaimed, ['paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
     }
     public function down(Schema $schema) : void


1082) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:60    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'b07e5700-ab97-4fd8-99d7-33c3fd5f0666', 'paymentIntentId' => 'pi_3K2DQDKkGuKkxwBN0rEMw2oz']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
+        
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
     }
     public function down(Schema $schema) : void


1083) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:64    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
+        $this->addSql($updateDonorGAIncorrectlyClaimed, ['paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
     }
     public function down(Schema $schema) : void
     {


1084) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'bd7a0b27-bddf-4728-9e39-facc0f6b4172', 'paymentIntentId' => 'pi_3K3d9dKkGuKkxwBN1Dlln6TX']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => 'fe2c6084-61bc-4d65-b510-95cce859dc24', 'paymentIntentId' => 'pi_3K1WhbKkGuKkxwBN0hXKeHh1']);
         $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '5495a028-742e-4d71-9392-4a3cb722f595', 'paymentIntentId' => 'pi_3K3i7MKkGuKkxwBN1WWThUP3']);
-        $this->addSql($updateDonorGAIncorrectlyClaimed, ['uuid' => '3f79c7ef-d6d1-406f-a2c8-80e006d17312', 'paymentIntentId' => 'pi_3K2YdQKkGuKkxwBN1SJh1OKF']);
+        
     }
     public function down(Schema $schema) : void
     {


1085) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:72    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         // No safe un-fix -> no-op.
     }
 }


1086) /home/barney/projects/matchbot/src/Migrations/Version20220104121300.php:72    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         // No safe un-fix -> no-op.
     }
 }


1087) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD transferId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6AE9826DA ON Donation (transferId)');
     }


1088) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('ALTER TABLE Donation ADD transferId VARCHAR(255) DEFAULT NULL');
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6AE9826DA ON Donation (transferId)');
     }


1089) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('ALTER TABLE Donation ADD transferId VARCHAR(255) DEFAULT NULL');
+        
         $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6AE9826DA ON Donation (transferId)');
     }
     public function down(Schema $schema) : void


1090) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('ALTER TABLE Donation ADD transferId VARCHAR(255) DEFAULT NULL');
-        $this->addSql('CREATE UNIQUE INDEX UNIQ_C893E3F6AE9826DA ON Donation (transferId)');
+        
     }
     public function down(Schema $schema) : void
     {


1091) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:30    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_C893E3F6AE9826DA ON Donation');
         $this->addSql('ALTER TABLE Donation DROP transferId');
     }
 }


1092) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('DROP INDEX UNIQ_C893E3F6AE9826DA ON Donation');
         $this->addSql('ALTER TABLE Donation DROP transferId');
     }
 }


1093) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('DROP INDEX UNIQ_C893E3F6AE9826DA ON Donation');
+        
         $this->addSql('ALTER TABLE Donation DROP transferId');
     }
 }


1094) /home/barney/projects/matchbot/src/Migrations/Version20220104135535.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('DROP INDEX UNIQ_C893E3F6AE9826DA ON Donation');
-        $this->addSql('ALTER TABLE Donation DROP transferId');
+        
     }
 }


1095) /home/barney/projects/matchbot/src/Migrations/Version20220107173738.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation CHANGE tbgGiftAidRequestQueuedAt tbgGiftAidRequestQueuedAt DATETIME DEFAULT NULL, CHANGE tbgGiftAidRequestFailedAt tbgGiftAidRequestFailedAt DATETIME DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1096) /home/barney/projects/matchbot/src/Migrations/Version20220107173738.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation CHANGE tbgGiftAidRequestQueuedAt tbgGiftAidRequestQueuedAt TINYINT(1) DEFAULT NULL, CHANGE tbgGiftAidRequestFailedAt tbgGiftAidRequestFailedAt TINYINT(1) DEFAULT NULL');
+        
     }
 }


1097) /home/barney/projects/matchbot/src/Migrations/Version20220201161400.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1098) /home/barney/projects/matchbot/src/Migrations/Version20220201161400.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1099) /home/barney/projects/matchbot/src/Migrations/Version20220201161400.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1100) /home/barney/projects/matchbot/src/Migrations/Version20220201171800.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1101) /home/barney/projects/matchbot/src/Migrations/Version20220201171800.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1102) /home/barney/projects/matchbot/src/Migrations/Version20220201171800.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1103) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:22    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignId = 3076;
+        $campaignId = 3075;
         $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
         $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
     }


1104) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:22    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignId = 3076;
+        $campaignId = 3077;
         $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
         $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
     }


1105) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $campaignId = 3076;
-        $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
+        
         $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
     }
     public function down(Schema $schema) : void


1106) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:25    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $campaignId = 3076;
-        $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
+        $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
         $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
     }
     public function down(Schema $schema) : void


1107) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $campaignId = 3076;
         $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
-        $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
+        
     }
     public function down(Schema $schema) : void
     {


1108) /home/barney/projects/matchbot/src/Migrations/Version20220308132408.php:32    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     {
         $campaignId = 3076;
         $this->addSql('DELETE FROM Donation WHERE uuid = :uuid AND campaign_id = :campaignId LIMIT 1', ['campaignId' => $campaignId, 'uuid' => '846b5692-4ccb-4e88-9cf3-ea0223951ee7']);
-        $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['campaignId' => $campaignId, 'salesforceId' => 'a0569000029jOkUAAU']);
+        $this->addSql('DELETE FROM Campaign WHERE id = :campaignId AND salesforceId = :salesforceId LIMIT 1', ['salesforceId' => 'a0569000029jOkUAAU']);
     }
     public function down(Schema $schema) : void
     {


1109) /home/barney/projects/matchbot/src/Migrations/Version20220318111320.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-            UPDATE Donation SET tbgShouldProcessGiftAid = 0
-            WHERE campaign_id IN (2078, 2165, 2454) AND tbgShouldProcessGiftAid = 1
-            LIMIT 52
-EOT
-);
+        
     }
     public function down(Schema $schema) : void
     {


1110) /home/barney/projects/matchbot/src/Migrations/Version20220402132026.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation ADD tbgGiftAidRequestConfirmedCompleteAt DATETIME DEFAULT NULL, ADD tbgGiftAidRequestCorrelationId VARCHAR(255) DEFAULT NULL, ADD tbgGiftAidResponseDetail TEXT DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1111) /home/barney/projects/matchbot/src/Migrations/Version20220402132026.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation DROP tbgGiftAidRequestConfirmedCompleteAt, DROP tbgGiftAidRequestCorrelationId, DROP tbgGiftAidResponseDetail');
+        
     }
 }


1112) /home/barney/projects/matchbot/src/Migrations/Version20220402132739.php:22    [M] NotIdentical

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() === 'mysql', 'Migration can only be executed safely on \'mysql\'.');
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1113) /home/barney/projects/matchbot/src/Migrations/Version20220402132739.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+        
         $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
     }
     public function down(Schema $schema) : void


1114) /home/barney/projects/matchbot/src/Migrations/Version20220402132739.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
-        $this->addSql('UPDATE Donation SET tbgGiftAidRequestQueuedAt = NULL WHERE tbgGiftAidRequestQueuedAt IS NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1115) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:23    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $donationIdsClaimed = ['19b8da6a-0f32-4b00-8212-984ec54d7660', 'e47d0cd9-f8e0-4218-bb35-73b5a57a1ea2', '04361c8c-7b35-4513-8195-673e20efae0f', '6eee4df8-912a-4d08-b872-95a63b853b20', '4e7499bb-7c4f-483a-8851-e91bc5205d59', '3d5748a7-db71-409a-82a5-8ad0e7cabff0', 'c50c3af8-7f4c-4f52-b56f-775e7d2d2bb8', 'a7eb0623-1ba3-46b2-b9ee-734af9fa8cd7', '60344283-1ebd-41d6-bdff-35a411e67e8c', '6091abe0-d06e-4ccf-9a8e-a3b553f7557b'];
+        $donationIdsClaimed = ['e47d0cd9-f8e0-4218-bb35-73b5a57a1ea2', '04361c8c-7b35-4513-8195-673e20efae0f', '6eee4df8-912a-4d08-b872-95a63b853b20', '4e7499bb-7c4f-483a-8851-e91bc5205d59', '3d5748a7-db71-409a-82a5-8ad0e7cabff0', 'c50c3af8-7f4c-4f52-b56f-775e7d2d2bb8', 'a7eb0623-1ba3-46b2-b9ee-734af9fa8cd7', '60344283-1ebd-41d6-bdff-35a411e67e8c', '6091abe0-d06e-4ccf-9a8e-a3b553f7557b'];
         $this->addSql(
             <<<EOT
 UPDATE Donation


1116) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $donationIdsClaimed = ['19b8da6a-0f32-4b00-8212-984ec54d7660', 'e47d0cd9-f8e0-4218-bb35-73b5a57a1ea2', '04361c8c-7b35-4513-8195-673e20efae0f', '6eee4df8-912a-4d08-b872-95a63b853b20', '4e7499bb-7c4f-483a-8851-e91bc5205d59', '3d5748a7-db71-409a-82a5-8ad0e7cabff0', 'c50c3af8-7f4c-4f52-b56f-775e7d2d2bb8', 'a7eb0623-1ba3-46b2-b9ee-734af9fa8cd7', '60344283-1ebd-41d6-bdff-35a411e67e8c', '6091abe0-d06e-4ccf-9a8e-a3b553f7557b'];
-        $this->addSql(
-            <<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestConfirmedCompleteAt = NOW(),
-    tbgGiftAidRequestCorrelationId = :correlationId,
-    tbgGiftAidResponseDetail = :responseDetail
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestConfirmedCompleteAt IS NULL AND
-    tbgGiftAidRequestCorrelationId IS NULL AND
-    uuid IN (:completeUuids)
-LIMIT 10
-EOT
-,
-            ['correlationId' => '6DB2614C26324981B0CB34C19FE6FF00', 'responseDetail' => 'Thank you for your submission', 'completeUuids' => $donationIdsClaimed],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
-        );
+        
         $this->addSQL(
             <<<EOT
 UPDATE Donation


1117) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:49    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 10
 EOT
 ,
-            ['correlationId' => '6DB2614C26324981B0CB34C19FE6FF00', 'responseDetail' => 'Thank you for your submission', 'completeUuids' => $donationIdsClaimed],
+            ['responseDetail' => 'Thank you for your submission', 'completeUuids' => $donationIdsClaimed],
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );


1118) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:55    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 ,
             ['correlationId' => '6DB2614C26324981B0CB34C19FE6FF00', 'responseDetail' => 'Thank you for your submission', 'completeUuids' => $donationIdsClaimed],
             // https://stackoverflow.com/a/36710894/2803757
-            ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
+            ['responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );
         $this->addSQL(
             <<<EOT


1119) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:62    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );
-        $this->addSQL(
-            <<<EOT
-UPDATE Donation
-SET tbgGiftAidRequestQueuedAt = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestConfirmedCompleteAt IS NULL AND
-    tbgGiftAidRequestCorrelationId IS NULL AND
-    uuid NOT IN (:completeUuids)
-LIMIT 10
-EOT
-,
-            ['completeUuids' => $donationIdsClaimed],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['completeUuids' => Connection::PARAM_STR_ARRAY]
-        );
+        
     }
     public function down(Schema $schema) : void
     {


1120) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:72    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 10
 EOT
 ,
-            ['completeUuids' => $donationIdsClaimed],
+            [],
             // https://stackoverflow.com/a/36710894/2803757
             ['completeUuids' => Connection::PARAM_STR_ARRAY]
         );


1121) /home/barney/projects/matchbot/src/Migrations/Version20220404153900.php:76    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 ,
             ['completeUuids' => $donationIdsClaimed],
             // https://stackoverflow.com/a/36710894/2803757
-            ['completeUuids' => Connection::PARAM_STR_ARRAY]
+            []
         );
     }
     public function down(Schema $schema) : void


1122) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:25    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     {
         $correlationId = '8BF8ADF17D304ED7B5032A8692D3B6EC';
         $responseDetail = 'Thank you for your submission';
-        $donationIdsClaimed = ['e7683fa7-8023-4bd8-8698-c9e5c44a926c', '494581a0-b1c5-490f-baa7-18520e45175b', 'c5905292-5d1b-4133-9900-71021acc8db8', '9de39012-8a3d-4707-8825-54916dbc896d', '69137ea5-a6fb-420e-98ce-e86de62c6e83', '087d76f0-f648-4404-bc70-33c15aa0d258', '256e2968-f842-4c11-9d8f-a838a86d3928', 'c5975a71-5cb0-438e-a23e-99d221461ea4', 'ce7d2156-8bb9-4b58-bf9b-e1cac96c2402', '55691f35-a3db-411c-9b79-02c6666debb6'];
+        $donationIdsClaimed = ['494581a0-b1c5-490f-baa7-18520e45175b', 'c5905292-5d1b-4133-9900-71021acc8db8', '9de39012-8a3d-4707-8825-54916dbc896d', '69137ea5-a6fb-420e-98ce-e86de62c6e83', '087d76f0-f648-4404-bc70-33c15aa0d258', '256e2968-f842-4c11-9d8f-a838a86d3928', 'c5975a71-5cb0-438e-a23e-99d221461ea4', 'ce7d2156-8bb9-4b58-bf9b-e1cac96c2402', '55691f35-a3db-411c-9b79-02c6666debb6'];
         $donationIdsQueuedAndNotClaimed = ['e2f3411a-7702-4163-8437-d7394ad2aa17', '84d5072f-f188-45df-af1a-ec6d42ff9057', '631c3152-d275-40cc-916e-ddc92d2ed99c', 'e2e86bad-c4bd-416a-ad10-856f7d87cc1c', '9b931901-a212-42d8-b4e9-2f590c8881dd', '474962fb-72ef-4fba-be9d-d878d83a7c79', 'e73a00e7-bacc-44bb-bc98-4192683dcb99', '35a4bb94-2596-4082-b6d3-cc4cd7698cfc', '958797b9-4558-4f1e-a7a1-bf9abc5bf158', '71f8eaea-c6d1-49a0-b9ae-b95914f3cee1'];
         $this->addSql(
             <<<EOT


1123) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:38    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $correlationId = '8BF8ADF17D304ED7B5032A8692D3B6EC';
         $responseDetail = 'Thank you for your submission';
         $donationIdsClaimed = ['e7683fa7-8023-4bd8-8698-c9e5c44a926c', '494581a0-b1c5-490f-baa7-18520e45175b', 'c5905292-5d1b-4133-9900-71021acc8db8', '9de39012-8a3d-4707-8825-54916dbc896d', '69137ea5-a6fb-420e-98ce-e86de62c6e83', '087d76f0-f648-4404-bc70-33c15aa0d258', '256e2968-f842-4c11-9d8f-a838a86d3928', 'c5975a71-5cb0-438e-a23e-99d221461ea4', 'ce7d2156-8bb9-4b58-bf9b-e1cac96c2402', '55691f35-a3db-411c-9b79-02c6666debb6'];
-        $donationIdsQueuedAndNotClaimed = ['e2f3411a-7702-4163-8437-d7394ad2aa17', '84d5072f-f188-45df-af1a-ec6d42ff9057', '631c3152-d275-40cc-916e-ddc92d2ed99c', 'e2e86bad-c4bd-416a-ad10-856f7d87cc1c', '9b931901-a212-42d8-b4e9-2f590c8881dd', '474962fb-72ef-4fba-be9d-d878d83a7c79', 'e73a00e7-bacc-44bb-bc98-4192683dcb99', '35a4bb94-2596-4082-b6d3-cc4cd7698cfc', '958797b9-4558-4f1e-a7a1-bf9abc5bf158', '71f8eaea-c6d1-49a0-b9ae-b95914f3cee1'];
+        $donationIdsQueuedAndNotClaimed = ['84d5072f-f188-45df-af1a-ec6d42ff9057', '631c3152-d275-40cc-916e-ddc92d2ed99c', 'e2e86bad-c4bd-416a-ad10-856f7d87cc1c', '9b931901-a212-42d8-b4e9-2f590c8881dd', '474962fb-72ef-4fba-be9d-d878d83a7c79', 'e73a00e7-bacc-44bb-bc98-4192683dcb99', '35a4bb94-2596-4082-b6d3-cc4cd7698cfc', '958797b9-4558-4f1e-a7a1-bf9abc5bf158', '71f8eaea-c6d1-49a0-b9ae-b95914f3cee1'];
         $this->addSql(
             <<<EOT
 UPDATE Donation


1124) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:51    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $responseDetail = 'Thank you for your submission';
         $donationIdsClaimed = ['e7683fa7-8023-4bd8-8698-c9e5c44a926c', '494581a0-b1c5-490f-baa7-18520e45175b', 'c5905292-5d1b-4133-9900-71021acc8db8', '9de39012-8a3d-4707-8825-54916dbc896d', '69137ea5-a6fb-420e-98ce-e86de62c6e83', '087d76f0-f648-4404-bc70-33c15aa0d258', '256e2968-f842-4c11-9d8f-a838a86d3928', 'c5975a71-5cb0-438e-a23e-99d221461ea4', 'ce7d2156-8bb9-4b58-bf9b-e1cac96c2402', '55691f35-a3db-411c-9b79-02c6666debb6'];
         $donationIdsQueuedAndNotClaimed = ['e2f3411a-7702-4163-8437-d7394ad2aa17', '84d5072f-f188-45df-af1a-ec6d42ff9057', '631c3152-d275-40cc-916e-ddc92d2ed99c', 'e2e86bad-c4bd-416a-ad10-856f7d87cc1c', '9b931901-a212-42d8-b4e9-2f590c8881dd', '474962fb-72ef-4fba-be9d-d878d83a7c79', 'e73a00e7-bacc-44bb-bc98-4192683dcb99', '35a4bb94-2596-4082-b6d3-cc4cd7698cfc', '958797b9-4558-4f1e-a7a1-bf9abc5bf158', '71f8eaea-c6d1-49a0-b9ae-b95914f3cee1'];
-        $this->addSql(
-            <<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestConfirmedCompleteAt = NOW(),
-    tbgGiftAidRequestCorrelationId = :correlationId,
-    tbgGiftAidResponseDetail = :responseDetail
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestConfirmedCompleteAt IS NULL AND
-    tbgGiftAidRequestCorrelationId IS NULL AND
-    uuid IN (:completeUuids)
-LIMIT 10
-EOT
-,
-            ['correlationId' => $correlationId, 'responseDetail' => $responseDetail, 'completeUuids' => $donationIdsClaimed],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
-        );
+        
         $this->addSQL(
             <<<EOT
 UPDATE Donation


1125) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:64    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 10
 EOT
 ,
-            ['correlationId' => $correlationId, 'responseDetail' => $responseDetail, 'completeUuids' => $donationIdsClaimed],
+            ['responseDetail' => $responseDetail, 'completeUuids' => $donationIdsClaimed],
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );


1126) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:70    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 ,
             ['correlationId' => $correlationId, 'responseDetail' => $responseDetail, 'completeUuids' => $donationIdsClaimed],
             // https://stackoverflow.com/a/36710894/2803757
-            ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
+            ['responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );
         $this->addSQL(
             <<<EOT


1127) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationId' => \PDO::PARAM_STR, 'responseDetail' => \PDO::PARAM_STR, 'completeUuids' => Connection::PARAM_STR_ARRAY]
         );
-        $this->addSQL(
-            <<<EOT
-UPDATE Donation
-SET tbgGiftAidRequestQueuedAt = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestConfirmedCompleteAt IS NULL AND
-    tbgGiftAidRequestCorrelationId IS NULL AND
-    uuid IN (:notCompleteUuids)
-LIMIT 10
-EOT
-,
-            ['notCompleteUuids' => $donationIdsQueuedAndNotClaimed],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['notCompleteUuids' => Connection::PARAM_STR_ARRAY]
-        );
+        
     }
     public function down(Schema $schema) : void
     {


1128) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:87    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 10
 EOT
 ,
-            ['notCompleteUuids' => $donationIdsQueuedAndNotClaimed],
+            [],
             // https://stackoverflow.com/a/36710894/2803757
             ['notCompleteUuids' => Connection::PARAM_STR_ARRAY]
         );


1129) /home/barney/projects/matchbot/src/Migrations/Version20220404165640.php:91    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 ,
             ['notCompleteUuids' => $donationIdsQueuedAndNotClaimed],
             // https://stackoverflow.com/a/36710894/2803757
-            ['notCompleteUuids' => Connection::PARAM_STR_ARRAY]
+            []
         );
     }
     public function down(Schema $schema) : void


1130) /home/barney/projects/matchbot/src/Migrations/Version20220406113351.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET tbgGiftAidRequestQueuedAt = NULL, tbgGiftAidRequestFailedAt = NULL
-WHERE
-      tbgGiftAidRequestQueuedAt IS NOT NULL AND
-      tbgGiftAidRequestConfirmedCompleteAt IS NULL
-LIMIT 543
-EOT
-);
+        
     }
     public function down(Schema $schema) : void
     {


1131) /home/barney/projects/matchbot/src/Migrations/Version20220419180844.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity ADD regulator VARCHAR(4) DEFAULT NULL, ADD regulatorNumber VARCHAR(10) DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1132) /home/barney/projects/matchbot/src/Migrations/Version20220419180844.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity DROP regulator, DROP regulatorNumber');
+        
     }
 }


1133) /home/barney/projects/matchbot/src/Migrations/Version20220421090453.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL
-    AND tbgGiftAidRequestQueuedAt < '2022-04-21 00:00:00'
-EOT
-);
+        
     }
     public function down(Schema $schema) : void
     {


1134) /home/barney/projects/matchbot/src/Migrations/Version20220421121601.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL
-    AND tbgGiftAidRequestQueuedAt > '2022-04-21 00:00:00'
-    AND tbgGiftAidRequestQueuedAt < '2022-04-21 15:00:00'
-    AND tbgGiftAidRequestConfirmedCompleteAt IS NULL
-EOT
-);
+        
         // Only reset things queued today (21 April) up to 16:00 BST.
     }
     public function down(Schema $schema) : void


1135) /home/barney/projects/matchbot/src/Migrations/Version20220503091108.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-            UPDATE Donation SET giftAid = 0, tipGiftAid = 0, salesforcePushStatus = 'pending-update'
-            WHERE uuid = :uuid AND salesforceId = :salesforceId AND giftAid = 1
-            LIMIT 1
-EOT
-, ['uuid' => 'b8fed725-70b2-41f7-aa65-803bbff89632', 'salesforceId' => 'a066900001uHRJzAAO']);
+        
     }
     public function down(Schema $schema) : void
     {


1136) /home/barney/projects/matchbot/src/Migrations/Version20220503091108.php:27    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             WHERE uuid = :uuid AND salesforceId = :salesforceId AND giftAid = 1
             LIMIT 1
 EOT
-, ['uuid' => 'b8fed725-70b2-41f7-aa65-803bbff89632', 'salesforceId' => 'a066900001uHRJzAAO']);
+, ['salesforceId' => 'a066900001uHRJzAAO']);
     }
     public function down(Schema $schema) : void
     {


1137) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // MAT-246.
-        $this->addSql(<<<EOT
-            UPDATE Donation SET tbgShouldProcessGiftAid = 0
-            WHERE campaign_id = :campaignId AND
-                  giftAid = 1 AND
-                  tbgShouldProcessGiftAid = 1
-            LIMIT 76
-EOT
-, ['campaignId' => 3016]);
+        
         // MAT-250. 25 donations to the affected charity not fully processed.
         $this->addSql(
             <<<EOT


1138) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:33    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
                   tbgShouldProcessGiftAid = 1
             LIMIT 76
 EOT
-, ['campaignId' => 3016]);
+, []);
         // MAT-250. 25 donations to the affected charity not fully processed.
         $this->addSql(
             <<<EOT


1139) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:34    [M] DecrementInteger

--- Original
+++ New
@@ @@
                   tbgShouldProcessGiftAid = 1
             LIMIT 76
 EOT
-, ['campaignId' => 3016]);
+, ['campaignId' => 3015]);
         // MAT-250. 25 donations to the affected charity not fully processed.
         $this->addSql(
             <<<EOT


1140) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:34    [M] IncrementInteger

--- Original
+++ New
@@ @@
                   tbgShouldProcessGiftAid = 1
             LIMIT 76
 EOT
-, ['campaignId' => 3016]);
+, ['campaignId' => 3017]);
         // MAT-250. 25 donations to the affected charity not fully processed.
         $this->addSql(
             <<<EOT


1141) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:39    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             LIMIT 76
 EOT
 , ['campaignId' => 3016]);
-        // MAT-250. 25 donations to the affected charity not fully processed.
-        $this->addSql(
-            <<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestCorrelationId IN (:correlationIdsToResubmit)
-LIMIT 25
-EOT
-,
-            ['correlationIdsToResubmit' => ['271C66984399459FB28366A527897AB6', '3AE1F6653D9F43C795E570DDA5C5E83C', '8E237A0CB284419C98F1EC0DFB40B38B']],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
-        );
+        
     }
     public function down(Schema $schema) : void
     {


1142) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:52    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 25
 EOT
 ,
-            ['correlationIdsToResubmit' => ['271C66984399459FB28366A527897AB6', '3AE1F6653D9F43C795E570DDA5C5E83C', '8E237A0CB284419C98F1EC0DFB40B38B']],
+            [],
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
         );


1143) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:53    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 25
 EOT
 ,
-            ['correlationIdsToResubmit' => ['271C66984399459FB28366A527897AB6', '3AE1F6653D9F43C795E570DDA5C5E83C', '8E237A0CB284419C98F1EC0DFB40B38B']],
+            ['correlationIdsToResubmit' => ['3AE1F6653D9F43C795E570DDA5C5E83C', '8E237A0CB284419C98F1EC0DFB40B38B']],
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
         );


1144) /home/barney/projects/matchbot/src/Migrations/Version20220531094925.php:60    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 ,
             ['correlationIdsToResubmit' => ['271C66984399459FB28366A527897AB6', '3AE1F6653D9F43C795E570DDA5C5E83C', '8E237A0CB284419C98F1EC0DFB40B38B']],
             // https://stackoverflow.com/a/36710894/2803757
-            ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
+            []
         );
     }
     public function down(Schema $schema) : void


1145) /home/barney/projects/matchbot/src/Migrations/Version20220623122551.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // MAT-251. 76 donations to the affected charity not fully processed, hence LIMIT 76 added.
-        $this->addSql(
-            <<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    tbgGiftAidRequestCorrelationId IN (:correlationIdsToResubmit)
-LIMIT 76
-EOT
-,
-            ['correlationIdsToResubmit' => [
-                // First 5 for 31 donations to Global Ecovillage Network (charity id 1718)
-                'F18E8038C1694F27B58208A22F63C9FD',
-                'C0FCB56D3352438DB49A8E1563E62E0F',
-                '416F0EBB7581473F86B7513A1FED2CEC',
-                'ABA1A41CDC6A400A87E0144577D0845F',
-                'C11284ACA90940E5A24C46D458AF6FC1',
-                // Second 5 for 45 donations to Cambridge Rape Crisis Centre (charity id 1656)
-                '770F55B41EB34BB1AEDF43EAE971420F',
-                '1A35A214B81A41BBA6DAF78164B73FF8',
-                '2011B9F341D54A4DB3A281CDD0B43465',
-                '287E66C1CE4246C1AACC0144CA2212AC',
-                'C02E6128327648649D56C56ECC05B245',
-            ]],
-            // https://stackoverflow.com/a/36710894/2803757
-            ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
-        );
+        
     }
     public function down(Schema $schema) : void
     {


1146) /home/barney/projects/matchbot/src/Migrations/Version20220623122551.php:37    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 76
 EOT
 ,
-            ['correlationIdsToResubmit' => [
-                // First 5 for 31 donations to Global Ecovillage Network (charity id 1718)
-                'F18E8038C1694F27B58208A22F63C9FD',
-                'C0FCB56D3352438DB49A8E1563E62E0F',
-                '416F0EBB7581473F86B7513A1FED2CEC',
-                'ABA1A41CDC6A400A87E0144577D0845F',
-                'C11284ACA90940E5A24C46D458AF6FC1',
-                // Second 5 for 45 donations to Cambridge Rape Crisis Centre (charity id 1656)
-                '770F55B41EB34BB1AEDF43EAE971420F',
-                '1A35A214B81A41BBA6DAF78164B73FF8',
-                '2011B9F341D54A4DB3A281CDD0B43465',
-                '287E66C1CE4246C1AACC0144CA2212AC',
-                'C02E6128327648649D56C56ECC05B245',
-            ]],
+            [],
             // https://stackoverflow.com/a/36710894/2803757
             ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
         );


1147) /home/barney/projects/matchbot/src/Migrations/Version20220623122551.php:38    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 EOT
 ,
             ['correlationIdsToResubmit' => [
-                // First 5 for 31 donations to Global Ecovillage Network (charity id 1718)
-                'F18E8038C1694F27B58208A22F63C9FD',
                 'C0FCB56D3352438DB49A8E1563E62E0F',
                 '416F0EBB7581473F86B7513A1FED2CEC',
                 'ABA1A41CDC6A400A87E0144577D0845F',


1148) /home/barney/projects/matchbot/src/Migrations/Version20220623122551.php:54    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
                 'C02E6128327648649D56C56ECC05B245',
             ]],
             // https://stackoverflow.com/a/36710894/2803757
-            ['correlationIdsToResubmit' => Connection::PARAM_STR_ARRAY]
+            []
         );
     }
     public function down(Schema $schema) : void


1149) /home/barney/projects/matchbot/src/Migrations/Version20220624112013.php:23    [M] Identical

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         // This DB migration is only to be ran in staging!
-        if (getenv('APP_ENV') === 'staging') {
+        if (getenv('APP_ENV') !== 'staging') {
             // Add hmrcReferenceNumber in MatchBot DB
             $this->addSql(<<<EOT
     UPDATE Charity


1150) /home/barney/projects/matchbot/src/Migrations/Version20220624112013.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // This DB migration is only to be ran in staging!
         if (getenv('APP_ENV') === 'staging') {
-            // Add hmrcReferenceNumber in MatchBot DB
-            $this->addSql(<<<EOT
-    UPDATE Charity
-    SET hmrcReferenceNumber = 'AB98765'
-    WHERE salesforceId = '0011r00002HoeprAAB'
-    LIMIT 1
-EOT
-);
+            
             // Prepare donations for ClaimBot
             $this->addSql(<<<EOT
 UPDATE Donation


1151) /home/barney/projects/matchbot/src/Migrations/Version20220624112013.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     LIMIT 1
 EOT
 );
-            // Prepare donations for ClaimBot
-            $this->addSql(<<<EOT
-UPDATE Donation
-SET donationStatus = 'Paid',
-    tbgShouldProcessGiftAid = 1
-WHERE campaign_id = 1781
-    AND donationStatus = 'Collected'
-    AND tbgShouldProcessGiftAid = 0
-    AND donorEmailAddress = 'Dominique@thebiggive.org.uk'
-    AND collectedAt >= '2022-06-01 00:00:00'
-    AND collectedAt <= '2022-06-01 23:59:59'
-LIMIT 12;
-EOT
-);
+            
         }
     }
     public function down(Schema $schema) : void


1152) /home/barney/projects/matchbot/src/Migrations/Version20220705130951.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    tbgGiftAidRequestQueuedAt BETWEEN '2022-06-27 00:00:00' AND '2022-06-27 23:59:59' AND
-    tbgGiftAidRequestCorrelationId IS NULL AND
-    tbgGiftAidRequestFailedAt IS NULL
-LIMIT 148
-EOT
-);
+        
     }
     public function down(Schema $schema) : void
     {


1153) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2595, 3028, 3046];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1154) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2597, 3028, 3046];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1155) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2596, 3027, 3046];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1156) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2596, 3029, 3046];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1157) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2596, 3028, 3045];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1158) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [2596, 3028, 3047];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1159) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:23    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [2596, 3028, 3046];
+        $campaignIds = [3028, 3046];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1160) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $campaignIds = [2596, 3028, 3046];
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    collectedAt < '2022-08-01 00:00:00' AND
-    campaign_id IN (:campaignIdsToRequeue) AND
-    tbgGiftAidRequestQueuedAt IS NOT NULL
-LIMIT 392
-EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+        
     }
     public function down(Schema $schema) : void
     {


1161) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:39    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     tbgGiftAidRequestQueuedAt IS NOT NULL
 LIMIT 392
 EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+, [], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1162) /home/barney/projects/matchbot/src/Migrations/Version20220819094649.php:40    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     tbgGiftAidRequestQueuedAt IS NOT NULL
 LIMIT 392
 EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+, ['campaignIdsToRequeue' => $campaignIds], []);
     }
     public function down(Schema $schema) : void
     {


1163) /home/barney/projects/matchbot/src/Migrations/Version20220917172013.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation ADD pspCustomerId VARCHAR(255) DEFAULT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1164) /home/barney/projects/matchbot/src/Migrations/Version20220917172013.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation DROP pspCustomerId');
+        
     }
 }


1165) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1804, 2758, 2469];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1166) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1806, 2758, 2469];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1167) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1805, 2757, 2469];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1168) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1805, 2759, 2469];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1169) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1805, 2758, 2468];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1170) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [1805, 2758, 2470];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1171) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:23    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIds = [1805, 2758, 2469];
+        $campaignIds = [2758, 2469];
         $this->addSql(<<<EOT
 UPDATE Donation
 SET


1172) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $campaignIds = [1805, 2758, 2469];
-        $this->addSql(<<<EOT
-UPDATE Donation
-SET
-    tbgGiftAidRequestQueuedAt = NULL,
-    tbgGiftAidRequestFailedAt = NULL,
-    tbgGiftAidRequestConfirmedCompleteAt = NULL,
-    tbgGiftAidRequestCorrelationId = NULL,
-    tbgGiftAidResponseDetail = NULL
-WHERE
-    campaign_id IN (:campaignIdsToRequeue) AND
-    tbgGiftAidRequestQueuedAt IS NOT NULL AND
-    giftAid = 1 AND
-    tbgShouldProcessGiftAid = 1
-LIMIT 130
-EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+        
     }
     public function down(Schema $schema) : void
     {


1173) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:39    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     tbgShouldProcessGiftAid = 1
 LIMIT 130
 EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+, [], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1174) /home/barney/projects/matchbot/src/Migrations/Version20221004134449.php:40    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     tbgShouldProcessGiftAid = 1
 LIMIT 130
 EOT
-, ['campaignIdsToRequeue' => $campaignIds], ['campaignIdsToRequeue' => Connection::PARAM_INT_ARRAY]);
+, ['campaignIdsToRequeue' => $campaignIds], []);
     }
     public function down(Schema $schema) : void
     {


1175) /home/barney/projects/matchbot/src/Migrations/Version20221021174752.php:28    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId = :sfId
 LIMIT 1
 EOT;
-        $this->addSql($updateSql, ['sfId' => 'a066900001u4YTvAAM']);
+        $this->addSql($updateSql, []);
     }
     public function down(Schema $schema) : void
     {


1176) /home/barney/projects/matchbot/src/Migrations/Version20221021174752.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId = :sfId
 LIMIT 1
 EOT;
-        $this->addSql($updateSql, ['sfId' => 'a066900001u4YTvAAM']);
+        
     }
     public function down(Schema $schema) : void
     {


1177) /home/barney/projects/matchbot/src/Migrations/Version20221025044553.php:22    [M] LogicalNot

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        if (!$schema->getTable('Donation')->hasColumn('paymentMethodType')) {
+        if ($schema->getTable('Donation')->hasColumn('paymentMethodType')) {
             $this->addSql('ALTER TABLE Donation ADD paymentMethodType VARCHAR(255) DEFAULT NULL');
         }
         // Removed after the fact because Production seems unable to complete


1178) /home/barney/projects/matchbot/src/Migrations/Version20221025044553.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         if (!$schema->getTable('Donation')->hasColumn('paymentMethodType')) {
-            $this->addSql('ALTER TABLE Donation ADD paymentMethodType VARCHAR(255) DEFAULT NULL');
+            
         }
         // Removed after the fact because Production seems unable to complete
         // the transaction within the lock time.


1179) /home/barney/projects/matchbot/src/Migrations/Version20221025044553.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation DROP paymentMethodType');
+        
     }
 }


1180) /home/barney/projects/matchbot/src/Migrations/Version20221101143104.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 2
 EOT;
-        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sBVAAY', 'a066900001u4sD7AAI']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        
     }
     public function down(Schema $schema) : void
     {


1181) /home/barney/projects/matchbot/src/Migrations/Version20221101143104.php:32    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 2
 EOT;
-        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sBVAAY', 'a066900001u4sD7AAI']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, [], ['sfIds' => Connection::PARAM_STR_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1182) /home/barney/projects/matchbot/src/Migrations/Version20221101143104.php:33    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 2
 EOT;
-        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sBVAAY', 'a066900001u4sD7AAI']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sD7AAI']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1183) /home/barney/projects/matchbot/src/Migrations/Version20221101143104.php:38    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 2
 EOT;
-        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sBVAAY', 'a066900001u4sD7AAI']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, ['sfIds' => ['a066900001u4sBVAAY', 'a066900001u4sD7AAI']], []);
     }
     public function down(Schema $schema) : void
     {


1184) /home/barney/projects/matchbot/src/Migrations/Version20221203115436.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<EOT
-            UPDATE Donation SET donorEmailAddress = REPLACE(donorEmailAddress, '..com', '.com')
-EOT
-, []);
+        
     }
     public function down(Schema $schema) : void
     {


1185) /home/barney/projects/matchbot/src/Migrations/Version20221203151735.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 1
 EOT;
-        // Sticking with str array to minimise differences from `Version20221101143104`.
-        $this->addSql($updateSql, ['sfIds' => ['a066900001vVp3kAAC']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        
     }
     public function down(Schema $schema) : void
     {


1186) /home/barney/projects/matchbot/src/Migrations/Version20221203151735.php:35    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         // Sticking with str array to minimise differences from `Version20221101143104`.
-        $this->addSql($updateSql, ['sfIds' => ['a066900001vVp3kAAC']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, [], ['sfIds' => Connection::PARAM_STR_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1187) /home/barney/projects/matchbot/src/Migrations/Version20221203151735.php:36    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         // Sticking with str array to minimise differences from `Version20221101143104`.
-        $this->addSql($updateSql, ['sfIds' => ['a066900001vVp3kAAC']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, ['sfIds' => []], ['sfIds' => Connection::PARAM_STR_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1188) /home/barney/projects/matchbot/src/Migrations/Version20221203151735.php:40    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 1
 EOT;
         // Sticking with str array to minimise differences from `Version20221101143104`.
-        $this->addSql($updateSql, ['sfIds' => ['a066900001vVp3kAAC']], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateSql, ['sfIds' => ['a066900001vVp3kAAC']], []);
     }
     public function down(Schema $schema) : void
     {


1189) /home/barney/projects/matchbot/src/Migrations/Version20221205110006.php:21    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('CREATE INDEX end_date_and_is_matched ON Campaign (endDate, isMatched)');
+        
         $this->addSql('CREATE INDEX campaign_and_status ON Donation (campaign_id, donationStatus)');
     }
     public function down(Schema $schema) : void


1190) /home/barney/projects/matchbot/src/Migrations/Version20221205110006.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->addSql('CREATE INDEX end_date_and_is_matched ON Campaign (endDate, isMatched)');
-        $this->addSql('CREATE INDEX campaign_and_status ON Donation (campaign_id, donationStatus)');
+        
     }
     public function down(Schema $schema) : void
     {


1191) /home/barney/projects/matchbot/src/Migrations/Version20221205110006.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('DROP INDEX end_date_and_is_matched ON Campaign');
+        
         $this->addSql('DROP INDEX campaign_and_status ON Donation');
     }
 }


1192) /home/barney/projects/matchbot/src/Migrations/Version20221205110006.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function down(Schema $schema) : void
     {
         $this->addSql('DROP INDEX end_date_and_is_matched ON Campaign');
-        $this->addSql('DROP INDEX campaign_and_status ON Donation');
+        
     }
 }


1193) /home/barney/projects/matchbot/src/Migrations/Version20221213144526.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<'SQL'
-    UPDATE Donation 
-    set giftAid = 0, tipGiftAid = 0, salesforcePushStatus = 'pending-update'
-    WHERE Donation.salesforceId IN ('a066900001vWmAaAAK', 'a066900001vWlRHAA0', 'a066900001vVkwZAAS') LIMIT 3
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1194) /home/barney/projects/matchbot/src/Migrations/Version20221213144526.php:28    [M] Throw_

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        throw new \Exception('no going back');
+        new \Exception('no going back');
     }
 }


1195) /home/barney/projects/matchbot/src/Migrations/Version20221214100808.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<'SQL'
-    UPDATE Donation 
-    set amount = 450 , salesforcePushStatus = 'pending-update'
-    WHERE uuid = "dcec4e60-8969-4f40-80f0-35bb5b7184af" LIMIT 1
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1196) /home/barney/projects/matchbot/src/Migrations/Version20230110140053.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('OPTIMIZE TABLE Donation');
+        
         $this->addSql('OPTIMIZE TABLE FundingWithdrawal');
     }
     public function down(Schema $schema) : void


1197) /home/barney/projects/matchbot/src/Migrations/Version20230110140053.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->addSql('OPTIMIZE TABLE Donation');
-        $this->addSql('OPTIMIZE TABLE FundingWithdrawal');
+        
     }
     public function down(Schema $schema) : void
     {


1198) /home/barney/projects/matchbot/src/Migrations/Version20230117173337.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 3
 EOT;
-        $this->addSql($updateCollectedAtSql, ['sfIds' => [
-            'a066900001u4sBVAAY',
-            // See Version20221101143104
-            'a066900001u4sD7AAI',
-            // See Version20221101143104
-            'a066900001vVp3kAAC',
-        ]], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        
     }
     public function down(Schema $schema) : void
     {


1199) /home/barney/projects/matchbot/src/Migrations/Version20230117173337.php:31    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 WHERE salesforceId IN (:sfIds)
 LIMIT 3
 EOT;
-        $this->addSql($updateCollectedAtSql, ['sfIds' => [
-            'a066900001u4sBVAAY',
-            // See Version20221101143104
-            'a066900001u4sD7AAI',
-            // See Version20221101143104
-            'a066900001vVp3kAAC',
-        ]], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        $this->addSql($updateCollectedAtSql, [], ['sfIds' => Connection::PARAM_STR_ARRAY]);
     }
     public function down(Schema $schema) : void
     {


1200) /home/barney/projects/matchbot/src/Migrations/Version20230117173337.php:32    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 LIMIT 3
 EOT;
         $this->addSql($updateCollectedAtSql, ['sfIds' => [
-            'a066900001u4sBVAAY',
             // See Version20221101143104
             'a066900001u4sD7AAI',
             // See Version20221101143104


1201) /home/barney/projects/matchbot/src/Migrations/Version20230117173337.php:38    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             'a066900001u4sD7AAI',
             // See Version20221101143104
             'a066900001vVp3kAAC',
-        ]], ['sfIds' => Connection::PARAM_STR_ARRAY]);
+        ]], []);
     }
     public function down(Schema $schema) : void
     {


1202) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:32    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     createdAt BETWEEN :firstDate AND :lastDate AND
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
-        $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
-            'firstDate' => '2022-11-16 00:00:00',
-            // UTC === local UK in this case.
-            'lastDate' => '2023-01-09 23:59:59',
-        ], ['campaignIdsToNotPatch' => Connection::PARAM_INT_ARRAY, 'firstDate' => ParameterType::STRING, 'lastDate' => ParameterType::STRING]);
+        
     }
     public function down(Schema $schema) : void
     {


1203) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:34    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1204) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:35    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3728, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1205) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:36    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3492, 3728, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1206) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:36    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3494, 3728, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1207) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:37    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3727, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1208) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:37    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3729, 3809, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1209) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:38    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3808, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1210) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:38    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3810, 3922, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1211) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:39    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3921, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1212) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:39    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3923, 4150, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1213) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:40    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4149, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1214) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:40    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4151, 4431],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1215) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:41    [M] DecrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4430],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1216) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:41    [M] IncrementInteger

--- Original
+++ New
@@ @@
     campaign_id NOT IN (:campaignIdsToNotPatch)
 EOT;
         $this->addSql($updateStatusSql, [
-            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4431],
+            'campaignIdsToNotPatch' => [3493, 3728, 3809, 3922, 4150, 4432],
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',


1217) /home/barney/projects/matchbot/src/Migrations/Version20230124121155.php:46    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             'firstDate' => '2022-11-16 00:00:00',
             // UTC === local UK in this case.
             'lastDate' => '2023-01-09 23:59:59',
-        ], ['campaignIdsToNotPatch' => Connection::PARAM_INT_ARRAY, 'firstDate' => ParameterType::STRING, 'lastDate' => ParameterType::STRING]);
+        ], ['firstDate' => ParameterType::STRING, 'lastDate' => ParameterType::STRING]);
     }
     public function down(Schema $schema) : void
     {


1218) /home/barney/projects/matchbot/src/Migrations/Version20230224161708.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<SQL
-UPDATE Donation SET DonationStatus = 'Refunded' 
-WHERE Donation.transactionId IN (
-                                 'pi_3KbTS4KkGuKkxwBN0ODatXZe',
-                                 'pi_3KbWRSKkGuKkxwBN12LRWjpG',
-                                 'pi_3KbPnyKkGuKkxwBN0udOmTbP'
-                                )
-LIMIT 3;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1219) /home/barney/projects/matchbot/src/Migrations/Version20230314142005.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<SQL
-UPDATE Donation SET salesforcePushStatus = 'pending-update' 
-WHERE Donation.transactionId IN (
-  'pi_3KbTS4KkGuKkxwBN0ODatXZe',
-  'pi_3KbWRSKkGuKkxwBN12LRWjpG',
-  'pi_3KbPnyKkGuKkxwBN0udOmTbP'
-)
-LIMIT 3;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1220) /home/barney/projects/matchbot/src/Migrations/Version20230523154501.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<SQL
-    UPDATE Donation SET tbgShouldProcessGiftAid = 1
-    WHERE campaign_id = 4216 AND
-          giftAid = 1 AND
-          donationStatus = 'Paid'
-    LIMIT 6;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1221) /home/barney/projects/matchbot/src/Migrations/Version20230622095211.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation ADD refundedAt DATETIME DEFAULT NULL COMMENT \'(DC2Type:datetime_immutable)\' AFTER collectedAt');
+        
     }
     public function down(Schema $schema) : void
     {


1222) /home/barney/projects/matchbot/src/Migrations/Version20230622095211.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation DROP refundedAt');
+        
     }
 }


1223) /home/barney/projects/matchbot/src/Migrations/Version20230707100241.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql(<<<SQL
-    UPDATE Donation
-    SET
-        tbgGiftAidRequestQueuedAt = NULL,
-        tbgGiftAidRequestFailedAt = NULL,
-        tbgGiftAidRequestConfirmedCompleteAt = NULL,
-        tbgGiftAidRequestCorrelationId = NULL,
-        tbgGiftAidResponseDetail = NULL
-    WHERE
-        campaign_id = 4635 AND
-        giftAid = 1 AND
-        tbgShouldProcessGiftAid = 1 AND
-        tbgGiftAidRequestCorrelationId IS NOT NULL AND
-        donationStatus = 'Paid'
-    LIMIT 224;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1224) /home/barney/projects/matchbot/src/Migrations/Version20230801110114.php:20    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // SQL copied from \MatchBot\Migrations\Version20230707100241, campaign id changed.
-        $this->addSql(<<<SQL
-    UPDATE Donation
-    SET
-        tbgGiftAidRequestQueuedAt = NULL,
-        tbgGiftAidRequestFailedAt = NULL,
-        tbgGiftAidRequestConfirmedCompleteAt = NULL,
-        tbgGiftAidRequestCorrelationId = NULL,
-        tbgGiftAidResponseDetail = NULL
-    WHERE
-        campaign_id = 4644 AND
-        giftAid = 1 AND
-        tbgShouldProcessGiftAid = 1 AND
-        tbgGiftAidRequestCorrelationId IS NOT NULL AND
-        donationStatus = 'Paid'
-    LIMIT 97;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1225) /home/barney/projects/matchbot/src/Migrations/Version20230801110114.php:41    [M] Throw_

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        throw new \Exception("No going back");
+        new \Exception("No going back");
     }
 }


1226) /home/barney/projects/matchbot/src/Migrations/Version20230907114841.php:22    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIdForMAT311 = 4661;
+        $campaignIdForMAT311 = 4660;
         $this->addSql(<<<SQL
     UPDATE Donation
     SET


1227) /home/barney/projects/matchbot/src/Migrations/Version20230907114841.php:22    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $campaignIdForMAT311 = 4661;
+        $campaignIdForMAT311 = 4662;
         $this->addSql(<<<SQL
     UPDATE Donation
     SET


1228) /home/barney/projects/matchbot/src/Migrations/Version20230907114841.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $campaignIdForMAT311 = 4661;
-        $this->addSql(<<<SQL
-    UPDATE Donation
-    SET
-        tbgGiftAidRequestQueuedAt = NULL,
-        tbgGiftAidRequestFailedAt = NULL,
-        tbgGiftAidRequestConfirmedCompleteAt = NULL,
-        tbgGiftAidRequestCorrelationId = NULL,
-        tbgGiftAidResponseDetail = NULL
-    WHERE
-        campaign_id = {$campaignIdForMAT311} AND
-        giftAid = 1 AND
-        tbgShouldProcessGiftAid = 1 AND
-        tbgGiftAidRequestCorrelationId IS NOT NULL AND
-        donationStatus = 'Paid'
-    LIMIT 218;
-SQL
-);
+        
     }
     public function down(Schema $schema) : void
     {


1229) /home/barney/projects/matchbot/src/Migrations/Version20230907114841.php:45    [M] Throw_

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        throw new \Exception("No going back");
+        new \Exception("No going back");
     }
 }


1230) /home/barney/projects/matchbot/src/Migrations/Version20230913111156.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity DROP donateLinkId');
+        
     }
     public function down(Schema $schema) : void
     {


1231) /home/barney/projects/matchbot/src/Migrations/Version20230913111156.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity ADD donateLinkId VARCHAR(255) NOT NULL');
+        
     }
 }


1232) /home/barney/projects/matchbot/src/Migrations/Version20230925121435.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation DROP clientSecret');
+        
     }
     public function down(Schema $schema) : void
     {


1233) /home/barney/projects/matchbot/src/Migrations/Version20230925121435.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation ADD clientSecret VARCHAR(255) DEFAULT NULL');
+        
     }
 }


1234) /home/barney/projects/matchbot/src/Migrations/Version20230928150700.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity ADD tbgApprovedToClaimGiftAid TINYINT(1) NOT NULL');
+        
         // For existing charities, set starting state to the same as the previous onboarded flag.
         $this->addSql('UPDATE Charity SET tbgApprovedToClaimGiftAid = tbgClaimingGiftAid');
     }


1235) /home/barney/projects/matchbot/src/Migrations/Version20230928150700.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function up(Schema $schema) : void
     {
         $this->addSql('ALTER TABLE Charity ADD tbgApprovedToClaimGiftAid TINYINT(1) NOT NULL');
-        // For existing charities, set starting state to the same as the previous onboarded flag.
-        $this->addSql('UPDATE Charity SET tbgApprovedToClaimGiftAid = tbgClaimingGiftAid');
+        
     }
     public function down(Schema $schema) : void
     {


1236) /home/barney/projects/matchbot/src/Migrations/Version20230928150700.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Charity DROP tbgApprovedToClaimGiftAid');
+        
     }
 }


1237) /home/barney/projects/matchbot/src/Migrations/Version20230929135818.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME DEFAULT NULL COMMENT \'(DC2Type:datetime_immutable)\'');
+        
     }
     public function down(Schema $schema) : void
     {


1238) /home/barney/projects/matchbot/src/Migrations/Version20230929135818.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE Donation CHANGE collectedAt collectedAt DATETIME DEFAULT NULL');
+        
     }
 }


1239) /home/barney/projects/matchbot/src/Migrations/Version20231016115215.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // this up() migration is auto-generated, please modify it to your needs
-        $this->addSql('CREATE TABLE DonorAccount (id INT UNSIGNED AUTO_INCREMENT NOT NULL, emailAddress VARCHAR(256) NOT NULL, stripeCustomerId VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        
     }
     public function down(Schema $schema) : void
     {


1240) /home/barney/projects/matchbot/src/Migrations/Version20231016115215.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        // this down() migration is auto-generated, please modify it to your needs
-        $this->addSql('DROP TABLE DonorAccount');
+        
     }
 }


1241) /home/barney/projects/matchbot/src/Migrations/Version20231016141922.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount ADD email VARCHAR(255) NOT NULL, DROP emailAddress, CHANGE stripeCustomerId stripeCustomerId VARCHAR(255) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1242) /home/barney/projects/matchbot/src/Migrations/Version20231016141922.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount ADD emailAddress VARCHAR(256) NOT NULL, DROP email, CHANGE stripeCustomerId stripeCustomerId VARCHAR(50) NOT NULL');
+        
     }
 }


1243) /home/barney/projects/matchbot/src/Migrations/Version20231016160140.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount ADD createdAt DATETIME NOT NULL, ADD updatedAt DATETIME NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1244) /home/barney/projects/matchbot/src/Migrations/Version20231016160140.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount DROP createdAt, DROP updatedAt');
+        
     }
 }


1245) /home/barney/projects/matchbot/src/Migrations/Version20231016174027.php:19    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount ADD donorName_first VARCHAR(255) NOT NULL, ADD donorName_last VARCHAR(255) NOT NULL');
+        
     }
     public function down(Schema $schema) : void
     {


1246) /home/barney/projects/matchbot/src/Migrations/Version20231016174027.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('ALTER TABLE DonorAccount DROP donorName_first, DROP donorName_last');
+        
     }
 }


1247) /home/barney/projects/matchbot/src/Migrations/Version20231018104935.php:25    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function up(Schema $schema) : void
     {
-        // we have a duplicate already in staging, but we don't care much about any of the data in this table yet.
-        $this->addSql('DELETE FROM DonorAccount WHERE ID > 0');
+        
         $this->addSql('CREATE UNIQUE INDEX UNIQ_STRIPE_ID ON DonorAccount(stripeCustomerId) ');
     }
     public function down(Schema $schema) : void


1248) /home/barney/projects/matchbot/src/Migrations/Version20231018104935.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         // we have a duplicate already in staging, but we don't care much about any of the data in this table yet.
         $this->addSql('DELETE FROM DonorAccount WHERE ID > 0');
-        $this->addSql('CREATE UNIQUE INDEX UNIQ_STRIPE_ID ON DonorAccount(stripeCustomerId) ');
+        
     }
     public function down(Schema $schema) : void
     {


1249) /home/barney/projects/matchbot/src/Migrations/Version20231018104935.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function down(Schema $schema) : void
     {
-        $this->addSql('DROP INDEX UNIQ_STRIPE_ID ON DonorAccount');
+        
     }
 }


1250) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:31    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
     }
     public function isHandling(array $record) : bool
     {
-        return $record['level'] >= Logger::ERROR;
+        return $record['level'] > Logger::ERROR;
     }
     /**
      * @psalm-suppress PossiblyUnusedReturnValue - used by Monolog.


1251) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:31    [M] GreaterThanOrEqualToNegotiation

--- Original
+++ New
@@ @@
     }
     public function isHandling(array $record) : bool
     {
-        return $record['level'] >= Logger::ERROR;
+        return $record['level'] < Logger::ERROR;
     }
     /**
      * @psalm-suppress PossiblyUnusedReturnValue - used by Monolog.


1252) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:39    [M] LessThan

--- Original
+++ New
@@ @@
      */
     public function handle(array|\ArrayAccess $record) : bool
     {
-        if ($record['level'] < Logger::ERROR) {
+        if ($record['level'] <= Logger::ERROR) {
             return false;
             // allows another handle to handle this.
         }


1253) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:39    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
      */
     public function handle(array|\ArrayAccess $record) : bool
     {
-        if ($record['level'] < Logger::ERROR) {
+        if ($record['level'] >= Logger::ERROR) {
             return false;
             // allows another handle to handle this.
         }


1254) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:40    [M] FalseValue

--- Original
+++ New
@@ @@
     public function handle(array|\ArrayAccess $record) : bool
     {
         if ($record['level'] < Logger::ERROR) {
-            return false;
+            return true;
             // allows another handle to handle this.
         }
         $message = $record['message'];


1255) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:48    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $message = $record['message'];
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
-        $messageFirstLine = $lines[0] ?? '';
+        $messageFirstLine = $lines[1] ?? '';
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);


1256) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:48    [M] Coalesce

--- Original
+++ New
@@ @@
         $message = $record['message'];
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
-        $messageFirstLine = $lines[0] ?? '';
+        $messageFirstLine = '' ?? $lines[0];
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);


1257) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, -1, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1258) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 1, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1259) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 8)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1260) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 10)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1261) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] UnwrapArraySlice

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, $lines) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1262) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] Concat

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = \PHP_EOL . implode(\PHP_EOL, array_slice($lines, 0, 9));
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1263) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1264) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:49    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $levelName = $record['level_name'];
         $lines = explode(PHP_EOL, $message);
         $messageFirstLine = $lines[0] ?? '';
-        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
+        $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9));
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));


1265) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:57    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
-        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
+        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, -1, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
         return false;


1266) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:57    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
-        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
+        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 1, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
         return false;


1267) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:57    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
-        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
+        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 149)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
         return false;


1268) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:57    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
-        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
+        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 151)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
         return false;


1269) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:57    [M] UnwrapSubstr

--- Original
+++ New
@@ @@
         $messageFirstSeveralLines = implode(\PHP_EOL, array_slice($lines, 0, 9)) . \PHP_EOL;
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
-        $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
+        $options = (new SlackOptions())->block(new SlackHeaderBlock($heading))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
         return false;


1270) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:59    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $heading = "Matchbot {$levelName}: {$messageFirstLine}";
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
-        $chatMessage->options($options);
+        
         $this->slackConnction->send($chatMessage);
         return false;
         // record will go to other handlers in addition to being sent to slack.


1271) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:61    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $chatMessage = new ChatMessage($heading);
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
-        $this->slackConnction->send($chatMessage);
+        
         return false;
         // record will go to other handlers in addition to being sent to slack.
     }


1272) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:63    [M] FalseValue

--- Original
+++ New
@@ @@
         $options = (new SlackOptions())->block(new SlackHeaderBlock(substr($heading, 0, 150)))->block((new SlackSectionBlock())->text($messageFirstSeveralLines));
         $chatMessage->options($options);
         $this->slackConnction->send($chatMessage);
-        return false;
+        return true;
         // record will go to other handlers in addition to being sent to slack.
     }
     public function handleBatch(array $records) : void


1273) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:68    [M] Foreach_

--- Original
+++ New
@@ @@
     }
     public function handleBatch(array $records) : void
     {
-        foreach ($records as $record) {
+        foreach (array() as $record) {
             $this->handle($record);
         }
     }


1274) /home/barney/projects/matchbot/src/Monolog/Handler/SlackHandler.php:69    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function handleBatch(array $records) : void
     {
         foreach ($records as $record) {
-            $this->handle($record);
+            
         }
     }
     public function close() : void
