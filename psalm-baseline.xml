<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.7.4@c46eccda769925073b8f65d66c4a3a7dc5d440b1">
  <file src="app/dependencies.php">
    <DeprecatedClass>
      <code><![CDATA[Setup::createAnnotationMetadataConfiguration(
                $settings['doctrine']['metadata_dirs'],
                $settings['doctrine']['dev_mode'],
                $settings['doctrine']['cache_dir'] . '/proxies',
                $cache
            )]]></code>
      <code>new ArrayCache()</code>
      <code>new RedisCache()</code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code>setMetadataCacheImpl</code>
    </DeprecatedMethod>
    <MixedArgument>
      <code><![CDATA[$c->get('settings')]]></code>
      <code><![CDATA[$c->get('settings')]]></code>
      <code><![CDATA[$c->get('settings')]]></code>
      <code><![CDATA[$c->get('settings')['doctrine']['connection']]]></code>
      <code><![CDATA[$c->get('settings')['identity']['baseUri']]]></code>
      <code><![CDATA[$c->get('settings')['los_rate_limit']]]></code>
      <code><![CDATA[$c->get('settings')['recaptcha']['secret_key']]]></code>
      <code><![CDATA[$c->get('settings')['redis']['host']]]></code>
      <code><![CDATA[$c->get('settings')['redis']['host']]]></code>
      <code><![CDATA[$c->get(CacheInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$c->get(ORM\Configuration::class)]]></code>
      <code><![CDATA[$c->get(ProblemDetailsResponseFactory::class)]]></code>
      <code><![CDATA[$c->get(Redis::class)]]></code>
      <code><![CDATA[$c->get(Redis::class)]]></code>
      <code><![CDATA[$c->get(RetrySafeEntityManager::class)]]></code>
      <code><![CDATA[$em->getConnection()]]></code>
      <code><![CDATA[$loggerSettings['name']]]></code>
      <code><![CDATA[$loggerSettings['path']]]></code>
      <code><![CDATA[$settings['doctrine']['dev_mode']]]></code>
      <code><![CDATA[$settings['doctrine']['dev_mode']]]></code>
      <code><![CDATA[$settings['doctrine']['metadata_dirs']]]></code>
      <code><![CDATA[$settings['doctrine']['metadata_dirs']]]></code>
      <code><![CDATA[$settings['notifier']['slack']['api_token']]]></code>
      <code><![CDATA[$settings['notifier']['slack']['channel']]]></code>
      <code><![CDATA[$settings['redis']['host']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
                    Messages\Donation::class => [$c->get(GiftAidResultHandler::class)],
                    StripePayout::class => [$c->get(StripePayoutHandler::class)],
                ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$c->get('settings')['doctrine']]]></code>
      <code><![CDATA[$c->get('settings')['identity']]]></code>
      <code><![CDATA[$c->get('settings')['los_rate_limit']]]></code>
      <code><![CDATA[$c->get('settings')['recaptcha']]]></code>
      <code><![CDATA[$c->get('settings')['redis']]]></code>
      <code><![CDATA[$c->get('settings')['redis']]]></code>
      <code><![CDATA[$c->get('settings')['redis']]]></code>
      <code><![CDATA[$c->get('settings')['stripe']]]></code>
      <code><![CDATA[$c->get('settings')['stripe']]]></code>
      <code><![CDATA[$loggerSettings['level']]]></code>
      <code><![CDATA[$loggerSettings['name']]]></code>
      <code><![CDATA[$loggerSettings['path']]]></code>
      <code><![CDATA[$settings['appEnv']]]></code>
      <code><![CDATA[$settings['doctrine']]]></code>
      <code><![CDATA[$settings['doctrine']]]></code>
      <code><![CDATA[$settings['doctrine']]]></code>
      <code><![CDATA[$settings['doctrine']]]></code>
      <code><![CDATA[$settings['doctrine']]]></code>
      <code><![CDATA[$settings['doctrine']['cache_dir']]]></code>
      <code><![CDATA[$settings['doctrine']['dev_mode']]]></code>
      <code><![CDATA[$settings['doctrine']['dev_mode']]]></code>
      <code><![CDATA[$settings['doctrine']['metadata_dirs']]]></code>
      <code><![CDATA[$settings['doctrine']['metadata_dirs']]]></code>
      <code><![CDATA[$settings['logger']]]></code>
      <code><![CDATA[$settings['notifier']]]></code>
      <code><![CDATA[$settings['notifier']]]></code>
      <code><![CDATA[$settings['notifier']['slack']]]></code>
      <code><![CDATA[$settings['notifier']['slack']]]></code>
      <code><![CDATA[$settings['notifier']['slack']['api_token']]]></code>
      <code><![CDATA[$settings['notifier']['slack']['channel']]]></code>
      <code><![CDATA[$settings['redis']]]></code>
      <code><![CDATA[$settings['redis']['host']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$em</code>
      <code>$logger</code>
      <code>$loggerSettings</code>
      <code>$settings</code>
      <code>$settings</code>
      <code>$settings</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>EntityManagerInterface</code>
      <code>StripeClientInterface</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>error</code>
      <code>getConnection</code>
      <code>warning</code>
      <code>warning</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$c->get('settings')['redis']['host']]]></code>
      <code><![CDATA[$settings['doctrine']['cache_dir']]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$c->get(RetrySafeEntityManager::class)]]></code>
      <code><![CDATA[$c->get(StripeClient::class)]]></code>
    </MixedReturnStatement>
    <PossiblyFalseArgument>
      <code><![CDATA[getenv('CLAIMBOT_MESSENGER_TRANSPORT_DSN')]]></code>
      <code><![CDATA[getenv('MESSENGER_TRANSPORT_DSN')]]></code>
    </PossiblyFalseArgument>
    <UnusedClosureParam>
      <code>$c</code>
      <code>$c</code>
      <code>$c</code>
      <code>$c</code>
    </UnusedClosureParam>
  </file>
  <file src="app/repositories.php">
    <MixedAssignment>
      <code>$repo</code>
      <code>$repo</code>
      <code>$repo</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>CampaignFundingRepository</code>
      <code>CampaignRepository</code>
      <code>CharityRepository</code>
      <code>DonationRepository</code>
      <code>FundRepository</code>
      <code>FundingWithdrawalRepository</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getRepository</code>
      <code>getRepository</code>
      <code>getRepository</code>
      <code>getRepository</code>
      <code>getRepository</code>
      <code>getRepository</code>
      <code>setCampaignFundingRepository</code>
      <code>setCampaignRepository</code>
      <code>setClient</code>
      <code>setClient</code>
      <code>setClient</code>
      <code>setFundRepository</code>
      <code>setLockFactory</code>
      <code>setLogger</code>
      <code>setLogger</code>
      <code>setLogger</code>
      <code>setMatchingAdapter</code>
      <code>setMatchingAdapter</code>
      <code>setSettings</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$c->get(EntityManagerInterface::class)->getRepository(CampaignFunding::class)]]></code>
      <code><![CDATA[$c->get(EntityManagerInterface::class)->getRepository(Charity::class)]]></code>
      <code><![CDATA[$c->get(EntityManagerInterface::class)->getRepository(FundingWithdrawal::class)]]></code>
      <code>$repo</code>
      <code>$repo</code>
      <code>$repo</code>
    </MixedReturnStatement>
  </file>
  <file src="app/routes.php">
    <MissingClosureParamType>
      <code>$args</code>
      <code>$handler</code>
      <code>$request</code>
      <code>$request</code>
      <code>$response</code>
      <code>$response</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>function ($request, $response, $args) {</code>
      <code>function (RequestInterface $request, $handler) {</code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code>$request</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$response</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>handle</code>
      <code>withHeader</code>
      <code>withHeader</code>
      <code>withHeader</code>
    </MixedMethodCall>
    <UnusedClosureParam>
      <code>$args</code>
      <code>$request</code>
      <code>$response</code>
    </UnusedClosureParam>
  </file>
  <file src="public/index.php">
    <MixedArgument>
      <code><![CDATA[$app->getContainer()->get(LoggerInterface::class)]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$container->get('settings')['displayErrorDetails']]]></code>
    </MixedArrayAccess>
    <PossiblyNullReference>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Application/Actions/Donations/Create.php">
    <MixedArgument>
      <code>$campaign</code>
      <code>$customerId</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$campaign</code>
      <code><![CDATA[$createPayload['customer']]]></code>
      <code>$customerId</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getCharity</code>
      <code>getStripeAccountId</code>
    </MixedMethodCall>
    <PossiblyNullArgument>
      <code><![CDATA[$donation->getCampaign()->getCharity()->getSalesforceId()]]></code>
      <code><![CDATA[$donation->getCampaign()->getCharity()->getStripeAccountId()]]></code>
      <code><![CDATA[$donation->getPspCustomerId()]]></code>
      <code><![CDATA[$exception->getStripeCode()]]></code>
      <code><![CDATA[$intent->client_secret]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Application/Actions/Donations/Get.php">
    <DocblockTypeContradiction>
      <code>!$donation</code>
      <code>$donation</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Application/Actions/Donations/Update.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$donation->getAmount()]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>100_000 * (2 ** $retryCount)</code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$latestPI->application_fee_amount]]></code>
      <code>$lockWaitTimeoutException</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$latestPI</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>cancel</code>
      <code>confirm</code>
      <code>retrieve</code>
      <code>update</code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$latestPI->application_fee_amount]]></code>
    </MixedPropertyFetch>
    <NoInterfaceProperties>
      <code><![CDATA[$this->stripeClient->paymentIntents]]></code>
      <code><![CDATA[$this->stripeClient->paymentIntents]]></code>
      <code><![CDATA[$this->stripeClient->paymentIntents]]></code>
      <code><![CDATA[$this->stripeClient->paymentIntents]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$donation->getId()]]></code>
      <code><![CDATA[$exception->getStripeCode()]]></code>
      <code><![CDATA[$exception->getStripeCode()]]></code>
      <code><![CDATA[$exception->getStripeCode()]]></code>
      <code><![CDATA[$retryException->getStripeCode()]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedVariable>
      <code>$lockWaitTimeoutException</code>
    </PossiblyUndefinedVariable>
    <TooManyArguments>
      <code>refresh</code>
    </TooManyArguments>
    <TypeDoesNotContainType>
      <code><![CDATA[isset($donationData->status)]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Application/Actions/GetPaymentMethods.php">
    <MixedArgument>
      <code>$customerId</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$customerId</code>
    </MixedAssignment>
  </file>
  <file src="src/Application/Actions/Hooks/Stripe.php">
    <ImplicitToStringCast>
      <code><![CDATA[$request->getBody()]]></code>
    </ImplicitToStringCast>
    <MixedArrayAccess>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$this->stripeSettings]]></code>
    </MixedAssignment>
    <PropertyNotSetInConstructor>
      <code>$event</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Application/Actions/Hooks/StripeChargeUpdate.php">
    <DocblockTypeContradiction>
      <code>!$donation</code>
      <code>!$donation</code>
      <code>!$donation</code>
      <code>$donation</code>
      <code>$donation</code>
      <code>$donation</code>
    </DocblockTypeContradiction>
    <ImplicitToStringCast>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
    </ImplicitToStringCast>
    <MixedArgument>
      <code>$amountRefunded</code>
      <code>$charge</code>
      <code><![CDATA[$charge->id]]></code>
      <code><![CDATA[$charge->id]]></code>
      <code><![CDATA[$charge->id]]></code>
      <code><![CDATA[$charge->id]]></code>
      <code><![CDATA[$charge->status]]></code>
      <code><![CDATA[$event->data->object]]></code>
      <code><![CDATA[$this->stripeSettings['accountWebhookSecret']]]></code>
      <code><![CDATA[$txn->fee_details[0]->currency]]></code>
      <code><![CDATA[$txn->fee_details[0]->type]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$amountRefunded</code>
      <code>$charge</code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$charge->id]]></code>
      <code><![CDATA[$charge->status]]></code>
      <code><![CDATA[$event->data->object->amount_refunded]]></code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument>
      <code><![CDATA[$charge->balance_transaction]]></code>
      <code><![CDATA[$charge->transfer]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
      <code>$intentId</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor>
      <code>StripeChargeUpdate</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Application/Actions/Hooks/StripePayoutUpdate.php">
    <MixedArgument>
      <code><![CDATA[$event->data->object]]></code>
      <code>$payoutId</code>
      <code>$payoutId</code>
      <code><![CDATA[$this->event->data->object->id]]></code>
      <code><![CDATA[$this->stripeSettings['connectAppWebhookSecret']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$payoutId</code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$event->data->object->automatic]]></code>
      <code><![CDATA[$event->data->object->id]]></code>
      <code><![CDATA[$this->event->data->object->id]]></code>
    </MixedPropertyFetch>
    <PropertyNotSetInConstructor>
      <code>StripePayoutUpdate</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Application/Actions/Status.php">
    <InternalMethod>
      <code>connect</code>
    </InternalMethod>
    <PossiblyNullArgument>
      <code><![CDATA[$emConfig->getProxyDir()]]></code>
      <code><![CDATA[$emConfig->getProxyNamespace()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Application/Auth/DonationPublicAuthMiddleware.php">
    <PossiblyNullArgument>
      <code>$donationId</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getArgument</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Application/Auth/DonationRecaptchaMiddleware.php">
    <MixedArgument>
      <code>$captchaCode</code>
      <code><![CDATA[$request->getAttribute('client-ip')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$captchaCode</code>
      <code>$donationData</code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$donationData->creationRecaptchaCode]]></code>
    </MixedPropertyFetch>
  </file>
  <file src="src/Application/Auth/DonationToken.php">
    <FalsableReturnStatement>
      <code><![CDATA[getenv('JWT_DONATION_SECRET')]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>string</code>
    </InvalidFalsableReturnType>
    <MixedPropertyFetch>
      <code><![CDATA[$decodedJwtBody->sub->donationId]]></code>
    </MixedPropertyFetch>
  </file>
  <file src="src/Application/Auth/IdentityToken.php">
    <FalsableReturnStatement>
      <code><![CDATA[getenv('JWT_ID_SECRET')]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>string</code>
    </InvalidFalsableReturnType>
    <MissingParamType>
      <code>$jws</code>
    </MissingParamType>
    <MixedArgument>
      <code>$jws</code>
    </MixedArgument>
    <MixedInferredReturnType>
      <code>?string</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch>
      <code><![CDATA[$decodedJwtBody->sub->complete]]></code>
      <code><![CDATA[$decodedJwtBody->sub->person_id]]></code>
      <code><![CDATA[$decodedJwtBody->sub->psp_id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$decodedJwtBody->sub->complete ?? false]]></code>
      <code><![CDATA[$decodedJwtBody->sub->complete ?? false]]></code>
      <code><![CDATA[$decodedJwtBody->sub->psp_id ?? null]]></code>
      <code><![CDATA[$decodedJwtBody->sub->psp_id ?? null]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Application/Auth/PersonManagementAuthMiddleware.php">
    <PossiblyNullArgument>
      <code>$personId</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getArgument</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>__construct</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Application/Commands/Command.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->getName()]]></code>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Application/Commands/HandleOutOfSyncFunds.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$funding->getAmount()]]></code>
      <code>$fundingAvailable</code>
      <code>$fundingWithdrawalTotal</code>
      <code>$fundingWithdrawalTotal</code>
      <code>$fundingWithdrawalTotal</code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code>$excludedFundingIds</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$excludedFundingIds</code>
      <code>$newTotal</code>
    </MixedAssignment>
  </file>
  <file src="src/Application/Commands/LockingCommand.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Application/Commands/ResetMatching.php">
    <MixedArgument>
      <code>$funding</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$funding</code>
    </MixedAssignment>
  </file>
  <file src="src/Application/Commands/RetrospectivelyMatch.php">
    <ArgumentTypeCoercion>
      <code>$amountAllocated</code>
      <code>$amountAllocated</code>
    </ArgumentTypeCoercion>
    <PossiblyFalseArgument>
      <code><![CDATA[getenv('APP_ENV')]]></code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Application/Commands/UpdateCampaigns.php">
    <DeprecatedMethod>
      <code>getResultCacheImpl</code>
    </DeprecatedMethod>
    <MixedArgument>
      <code>static::$defaultName</code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
      <code><![CDATA[$campaign->getSalesforceId()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Application/Fees/Calculator.php">
    <ArgumentTypeCoercion>
      <code>$amount</code>
      <code>$feeAmountFromPercentageComponent</code>
      <code>$grossFeeAmount</code>
      <code><![CDATA[$this->amount]]></code>
      <code><![CDATA[$this->amount]]></code>
      <code><![CDATA[$this->amount]]></code>
      <code><![CDATA[$this->getCoreFee()]]></code>
      <code><![CDATA[$this->getCoreFee()]]></code>
      <code><![CDATA[$this->getFeeVatPercentage()]]></code>
      <code><![CDATA[$this->getFeeVatPercentage()]]></code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code>$feeAmountFixed</code>
      <code><![CDATA[$this->pspFeeSettings['fixed']]]></code>
      <code><![CDATA[$this->pspFeeSettings['gift_aid_percentage']]]></code>
      <code><![CDATA[$this->pspFeeSettings['main_percentage_amex_or_non_uk_eu']]]></code>
      <code><![CDATA[$this->pspFeeSettings['main_percentage_standard']]]></code>
      <code><![CDATA[$this->pspFeeSettings['vat_live_date']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$settings[$psp]['fee']]]></code>
      <code><![CDATA[$this->pspFeeSettings['fixed']['default']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$feeAmountFixed</code>
      <code>$feeAmountFixed</code>
      <code><![CDATA[$this->pspFeeSettings]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->pspFeeSettings['vat_percentage_live']]]></code>
      <code><![CDATA[$this->pspFeeSettings['vat_percentage_old']]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Application/Handlers/HttpErrorHandler.php">
    <PropertyNotSetInConstructor>
      <code>HttpErrorHandler</code>
      <code>HttpErrorHandler</code>
      <code>HttpErrorHandler</code>
      <code>HttpErrorHandler</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Application/HttpModels/Donation.php">
    <MissingConstructor>
      <code>$charityId</code>
      <code>$donationAmount</code>
      <code>$donationMatched</code>
      <code>$giftAid</code>
      <code>$optInTbgEmail</code>
      <code>$projectId</code>
      <code>$status</code>
    </MissingConstructor>
    <PossiblyUnusedProperty>
      <code>$charityId</code>
      <code>$creationRecaptchaCode</code>
      <code>$donationMatched</code>
      <code>$projectId</code>
      <code>$transactionId</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Application/HttpModels/DonationCreate.php">
    <MissingConstructor>
      <code>$donationAmount</code>
      <code>$projectId</code>
      <code>$psp</code>
    </MissingConstructor>
  </file>
  <file src="src/Application/HttpModels/DonationCreatedResponse.php">
    <MissingConstructor>
      <code>$donation</code>
      <code>$jwt</code>
    </MissingConstructor>
    <PossiblyUnusedProperty>
      <code>$donation</code>
      <code>$jwt</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Application/Matching/Adapter.php">
    <MixedAssignment>
      <code>$result</code>
    </MixedAssignment>
  </file>
  <file src="src/Application/Matching/LessThanRequestedAllocatedException.php">
    <UnusedProperty>
      <code>$fundRemainingAmount</code>
    </UnusedProperty>
  </file>
  <file src="src/Application/Matching/OptimisticRedisAdapter.php">
    <ArgumentTypeCoercion>
      <code>$wholeUnit</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>transactional</code>
    </DeprecatedMethod>
    <ImpureFunctionCall>
      <code>$function()</code>
    </ImpureFunctionCall>
    <ImpureMethodCall>
      <code>buildKey</code>
      <code>buildKey</code>
      <code>buildKey</code>
      <code>buildKey</code>
      <code>buildKey</code>
      <code>buildKey</code>
      <code>decrBy</code>
      <code>exec</code>
      <code>exec</code>
      <code>incrBy</code>
      <code>incrBy</code>
      <code>incrBy</code>
      <code>multi</code>
      <code>multi</code>
      <code>saveFundingsToDatabase</code>
      <code>set</code>
      <code>set</code>
      <code>setFundingValue</code>
      <code>setFundingValue</code>
      <code>setFundingValue</code>
      <code>setFundingValue</code>
      <code>toCurrencyFractionalUnit</code>
      <code>toCurrencyFractionalUnit</code>
      <code>toCurrencyFractionalUnit</code>
      <code>toCurrencyFractionalUnit</code>
      <code>toCurrencyWholeUnit</code>
      <code>toCurrencyWholeUnit</code>
      <code>toCurrencyWholeUnit</code>
      <code>toCurrencyWholeUnit</code>
      <code>toCurrencyWholeUnit</code>
      <code>toCurrencyWholeUnit</code>
    </ImpureMethodCall>
    <ImpureStaticProperty>
      <code>static::$storageDurationSeconds</code>
      <code>static::$storageDurationSeconds</code>
    </ImpureStaticProperty>
    <InvalidArgument>
      <code><![CDATA[$this->toCurrencyFractionalUnit($funding->getAmountAvailable())]]></code>
      <code><![CDATA[$this->toCurrencyFractionalUnit($funding->getAmountAvailable())]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code>$redisFundBalanceFractional</code>
      <code><![CDATA[$this->redis->incrBy(
                    $this->buildKey($funding),
                    $amountAllocatedFractional,
                )]]></code>
      <code><![CDATA[$this->redis->incrBy($this->buildKey($funding), $overspendFractional)]]></code>
    </InvalidCast>
    <MixedAssignment>
      <code>$result</code>
    </MixedAssignment>
    <PossiblyInvalidArrayAccess>
      <code>$fundBalanceFractional</code>
      <code>$fundBalanceFractional</code>
      <code>$initResponse</code>
      <code>$initResponse</code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>decrBy</code>
      <code>exec</code>
      <code>exec</code>
      <code>incrBy</code>
      <code>set</code>
      <code>set</code>
    </PossiblyInvalidMethodCall>
    <UnusedVariable>
      <code>$initResponse</code>
      <code>$initResponse</code>
    </UnusedVariable>
  </file>
  <file src="src/Application/Messenger/Handler/StripePayoutHandler.php">
    <DeprecatedInterface>
      <code>StripePayoutHandler</code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code>!$donation</code>
      <code>$donation</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$paidChargeIds</code>
    </InvalidArgument>
    <InvalidReturnStatement>
      <code>$originalChargeIds</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>string[]</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion>
      <code>$sourceTransferIds</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$chargeListParams['starting_after']]]></code>
      <code>$lastChargeId</code>
      <code>$sourceTransferIds[]</code>
    </MixedAssignment>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$charges->data]]></code>
      <code><![CDATA[$charges->has_more]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullArgument>
      <code><![CDATA[$exception->getStripeCode()]]></code>
    </PossiblyNullArgument>
    <UnnecessaryVarAnnotation>
      <code>\Stripe\Payout</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Application/Messenger/StripePayout.php">
    <MissingConstructor>
      <code>$connectAccountId</code>
      <code>$payoutId</code>
    </MissingConstructor>
  </file>
  <file src="src/Application/Persistence/RetrySafeEntityManager.php">
    <DeprecatedMethod>
      <code><![CDATA[EntityManager::create($this->connectionSettings, $this->ormConfig)]]></code>
    </DeprecatedMethod>
    <ImpureFunctionCall>
      <code>$func()</code>
      <code>random_int</code>
      <code>usleep</code>
    </ImpureFunctionCall>
    <ImpureMethodCall>
      <code>beginTransaction</code>
      <code>close</code>
      <code>commit</code>
      <code>error</code>
      <code>error</code>
      <code>flush</code>
      <code>resetManager</code>
      <code>rollback</code>
      <code>rollback</code>
      <code>warning</code>
    </ImpureMethodCall>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->ormConfig->getRepositoryFactory()->getRepository($this, $className)]]></code>
    </LessSpecificReturnStatement>
    <MethodSignatureMustProvideReturnType>
      <code>getRepository</code>
      <code>transactional</code>
    </MethodSignatureMustProvideReturnType>
    <MissingParamType>
      <code>$entity</code>
    </MissingParamType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$this->connectionSettings]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$ret</code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code>getRepository</code>
    </MoreSpecificReturnType>
    <TooManyArguments>
      <code>flush</code>
      <code>flush</code>
    </TooManyArguments>
  </file>
  <file src="src/Client/Campaign.php">
    <MixedArrayAccess>
      <code><![CDATA[$campaignResponse['ready']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$campaignResponse</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$campaignResponse</code>
    </MixedReturnStatement>
    <PossiblyNullReference>
      <code>getStatusCode</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>getById</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Client/Common.php">
    <MixedArrayAccess>
      <code><![CDATA[$this->clientSettings[$service][$property]]]></code>
      <code><![CDATA[$this->clientSettings['global']['timeout']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$this->clientSettings]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->clientSettings[$service][$property]]]></code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor>
      <code>$httpClient</code>
    </PropertyNotSetInConstructor>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[isset($this->httpClient)]]></code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/Client/Donation.php">
    <ImplicitToStringCast>
      <code><![CDATA[$ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A']]></code>
      <code><![CDATA[$ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A']]></code>
      <code><![CDATA[$ex->getResponse() ? $ex->getResponse()->getBody() : 'N/A']]></code>
    </ImplicitToStringCast>
    <MixedArrayAccess>
      <code><![CDATA[$donationCreatedResponse['donation']]]></code>
      <code><![CDATA[$donationCreatedResponse['donation']['donationId']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$donationCreatedResponse</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$donationCreatedResponse['donation']['donationId']]]></code>
    </MixedReturnStatement>
    <PossiblyFalseArgument>
      <code><![CDATA[getenv('WEBHOOK_DONATION_SECRET')]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullReference>
      <code>getBody</code>
      <code>getBody</code>
      <code>getBody</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>create</code>
      <code>put</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Client/Fund.php">
    <MixedInferredReturnType>
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[json_decode((string) $response->getBody(), true)]]></code>
      <code><![CDATA[json_decode((string) $response->getBody(), true)]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code>getById</code>
      <code>getForCampaign</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Domain/Campaign.php">
    <MissingConstructor>
      <code>$charity</code>
      <code>$currencyCode</code>
      <code>$endDate</code>
      <code>$isMatched</code>
      <code>$name</code>
      <code>$startDate</code>
    </MissingConstructor>
  </file>
  <file src="src/Domain/CampaignFunding.php">
    <InvalidMethodCall>
      <code>add</code>
      <code>contains</code>
    </InvalidMethodCall>
    <InvalidPropertyAssignmentValue>
      <code>new ArrayCollection()</code>
    </InvalidPropertyAssignmentValue>
    <PossiblyUnusedMethod>
      <code>getCurrencyCode</code>
      <code>isShared</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code>$allocationOrder</code>
    </PossiblyUnusedProperty>
    <PropertyNotSetInConstructor>
      <code>$allocationOrder</code>
      <code>$amount</code>
      <code>$amountAvailable</code>
      <code>$currencyCode</code>
      <code>$fund</code>
      <code>CampaignFunding</code>
      <code>CampaignFunding</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Domain/CampaignFundingRepository.php">
    <MissingTemplateParam>
      <code>CampaignFundingRepository</code>
    </MissingTemplateParam>
    <MixedInferredReturnType>
      <code>?CampaignFunding</code>
      <code>?CampaignFunding</code>
      <code>CampaignFunding</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$query->getOneOrNullResult()]]></code>
      <code><![CDATA[$query->getOneOrNullResult()]]></code>
      <code><![CDATA[$this->find($campaignFunding->getId(), LockMode::PESSIMISTIC_WRITE)]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$query->getResult()]]></code>
      <code>CampaignFunding[]</code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code>getAvailableFundings</code>
      <code>getOneWithWriteLock</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Domain/CampaignRepository.php">
    <MixedArgument>
      <code><![CDATA[$campaignData['charity']['donateLinkId']]]></code>
      <code><![CDATA[$campaignData['charity']['giftAidOnboardingStatus']]]></code>
      <code><![CDATA[$campaignData['charity']['hmrcReferenceNumber']]]></code>
      <code><![CDATA[$campaignData['charity']['id']]]></code>
      <code><![CDATA[$campaignData['charity']['name']]]></code>
      <code><![CDATA[$campaignData['charity']['regulatorNumber']]]></code>
      <code><![CDATA[$campaignData['charity']['regulatorRegion']]]></code>
      <code><![CDATA[$campaignData['charity']['stripeAccountId']]]></code>
      <code><![CDATA[$campaignData['currencyCode']]]></code>
      <code><![CDATA[$campaignData['currencyCode'] ?? 'GBP']]></code>
      <code><![CDATA[$campaignData['endDate']]]></code>
      <code><![CDATA[$campaignData['feePercentage']]]></code>
      <code><![CDATA[$campaignData['id']]]></code>
      <code><![CDATA[$campaignData['isMatched']]]></code>
      <code><![CDATA[$campaignData['startDate']]]></code>
      <code><![CDATA[$campaignData['title']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']]]></code>
      <code><![CDATA[$campaignData['charity']['donateLinkId']]]></code>
      <code><![CDATA[$campaignData['charity']['giftAidOnboardingStatus']]]></code>
      <code><![CDATA[$campaignData['charity']['hmrcReferenceNumber']]]></code>
      <code><![CDATA[$campaignData['charity']['id']]]></code>
      <code><![CDATA[$campaignData['charity']['name']]]></code>
      <code><![CDATA[$campaignData['charity']['regulatorNumber']]]></code>
      <code><![CDATA[$campaignData['charity']['regulatorRegion']]]></code>
      <code><![CDATA[$campaignData['charity']['stripeAccountId']]]></code>
      <code><![CDATA[$campaignData['currencyCode']]]></code>
      <code><![CDATA[$campaignData['currencyCode']]]></code>
      <code><![CDATA[$campaignData['currencyCode']]]></code>
      <code><![CDATA[$campaignData['endDate']]]></code>
      <code><![CDATA[$campaignData['feePercentage']]]></code>
      <code><![CDATA[$campaignData['id']]]></code>
      <code><![CDATA[$campaignData['isMatched']]]></code>
      <code><![CDATA[$campaignData['startDate']]]></code>
      <code><![CDATA[$campaignData['title']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$campaignData</code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$qb->getQuery()->getResult()]]></code>
      <code>Campaign[]</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificImplementedParamType>
      <code>$campaign</code>
    </MoreSpecificImplementedParamType>
    <ParamNameMismatch>
      <code>$campaign</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$regulator</code>
    </PossiblyNullArgument>
    <UndefinedMethod>
      <code>getById</code>
    </UndefinedMethod>
  </file>
  <file src="src/Domain/Charity.php">
    <MissingConstructor>
      <code>$donateLinkId</code>
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="src/Domain/CharityRepository.php">
    <MissingTemplateParam>
      <code>CharityRepository</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Domain/CommandLockKeys.php">
    <MissingConstructor>
      <code>$key_expiration</code>
      <code>$key_id</code>
      <code>$key_token</code>
    </MissingConstructor>
    <UnusedClass>
      <code>CommandLockKeys</code>
    </UnusedClass>
  </file>
  <file src="src/Domain/Donation.php">
    <ArgumentTypeCoercion>
      <code>$amount</code>
      <code>$amount</code>
      <code><![CDATA[$this->getAmount()]]></code>
      <code><![CDATA[$this->getAmount()]]></code>
      <code><![CDATA[$this->getCharityFee()]]></code>
      <code><![CDATA[$this->getCharityFeeGross()]]></code>
      <code><![CDATA[$this->getCharityFeeVat()]]></code>
      <code><![CDATA[$this->getFeeCoverAmount()]]></code>
      <code><![CDATA[$this->getTipAmount()]]></code>
      <code><![CDATA[$this->getTipAmount()]]></code>
      <code>$tipAmount</code>
    </ArgumentTypeCoercion>
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <MixedArgument>
      <code><![CDATA[$data['emailAddress']]]></code>
      <code><![CDATA[$data['emailAddress']]]></code>
      <code><![CDATA[$fundingWithdrawal->getAmount()]]></code>
      <code><![CDATA[$fundingWithdrawal->getAmount()]]></code>
      <code><![CDATA[$fundingWithdrawal->getAmount()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$fundingWithdrawal</code>
      <code>$fundingWithdrawal</code>
      <code>$fundingWithdrawal</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getAmount</code>
      <code>getAmount</code>
      <code>getAmount</code>
      <code>getCampaignFunding</code>
      <code>getCampaignFunding</code>
      <code>getFund</code>
      <code>getFund</code>
    </MixedMethodCall>
    <MixedReturnTypeCoercion>
      <code>self::$successStatuses</code>
      <code>string[]</code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidMethodCall>
      <code>add</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$this->donorFirstName]]></code>
      <code><![CDATA[$this->donorLastName]]></code>
      <code><![CDATA[$this->getCollectedAt()?->format('Y-m-d')]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getFund</code>
      <code>getFund</code>
      <code>toString</code>
      <code>toString</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>getTbgGiftAidRequestQueuedAt</code>
      <code>preUpdate</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>$amount</code>
      <code>$campaign</code>
      <code>$currencyCode</code>
      <code>$psp</code>
      <code>Donation</code>
      <code>Donation</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[$this->getCampaign()->getCharity()->getName()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA['']]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Domain/DonationRepository.php">
    <ArgumentTypeCoercion>
      <code>$amountAllocated</code>
      <code>$amountAllocated</code>
      <code>$amountMatchedAtStart</code>
      <code>$campaign</code>
      <code>$campaign</code>
      <code><![CDATA[$donation->getAmount()]]></code>
      <code><![CDATA[$funding->getAmountAvailable()]]></code>
      <code>$newWithdrawal</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getResultCacheImpl</code>
      <code>transactional</code>
      <code>transactional</code>
    </DeprecatedMethod>
    <MissingConstructor>
      <code>$campaignRepository</code>
      <code>$fundRepository</code>
      <code>$lockFactory</code>
      <code>$matchingAdapter</code>
      <code>$queuedForPersist</code>
      <code>$settings</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$funding</code>
      <code>$fundingWithdrawal</code>
      <code><![CDATA[$fundingWithdrawal->getAmount()]]></code>
      <code><![CDATA[$fundingWithdrawal->getAmount()]]></code>
      <code>$likelyAvailableFunds</code>
      <code>$lockEndTime - $lockStartTime</code>
      <code>$lockEndTime - $lockStartTime</code>
      <code>$newWithdrawal</code>
      <code><![CDATA[$newWithdrawal->getAmount()]]></code>
      <code>$salesforceDonationId</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$amountNewlyMatched</code>
      <code>$funding</code>
      <code>$funding</code>
      <code>$fundingWithdrawal</code>
      <code>$fundingWithdrawal</code>
      <code>$likelyAvailableFunds</code>
      <code>$newWithdrawal</code>
      <code>$newWithdrawals</code>
      <code>$result</code>
      <code>$salesforceDonationId</code>
      <code><![CDATA[$this->campaignRepository]]></code>
      <code>$totalAmountReleased</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getAmount</code>
      <code>getAmount</code>
      <code>getAmount</code>
      <code>getAmount</code>
      <code>getCampaignFunding</code>
      <code>getCurrencyCode</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$amountNewlyMatched</code>
      <code>$lockEndTime</code>
      <code>$lockEndTime</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$amountNewlyMatched</code>
      <code>$result</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$qb->getQuery()
            ->disableResultCache()
            ->getResult()]]></code>
      <code><![CDATA[$qb->getQuery()
            ->disableResultCache()
            ->getResult()]]></code>
      <code><![CDATA[$qb->getQuery()
            ->disableResultCache()
            ->getResult()]]></code>
      <code><![CDATA[$qb->getQuery()->getResult()]]></code>
      <code><![CDATA[$qb->getQuery()->getResult()]]></code>
      <code>Donation[]</code>
      <code>Donation[]</code>
      <code>Donation[]</code>
      <code>Donation[]</code>
      <code>Donation[]</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificImplementedParamType>
      <code>$donation</code>
      <code>$donation</code>
    </MoreSpecificImplementedParamType>
    <ParamNameMismatch>
      <code>$donation</code>
      <code>$donation</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code><![CDATA[$donation->getId()]]></code>
      <code><![CDATA[$donation->getSalesforceId()]]></code>
      <code><![CDATA[$donationData->currencyCode]]></code>
      <code><![CDATA[$donationData->currencyCode]]></code>
      <code>$funding</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedVariable>
      <code>$amountNewlyMatched</code>
      <code>$amountNewlyMatched</code>
      <code>$lockEndTime</code>
      <code>$lockEndTime</code>
      <code>$lockStartTime</code>
      <code>$lockStartTime</code>
      <code>$lockStartTime</code>
      <code>$lockStartTime</code>
      <code>$newTotal</code>
      <code>$totalAmountReleased</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>setFundRepository</code>
    </PossiblyUnusedMethod>
    <RedundantCast>
      <code><![CDATA[(string) $donationData->donationAmount]]></code>
      <code><![CDATA[(string) $donationData->feeCoverAmount]]></code>
      <code><![CDATA[(string) $donationData->tipAmount]]></code>
    </RedundantCast>
    <TooManyArguments>
      <code>refresh</code>
    </TooManyArguments>
    <UndefinedMethod>
      <code>create</code>
      <code>getCurrencyCode</code>
      <code>put</code>
    </UndefinedMethod>
  </file>
  <file src="src/Domain/Fund.php">
    <MissingConstructor>
      <code>$amount</code>
      <code>$amount</code>
      <code>$currencyCode</code>
      <code>$currencyCode</code>
      <code>$name</code>
      <code>$name</code>
    </MissingConstructor>
    <PossiblyUnusedMethod>
      <code>getAmount</code>
      <code>getName</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Domain/FundRepository.php">
    <ArgumentTypeCoercion>
      <code>$amountForCampaign</code>
      <code><![CDATA[$campaignFunding->getAmount()]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code>!$fund</code>
      <code>$fund</code>
    </DocblockTypeContradiction>
    <MissingConstructor>
      <code>$campaignFundingRepository</code>
      <code>$matchingAdapter</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$fundData</code>
      <code>$fundData</code>
      <code><![CDATA[$fundData['currencyCode']]]></code>
      <code><![CDATA[$fundData['currencyCode'] ?? 'GBP']]></code>
      <code><![CDATA[$fundData['id']]]></code>
      <code><![CDATA[$fundData['id']]]></code>
      <code><![CDATA[$fundData['id']]]></code>
      <code><![CDATA[$fundData['name'] ?? '']]></code>
      <code><![CDATA[$fundData['name'] ?? '']]></code>
      <code><![CDATA[$fundData['totalAmount']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$fundData['id']]]></code>
      <code><![CDATA[$fundData['name']]]></code>
      <code><![CDATA[$fundData['totalAmount']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$fundData</code>
      <code>$fundData</code>
      <code>$fundsData</code>
      <code>$newTotal</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$fundData['id']]]></code>
    </MixedOperand>
    <MoreSpecificImplementedParamType>
      <code>$fund</code>
    </MoreSpecificImplementedParamType>
    <ParamNameMismatch>
      <code>$fund</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$fund</code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$campaign->getId()]]></code>
      <code><![CDATA[$fund->getId()]]></code>
    </PossiblyNullOperand>
    <UndefinedMethod>
      <code>getById</code>
      <code>getForCampaign</code>
    </UndefinedMethod>
  </file>
  <file src="src/Domain/FundingWithdrawal.php">
    <MissingConstructor>
      <code>$amount</code>
      <code>$donation</code>
    </MissingConstructor>
    <PossiblyUnusedProperty>
      <code>$donation</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Domain/FundingWithdrawalRepository.php">
    <MissingTemplateParam>
      <code>FundingWithdrawalRepository</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Domain/SalesforceProxyRepository.php">
    <MissingConstructor>
      <code>$client</code>
      <code>$client</code>
      <code>$client</code>
      <code>$logger</code>
      <code>$logger</code>
      <code>$logger</code>
    </MissingConstructor>
    <TypeDoesNotContainType>
      <code><![CDATA[!$this->client]]></code>
      <code><![CDATA[$this->client]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Domain/SalesforceReadProxy.php">
    <PossiblyUnusedMethod>
      <code>getSalesforceLastPull</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Domain/SalesforceReadProxyRepository.php">
    <ArgumentTypeCoercion>
      <code>$proxy</code>
    </ArgumentTypeCoercion>
    <MissingParamType>
      <code>$autoSave</code>
    </MissingParamType>
    <PossiblyNullOperand>
      <code><![CDATA[$proxy->getSalesforceId()]]></code>
      <code><![CDATA[$proxy->getSalesforceId()]]></code>
      <code><![CDATA[$proxy->getSalesforceId()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Domain/SalesforceWriteProxy.php">
    <RedundantCondition>
      <code><![CDATA[$this->createdAt !== null]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Domain/SalesforceWriteProxyRepository.php">
    <ArgumentTypeCoercion>
      <code>$proxy</code>
      <code>$proxy</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getSalesforceId()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getId()]]></code>
      <code><![CDATA[$proxy->getId()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Domain/TimestampsTrait.php">
    <MissingConstructor>
      <code>$createdAt</code>
      <code>$createdAt</code>
      <code>$createdAt</code>
      <code>$createdAt</code>
      <code>$createdAt</code>
      <code>$updatedAt</code>
      <code>$updatedAt</code>
      <code>$updatedAt</code>
      <code>$updatedAt</code>
      <code>$updatedAt</code>
    </MissingConstructor>
    <PossiblyUnusedMethod>
      <code>updatedNow</code>
      <code>updatedNow</code>
      <code>updatedNow</code>
      <code>updatedNow</code>
      <code>updatedNow</code>
      <code>updatedNow</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Migrations/Version20191109151808.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191109215947.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191110112409.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191110121708.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191110162524.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191113083835.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191119154404.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20191126051351.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200713104818.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200720102604.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200804150108.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200804164545.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200826135513.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20200925104750.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201113093420.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201114144300.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201118043500.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201119104427.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201119205321.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20201208101014.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210122113600.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210311133325.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210408183019.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210422163630.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210907103000.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20210907110200.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20211029152640.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20211029163214.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20211029164148.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20211029225612.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20211209083200.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20220104121300.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20220104135535.php">
    <DeprecatedMethod>
      <code>getName</code>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20220201161400.php">
    <DeprecatedMethod>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20220201171800.php">
    <DeprecatedMethod>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Migrations/Version20220402132739.php">
    <DeprecatedMethod>
      <code>getName</code>
    </DeprecatedMethod>
  </file>
  <file src="tests/Application/Actions/Donations/CreateTest.php">
    <MixedArrayAccess>
      <code><![CDATA[$payloadArray['error']]]></code>
      <code><![CDATA[$payloadArray['error']]]></code>
      <code><![CDATA[$payloadArray['error']['description']]]></code>
      <code><![CDATA[$payloadArray['error']['type']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
      <code><![CDATA[$payloadArray['jwt']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$payloadArray</code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType>
      <code>assertFalse</code>
      <code>assertFalse</code>
      <code>assertFalse</code>
      <code>assertFalse</code>
      <code>assertFalse</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="tests/Application/Actions/Donations/GetTest.php">
    <MixedArrayAccess>
      <code><![CDATA[$payloadArray['createdTime']]]></code>
    </MixedArrayAccess>
  </file>
  <file src="tests/Application/Actions/Donations/UpdateHandlesLockExceptionTest.php">
    <InternalMethod>
      <code><![CDATA[new LockWaitTimeoutException($testCase->createStub(DriverException::class), null)]]></code>
    </InternalMethod>
    <PossiblyUnusedParam>
      <code>$newStatus</code>
    </PossiblyUnusedParam>
  </file>
  <file src="tests/Application/Actions/Donations/UpdateTest.php">
    <MixedArrayAccess>
      <code><![CDATA[$payloadArray['billingPostalAddress']]]></code>
      <code><![CDATA[$payloadArray['billingPostalAddress']]]></code>
      <code><![CDATA[$payloadArray['billingPostalAddress']]]></code>
      <code><![CDATA[$payloadArray['billingPostalAddress']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFee']]]></code>
      <code><![CDATA[$payloadArray['charityFeeVat']]]></code>
      <code><![CDATA[$payloadArray['charityFeeVat']]]></code>
      <code><![CDATA[$payloadArray['charityFeeVat']]]></code>
      <code><![CDATA[$payloadArray['charityFeeVat']]]></code>
      <code><![CDATA[$payloadArray['charityFeeVat']]]></code>
      <code><![CDATA[$payloadArray['countryCode']]]></code>
      <code><![CDATA[$payloadArray['countryCode']]]></code>
      <code><![CDATA[$payloadArray['currencyCode']]]></code>
      <code><![CDATA[$payloadArray['currencyCode']]]></code>
      <code><![CDATA[$payloadArray['donationAmount']]]></code>
      <code><![CDATA[$payloadArray['donationAmount']]]></code>
      <code><![CDATA[$payloadArray['donationAmount']]]></code>
      <code><![CDATA[$payloadArray['donationAmount']]]></code>
      <code><![CDATA[$payloadArray['donationAmount']]]></code>
      <code><![CDATA[$payloadArray['emailAddress']]]></code>
      <code><![CDATA[$payloadArray['emailAddress']]]></code>
      <code><![CDATA[$payloadArray['firstName']]]></code>
      <code><![CDATA[$payloadArray['firstName']]]></code>
      <code><![CDATA[$payloadArray['giftAid']]]></code>
      <code><![CDATA[$payloadArray['giftAid']]]></code>
      <code><![CDATA[$payloadArray['giftAid']]]></code>
      <code><![CDATA[$payloadArray['giftAid']]]></code>
      <code><![CDATA[$payloadArray['giftAid']]]></code>
      <code><![CDATA[$payloadArray['homeAddress']]]></code>
      <code><![CDATA[$payloadArray['homeAddress']]]></code>
      <code><![CDATA[$payloadArray['homePostcode']]]></code>
      <code><![CDATA[$payloadArray['homePostcode']]]></code>
      <code><![CDATA[$payloadArray['lastName']]]></code>
      <code><![CDATA[$payloadArray['lastName']]]></code>
      <code><![CDATA[$payloadArray['matchedAmount']]]></code>
      <code><![CDATA[$payloadArray['matchedAmount']]]></code>
      <code><![CDATA[$payloadArray['matchedAmount']]]></code>
      <code><![CDATA[$payloadArray['optInCharityEmail']]]></code>
      <code><![CDATA[$payloadArray['optInCharityEmail']]]></code>
      <code><![CDATA[$payloadArray['optInCharityEmail']]]></code>
      <code><![CDATA[$payloadArray['optInCharityEmail']]]></code>
      <code><![CDATA[$payloadArray['optInTbgEmail']]]></code>
      <code><![CDATA[$payloadArray['optInTbgEmail']]]></code>
      <code><![CDATA[$payloadArray['optInTbgEmail']]]></code>
      <code><![CDATA[$payloadArray['optInTbgEmail']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['status']]]></code>
      <code><![CDATA[$payloadArray['tipAmount']]]></code>
      <code><![CDATA[$payloadArray['tipAmount']]]></code>
      <code><![CDATA[$payloadArray['tipAmount']]]></code>
      <code><![CDATA[$payloadArray['tipAmount']]]></code>
      <code><![CDATA[$payloadArray['tipAmount']]]></code>
      <code><![CDATA[$payloadArray['tipGiftAid']]]></code>
      <code><![CDATA[$payloadArray['tipGiftAid']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
      <code>$payloadArray</code>
    </MixedAssignment>
  </file>
  <file src="tests/Application/Actions/GetPaymentMethodsTest.php">
    <MixedArgument>
      <code>$payloadArray</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$payloadArray['data']]]></code>
      <code><![CDATA[$payloadArray['data'][0]]]></code>
      <code><![CDATA[$payloadArray['data'][0]['card']]]></code>
      <code><![CDATA[$payloadArray['data'][0]['card']['last4']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$payloadArray</code>
    </MixedAssignment>
  </file>
  <file src="tests/Application/Actions/Hooks/StripeChargeUpdateTest.php">
    <MixedArgument>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
    </MixedAssignment>
  </file>
  <file src="tests/Application/Actions/Hooks/StripePayoutUpdateTest.php">
    <MixedArgument>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
      <code><![CDATA[$container->get('settings')['stripe']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
      <code>$webhookSecret</code>
    </MixedAssignment>
  </file>
  <file src="tests/Application/Actions/StatusTest.php">
    <DeprecatedClass>
      <code>Setup::createAnnotationMetadataConfiguration(
            [self::DOMAIN_DIR],
            false, // Simulate live mode for these tests.
            $proxyPath,
            $cache,
        )</code>
      <code>new ArrayCache()</code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[ConsoleRunner::createHelperSet($container->get(EntityManagerInterface::class))]]></code>
      <code>setMetadataCacheImpl</code>
    </DeprecatedMethod>
    <MixedArgument>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$config->getProxyDir()]]></code>
      <code><![CDATA[$config->getProxyNamespace()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>get</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="tests/Application/Auth/DonationRecaptchaMiddlewareTest.php">
    <MixedArgument>
      <code><![CDATA[$container->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$container->get(ReCaptcha::class)]]></code>
      <code><![CDATA[$container->get(SerializerInterface::class)]]></code>
    </MixedArgument>
    <PossiblyNullReference>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Application/Auth/PersonManagementAuthMiddlewareTest.php">
    <MixedAssignment>
      <code>$middleware</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>process</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Application/Auth/PersonWithPasswordAuthMiddlewareTest.php">
    <MixedAssignment>
      <code>$middleware</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>process</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Application/Commands/AlwaysAvailableLockStore.php">
    <MissingParamType>
      <code>$ttl</code>
    </MissingParamType>
  </file>
  <file src="tests/Application/Commands/ClaimGiftAidTest.php">
    <MixedArgument>
      <code><![CDATA[$donationRepoProphecy->reveal()]]></code>
      <code><![CDATA[$entityManagerProphecy->reveal()]]></code>
      <code><![CDATA[$routableBusProphecy->reveal()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$this->getExpectedStamps($testDonation->getUuid())]]></code>
      <code><![CDATA[$this->getExpectedStamps($testDonation->getUuid())]]></code>
      <code><![CDATA[$this->getExpectedStamps($testDonation->getUuid())]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="tests/Application/Commands/ExpireMatchFundsTest.php">
    <MixedArgument>
      <code><![CDATA[$donationRepoProphecy->reveal()]]></code>
    </MixedArgument>
  </file>
  <file src="tests/Application/Commands/HandleOutOfSyncFundsTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->getFundingInSync()->getAmount()]]></code>
      <code><![CDATA[$this->getFundingInSync()->getAmountAvailable()]]></code>
      <code><![CDATA[$this->getFundingOverMatched()->getAmount()]]></code>
      <code><![CDATA[$this->getFundingOverMatched()->getAmountAvailable()]]></code>
      <code><![CDATA[$this->getFundingUnderMatched()->getAmount()]]></code>
      <code><![CDATA[$this->getFundingUnderMatched()->getAmountAvailable()]]></code>
      <code><![CDATA[$this->getFundingUnderMatchedWithNothingAllocated()->getAmount()]]></code>
      <code><![CDATA[$this->getFundingUnderMatchedWithNothingAllocated()->getAmountAvailable()]]></code>
    </ArgumentTypeCoercion>
    <MissingParamType>
      <code>$expectFixes</code>
    </MissingParamType>
    <MixedArgument>
      <code><![CDATA[$this->getCampaignFundingRepoPropechy()->reveal()]]></code>
      <code><![CDATA[$this->getCampaignFundingRepoPropechy()->reveal()]]></code>
      <code><![CDATA[$this->getFundingWithdrawalRepoProphecy()->reveal()]]></code>
      <code><![CDATA[$this->getFundingWithdrawalRepoProphecy()->reveal()]]></code>
    </MixedArgument>
  </file>
  <file src="tests/Application/Commands/ResetMatchingTest.php">
    <InternalClass>
      <code><![CDATA[PDOException::new(
                    new \PDOException(
                        'SQLSTATE[42S02]: Base table or view not found: 1146 ' .
                        "Table 'matchbot.CampaignFunding' doesn't exist"
                    )
                )]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[PDOException::new(
                    new \PDOException(
                        'SQLSTATE[42S02]: Base table or view not found: 1146 ' .
                        "Table 'matchbot.CampaignFunding' doesn't exist"
                    )
                )]]></code>
      <code><![CDATA[new TableNotFoundException(
                // Doctrine PDO\Exception (a DriverException subclass) wraps native \PDOException.
                PDOException::new(
                    new \PDOException(
                        'SQLSTATE[42S02]: Base table or view not found: 1146 ' .
                        "Table 'matchbot.CampaignFunding' doesn't exist"
                    )
                ),
                new Query('SELECT test...', [], []),
            )]]></code>
    </InternalMethod>
  </file>
  <file src="tests/Application/Commands/UpdateCampaignsTest.php">
    <MixedArgument>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(EntityManagerInterface::class)]]></code>
    </MixedArgument>
    <PossiblyNullReference>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Application/Fees/CalculatorTest.php">
    <MixedArgument>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
    </MixedArgument>
    <PossiblyNullReference>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Application/Messenger/Handler/GiftAidResultHandlerTest.php">
    <MixedArgument>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$container->get(LoggerInterface::class)]]></code>
      <code><![CDATA[$container->get(LoggerInterface::class)]]></code>
    </MixedArgument>
  </file>
  <file src="tests/Application/Messenger/Handler/StripePayoutHandlerTest.php">
    <MixedArgument>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(DonationRepository::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(EntityManagerInterface::class)]]></code>
      <code><![CDATA[$container->get(StripeClient::class)]]></code>
      <code><![CDATA[$container->get(StripeClient::class)]]></code>
      <code><![CDATA[$container->get(StripeClient::class)]]></code>
      <code><![CDATA[$container->get(StripeClient::class)]]></code>
    </MixedArgument>
    <PossiblyUndefinedMethod>
      <code>balanceTransactions</code>
      <code>balanceTransactions</code>
      <code>balanceTransactions</code>
      <code>balanceTransactions</code>
      <code>charges</code>
      <code>charges</code>
      <code>charges</code>
      <code>charges</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
    </PossiblyUndefinedMethod>
    <UndefinedPropertyAssignment>
      <code><![CDATA[$stripeClientProphecy->balanceTransactions]]></code>
      <code><![CDATA[$stripeClientProphecy->balanceTransactions]]></code>
      <code><![CDATA[$stripeClientProphecy->balanceTransactions]]></code>
      <code><![CDATA[$stripeClientProphecy->balanceTransactions]]></code>
      <code><![CDATA[$stripeClientProphecy->charges]]></code>
      <code><![CDATA[$stripeClientProphecy->charges]]></code>
      <code><![CDATA[$stripeClientProphecy->charges]]></code>
      <code><![CDATA[$stripeClientProphecy->charges]]></code>
    </UndefinedPropertyAssignment>
  </file>
  <file src="tests/Application/Persistence/RetrySafeEntityManagerTest.php">
    <InternalClass>
      <code><![CDATA[new ReturnCallback(static function () use ($retrySafeEm, $underlyingEmToResetTo) {
                $retrySafeEm->setEntityManager($underlyingEmToResetTo);
            })]]></code>
    </InternalClass>
    <InternalMethod>
      <code>addToAssertionCount</code>
      <code><![CDATA[new ReturnCallback(static function () use ($retrySafeEm, $underlyingEmToResetTo) {
                $retrySafeEm->setEntityManager($underlyingEmToResetTo);
            })]]></code>
    </InternalMethod>
    <MixedArgument>
      <code><![CDATA[$container->get('settings')['doctrine']['connection']]]></code>
      <code><![CDATA[$container->get('settings')['doctrine']['connection']]]></code>
      <code><![CDATA[$container->get('settings')['doctrine']['connection']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$container->get('settings')['doctrine']]]></code>
      <code><![CDATA[$container->get('settings')['doctrine']]]></code>
      <code><![CDATA[$container->get('settings')['doctrine']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$config</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>Configuration</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>setRepositoryFactory</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code>$config</code>
      <code>$config</code>
    </MixedReturnStatement>
  </file>
  <file src="tests/Application/VatTrait.php">
    <MixedArrayAssignment>
      <code><![CDATA[$settings['stripe']['fee']]]></code>
      <code><![CDATA[$settings['stripe']['fee']]]></code>
      <code><![CDATA[$settings['stripe']['fee']]]></code>
      <code><![CDATA[$settings['stripe']['fee']['vat_live_date']]]></code>
      <code><![CDATA[$settings['stripe']['fee']['vat_percentage_live']]]></code>
      <code><![CDATA[$settings['stripe']['fee']['vat_percentage_old']]]></code>
    </MixedArrayAssignment>
  </file>
  <file src="tests/Domain/DonationRepositoryTest.php">
    <MixedArgument>
      <code><![CDATA[$donationClientProphecy->reveal()]]></code>
      <code><![CDATA[$lockFactoryProphecy->reveal()]]></code>
      <code><![CDATA[$matchingAdapterProphecy->reveal()]]></code>
      <code>$settings</code>
      <code>$settings</code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get('settings')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$settings</code>
    </MixedAssignment>
    <PossiblyNullReference>
      <code>get</code>
      <code>get</code>
      <code>get</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Domain/DonationTest.php">
    <InternalMethod>
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="tests/Domain/FundRepositoryTest.php">
    <MixedArgument>
      <code><![CDATA[$this->getAppInstance()->getContainer()->get(LoggerInterface::class)]]></code>
    </MixedArgument>
    <PossiblyNullReference>
      <code>get</code>
    </PossiblyNullReference>
    <UndefinedMethod>
      <code>getAmount</code>
      <code>getName</code>
    </UndefinedMethod>
  </file>
  <file src="tests/Monolog/Processor/AwsTraceIdProcessorTest.php">
    <PossiblyNullReference>
      <code>set</code>
      <code>set</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>set</code>
      <code>set</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="tests/TestCase.php">
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
  </file>
</files>
